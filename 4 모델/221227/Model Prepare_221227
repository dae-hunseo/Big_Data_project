{"cells":[{"cell_type":"markdown","id":"304de2a1","metadata":{"id":"304de2a1"},"source":["# 기본 준비"]},{"cell_type":"code","execution_count":1,"id":"cdd43360","metadata":{"ExecuteTime":{"end_time":"2022-12-27T00:14:23.118410Z","start_time":"2022-12-27T00:14:18.652351Z"},"id":"cdd43360","executionInfo":{"status":"ok","timestamp":1672186068971,"user_tz":-540,"elapsed":2024,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import copy\n","from tqdm.notebook import tqdm\n","\n","import matplotlib.pyplot as plt\n","import matplotlib.ticker as ticker\n","\n","%matplotlib inline\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score\n","from sklearn.metrics import f1_score, confusion_matrix, precision_recall_curve, roc_curve\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.preprocessing import Binarizer\n","from imblearn.over_sampling import SMOTE, ADASYN"]},{"cell_type":"code","execution_count":2,"id":"587481fe","metadata":{"ExecuteTime":{"end_time":"2022-12-27T00:14:23.163264Z","start_time":"2022-12-27T00:14:23.151330Z"},"id":"587481fe","executionInfo":{"status":"ok","timestamp":1672186069398,"user_tz":-540,"elapsed":433,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"outputs":[],"source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.linear_model import SGDClassifier\n","from sklearn.svm import SVC, LinearSVC, NuSVC\n","\n","from lightgbm import LGBMClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","\n","from sklearn.linear_model import LogisticRegression\n","import xgboost as xgb\n","from xgboost import plot_importance\n","from xgboost import XGBClassifier\n","from sklearn.neighbors import KNeighborsClassifier"]},{"cell_type":"code","execution_count":3,"id":"f5118ab9","metadata":{"ExecuteTime":{"end_time":"2022-12-27T00:14:25.924770Z","start_time":"2022-12-27T00:14:25.911808Z"},"code_folding":[],"id":"f5118ab9","executionInfo":{"status":"ok","timestamp":1672186069399,"user_tz":-540,"elapsed":12,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"outputs":[],"source":["# 오차행렬 및 평가지표 출력\n","def get_clf_eval(y_test, pred=None, pred_proba=None):\n","    confusion = confusion_matrix(y_test, pred)\n","    accuracy = accuracy_score(y_test, pred)\n","    precision = precision_score(y_test, pred)\n","    recall = recall_score(y_test, pred)\n","    f1 = f1_score(y_test, pred)\n","    roc_auc = 0\n","    \n","    if pred_proba:\n","        roc_auc = roc_auc_score(y_test, pred_proba)\n","    \n","    print('오차 행렬')\n","    print(confusion)\n","\n","    print('정확도: {0:.4f}, 정밀도: {1:.4f}, 재현율: {2:.4f}, F1: {3:.4f}, AUC:{4:.4f}'.format(accuracy, precision, recall, f1, roc_auc))\n","\n","\n","# 임계값 조정하여 오차행렬 및 평가지표 출력\n","def get_eval_by_threshold(y_test, pred, pred_proba_c1, thresholds):\n","    pred_proba_c1 = pred_proba_c1.reshape(-1, 1)\n","    for custom_threshold in thresholds:\n","        binar = Binarizer(threshold=custom_threshold).fit(pred_proba_c1)\n","        custom_predict = binar.transform(pred_proba_c1)\n","        print(\"분류 임계값:\", custom_threshold)\n","        get_clf_eval(y_test, custom_predict, pred_proba_c1)\n","    \n","\n","# 임계값별로 precison_recall_curve 그리기\n","def precision_recall_curve_plot(y_test, pred_proba_c1): \n","    precisions, recalls, thresholds = precision_recall_curve(y_test, pred_proba_c1)\n","    \n","    plt.figure(figsize=(8,6))\n","    threshold_boundary = thresholds.shape[0]\n","\n","    plt.plot(thresholds, precisions[0:threshold_boundary], linestyle='--', label='precision') \n","    plt.plot(thresholds, recalls[0:threshold_boundary],label='recall')\n","\n","    start, end = plt.xlim()\n","    plt.xticks(np.round(np.arange(start, end, 0.1),2))\n","    \n","    plt.xlabel('Threshold value'); plt.ylabel('Precision and Recall value')\n","    plt.legend(); plt.grid()\n","    plt.show()"]},{"cell_type":"code","source":["def make_eval_df(model):\n","    model.fit(X_train, y_train)\n","    \n","    pred = model.predict(X_test)\n","    confusion = str(confusion_matrix(y_test, pred)).replace(\"\\n\", \"\").replace(\"[ \", \"[\")\n","    accuracy = accuracy_score(y_test, pred)\n","    precision = precision_score(y_test, pred)\n","    recall = recall_score(y_test, pred)\n","    f1 = f1_score(y_test, pred)\n","\n","    try:\n","        pred_proba = model.predict_proba(X_test)[:, 1]\n","        roc_auc = roc_auc_score(y_test, pred_proba)\n","    except:\n","        roc_auc = 0\n","    \n","    return pd.DataFrame([{\"model\": model, \n","                          \"confusion\": confusion,\n","                          \"accuracy\": accuracy,\n","                          \"precision\": precision,\n","                          \"recall\": recall,\n","                          \"f1\": f1,\n","                          \"roc_auc\": roc_auc}])"],"metadata":{"id":"y4DhLHWOGu-k","executionInfo":{"status":"ok","timestamp":1672186069399,"user_tz":-540,"elapsed":11,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"id":"y4DhLHWOGu-k","execution_count":4,"outputs":[]},{"cell_type":"code","source":["def make_eval_df_reg(model):\n","    model.fit(X_train, y_train)\n","    \n","    pred = model.predict(X_test)\n","\n","    mae = mean_absolute_error(y_test, pred)\n","    \n","    confusion = str(confusion_matrix(y_test, pred)).replace(\"\\n\", \"\").replace(\"[ \", \"[\")\n","    accuracy = accuracy_score(y_test, pred)\n","    precision = precision_score(y_test, pred)\n","    recall = recall_score(y_test, pred)\n","    f1 = f1_score(y_test, pred)\n","\n","    try:\n","        pred_proba = model.predict_proba(X_test)[:, 1]\n","        roc_auc = roc_auc_score(y_test, pred_proba)\n","    except:\n","        roc_auc = 0\n","    \n","    return pd.DataFrame([{\"model\": model, \n","                          \"confusion\": confusion,\n","                          \"accuracy\": accuracy,\n","                          \"precision\": precision,\n","                          \"recall\": recall,\n","                          \"f1\": f1,\n","                          \"roc_auc\": roc_auc}])"],"metadata":{"id":"AEueGJwmKxys","executionInfo":{"status":"ok","timestamp":1672186069401,"user_tz":-540,"elapsed":12,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"id":"AEueGJwmKxys","execution_count":5,"outputs":[]},{"cell_type":"markdown","id":"618c091f","metadata":{"id":"618c091f"},"source":["## 데이터 준비"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2-oi9DQrFvWr","executionInfo":{"status":"ok","timestamp":1672186092538,"user_tz":-540,"elapsed":23149,"user":{"displayName":"손지호","userId":"15912181456175758015"}},"outputId":"b183b06a-a643-4fe2-be5d-9e0c9c06e454"},"id":"2-oi9DQrFvWr","execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["data_path = \"/content/drive/MyDrive/multicampus/data/\"\n","# data_path = \"../data/\""],"metadata":{"id":"SGuyVwxkFkT6","executionInfo":{"status":"ok","timestamp":1672186092539,"user_tz":-540,"elapsed":8,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"id":"SGuyVwxkFkT6","execution_count":7,"outputs":[]},{"cell_type":"code","execution_count":8,"id":"217b5fec","metadata":{"ExecuteTime":{"end_time":"2022-12-27T00:14:28.302102Z","start_time":"2022-12-27T00:14:28.285031Z"},"id":"217b5fec","executionInfo":{"status":"ok","timestamp":1672186092539,"user_tz":-540,"elapsed":8,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"outputs":[],"source":["def prepare_data_smote():\n","    brfss = pd.read_csv(data_path + \"brfss.csv\")\n","    X = brfss.drop([\"HEARTDISEASE\", \"ALCOHOL\"], axis=1)\n","    y = brfss[\"HEARTDISEASE\"]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2)\n","\n","    smote = SMOTE()\n","    X_train, y_train = smote.fit_resample(X_train, y_train)\n","    print(y_train.value_counts())\n","    print(y_test.value_counts())\n","    \n","    return X_train, X_test, y_train, y_test"]},{"cell_type":"code","execution_count":9,"id":"0aa0e5fa","metadata":{"ExecuteTime":{"end_time":"2022-12-27T00:14:28.698851Z","start_time":"2022-12-27T00:14:28.687276Z"},"id":"0aa0e5fa","executionInfo":{"status":"ok","timestamp":1672186092539,"user_tz":-540,"elapsed":8,"user":{"displayName":"손지호","userId":"15912181456175758015"}}},"outputs":[],"source":["def prepare_data_adasyn():\n","    brfss = pd.read_csv(\"../data/brfss.csv\")\n","    X = brfss.drop([\"HEARTDISEASE\", \"ALCOHOL\"], axis=1)\n","    y = brfss[\"HEARTDISEASE\"]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2)\n","    adasyn = ADASYN()\n","    X_train, y_train = adasyn.fit_resample(X_train, y_train)\n","\n","    print(y_train.value_counts())\n","    print(y_test.value_counts())\n","\n","    return X_train, X_test, y_train, y_test"]},{"cell_type":"markdown","id":"e7e378da","metadata":{"id":"e7e378da"},"source":["# 할 일\n","- 하이퍼 파라미터 튜닝\n","    - 각 모델 document 보면서 찾아보기\n","- 임계점 변경\n","    - 변경해보면서 최적값 찾기"]},{"cell_type":"markdown","id":"76a86cf6","metadata":{"id":"76a86cf6"},"source":["# 박민정"]},{"cell_type":"markdown","id":"7c5c3227","metadata":{"id":"7c5c3227"},"source":["## Data\n","- 건강검진 데이터의 KIDNEY 조건 변경 검토\n","```\n","data[\"KIDNEY\"] = data.apply(lambda x: 1 if x[\"요단백\"]>=3 or x[\"혈청크레아티닌\"]>1.7 or x[\"혈청크레아티닌\"]<0.8 else 0, axis=1)\n","0    1295062\n","1     744182\n","```\n","```\n","data[\"KIDNEY\"] = data.apply(lambda x: 1 if x[\"요단백\"]>=3 and (x[\"혈청크레아티닌\"]>1.7 or x[\"혈청크레아티닌\"]<0.8) else 0, axis=1)\n","0    2020722\n","1      18522\n","```"]},{"cell_type":"markdown","id":"25ca6152","metadata":{"id":"25ca6152"},"source":["## DecisionTree"]},{"cell_type":"markdown","id":"2954a74d","metadata":{"id":"2954a74d"},"source":["### 모델링\n","- 하이퍼 파라미터    \n","    - criterion: ```\"gini\", \"entropy\", \"log_loss\"```\n","    - splitter: ```\"best\", \"random\"```\n","    - max_depth: ```~~~~~~~~~~~~~```   \n","    - max_features: ```\"sqrt\", \"log2\", None```\n","    - min_impurity_decrease: ```~~~~~~~~~~~~~~```\n","    - class_weight: ```\"balanced\", None```\n","    - ccp_alpha: ```~~~~~~~~~~~~~~~~~~```\n","- 사용하지 않은 하이퍼 파라미터\n","    - min_samples_split: ```2, 20, 40, 60, 80, 100```\n","    - min_samples_leaf: ```1, 5, 10, 15```\n","    - 이유: 값 사이에 precision의 차이가 없음\n","\n","https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html"]},{"cell_type":"markdown","source":["#### 1차"],"metadata":{"id":"cGolMA5VQwHC"},"id":"cGolMA5VQwHC"},{"cell_type":"code","execution_count":null,"id":"c7a5d393","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:42:12.725005Z","start_time":"2022-12-26T15:27:56.307567Z"},"colab":{"referenced_widgets":["8518e52d4f73487eb40a3967b28012e1","8d00c444c8b143f59af4291254ab1996","0688935c94cc4c1cb519faa16a794056","45949b1cf6754c08af1908b811572eea","067aef279fe8482fb83859ea08b1a512","cd78f4fd24fd46f6bc362c40dbdcf25c","daaf104e37d74dd69edb55aefbe57d01","990387fa34424d47abc4061c98ae9540","0cab2949cf1c4cdb9d965ea2e1b545a6","feed65ccc174482985dc91d3194c037a","4ebbdf77295c40ef8455ca29bc83247b","5dbf16170419436dbcaad80beea82303","a5bc87b933fa46f5875607a83fe3d062","e8a57ebb3618402eb751cb2e209cc05c","f3cb6f21e8444dff8ad008eaf11fdcba","a79086e8e7f047809fb65d6ef6a06373","4d6965c15be247bc816898dba06ac42d","79f5c1eb454b47cfa35a26982692f09f","e69ddf6696794d638f124500a704c8a5","6c37bd8e0192412f88ca074791221527","4d50978a22744b8cb80296387c425f11","108edcc80c964e19afc5460c15a14255","0caa9ca5e8cc4729860724bb4dea4edc","644e769dff414de09d253275b9fea5ea","f54d9a50767641e0a3879d2e3c72103f","161992bd98224f76b45921f88e1f762c","59fa310d8f5f4a9d836ccbac05b4e00d","10769b0201c249ff89176a3a8f59603d","7673c20557da4d2fa907e9fe127d21f2","fa7a77bc47c74bccbad3e4c9c224f750","b009c7e6cc1c4723b2fb04cb7ed1b90a","51f2447b9ad943d681dbf59fc777388a","dd24a31472244b5cba1d252a86762f34","46e28d1eefe64c9988009088293d9ae0","3fedeebecd5641dda0af7514dc64b223","a3347c3d019f4819af118c342313745d","f94a5d173a1f4741a28270294bd25e99","16828252c8b04d749e07945080862bf2","4b7182fea1b9489283f6251adea66620","5ca332c3d3dc44e9b68512f67eaa6b25","755eaff9594740fea7a64117bf821750","c874e351d9dd4d46a556a3d69ae1e4aa","e11be9ccba774a07853180b373d8769a","09e3a0e0beb34a2fae0457b463799969","ba899bce331d436097fa9f8a69ea1a56","377fdff37839409b90c6c5ed985c91d2","e015b797e31f40348296e5118202163e","218373c6c18d4aa896d4b7ce7f6eba97","5415100b766540c08072aa234c93a4e5","b63808a2923c41e4b78dff1551a035b8","f80de651c71946d7a0d389d29d5eeb90","8087d0669013474b85bdf1b3847989b8","926f01bdc1f648eaa64646d8ea153eaa","3ae72b927e394994918039664a894f61","ce7a0460994d474cb447e4977725e3e2","09f34d1f238b4e0a916fbbd8abeb29bf","e3b43df5f1b84eaa96620a4935d11b5c","a645e977f6fa4883921e0ede1e6a023c","db2e7b3238a143ad8aa3d3aa394c756d","f16f2fafecae4e468d74de27b6c1b0e4","78ecc19ce44b4c3294a0d2b1a89b15d8","1d3959be39bf4774a8c183a743089e77","b5ed68af2bf445c6bdb62858d319ff77","3791c76c7b88438b9853929a64a09b68","f4fa664a6f0e440a8eafea69d5af25d0","7600ac1c77b14b4c89f5eef675ced957","4159893277014c32ba47ba3bf8273292","b6f23b0a168e41b2bfe3ca3fbbec7065","17e1046d49ec4ff59ff3f5d8ff0c6f53","23812c860adf45039478eae45a99f9fa","f92ceeb798e845fbaa5bf164abe33fdd","584f7e36b26341e3a0ed40036aa0121e","af1c5e7acf08419ab2ca5f8a965da2f7","6d5b9738c3024dd2958be2c9b835f704","4c6f26a0c4b04d3cba40a6264d0996d7","7aea76cdc11c478c867314a15ce0ca40","1ac54155bcf2428381a00141f254b9c0","482d136eecbe461fa29d27e95c025773","7fedb2d7c60e4e05afce84b27b5ebd5c","529d1f42ad5849e082c50b6fb0713dc0","a64d862726e543e9b832216600c454c1","ea7f6f48e7c04979914df653af371a80","f14d44305d634f4fa0cf2224e9cb6c79","93cb4bd1babb4d6d89f6702fb89c04c6","dd70744bacaa42f791641511d3c6cd93","6432011ca84f4195b2902d1d04ec41cc","f48387290ea14ade8946d0d4282eacb3","d283f8a4c82b41e98fe46d702e666f6a","bc43cf2f4684467eb94ab480fa51dd44","12af1c3c1ad2436390f894c580474cc9","24c4fc89657d478fb9bcd113a05ca8cd","8382585a6d244f7b9cefa3901f683a1c","fb5ffbda1d3b4bba953f805b1d30bcb7","0bf47288b3f74068aaf66a3a70fc7d67","7843be268e6f4f988e5cc7a5b1d6381c","b1e10dc087e647509dc0422b89dff8c0","3c585dab831d442684efc6686c24d84d","8c7ee623b79c4a118a13ccb503070e52","5870548f9968432fad2e3eb134423414","01fec1cc65ae4a528cc59be917af7679","04e560b98e794db9949b577e4135ecc3","3d3098babd7e4d86b4d45ff4354e8763","fc12351486dd4ca497cac4a5e9a42e62","48cbdd92945b4dc8a84204d940701524","0c7eb064224e482ca7d84d332536bd7d","ec735421371a4f93a4fc334e1523000e","c08fb52c2e3c45d28b1ee1ffbb23eddb","34f227703f9d45339095639998126f3b","4c34337547a5478d988f81e9955aa8ac","27cb5d248b6d4be8a7f02dba046d106f","09ab1257ca964bf4a8df643cd1340f27","60fbe5836ff541baa9a6c3d58d87f7a9","2156cc757d184a23a380e63a4060f755","3a7498ba07f5411d910d7c12bdac9d52","e16cc42e180d4e30845196364e53f51f","da578163c6de43bf91a399809196fa99","24205c57045946fab55124e7f921dd91","9400a7fbe64e416bad1fb9f54262422f","2ba0ed8f6b1943e78ca86ed6b4f2aafa","ed69dec2252440d1837c5b493e0cc8b3","91b622bf7397462c8fcb3e99be304255","d26adbf157f24840ab428803fbb60e14","28768ac0813042a9a3ea4185447d84bd","27f1f9d9868f4285860b4dbe01023fee","ef0b40b553924e1b889f6dc6e35a9d7a","dbfffae6be3047a588de4e0676bc50d0","e21491be9d334295b03aa34ead74a192","88cd4570e1ce415598c54c93ed777175","49f64c71dd9f4a699fbaf9182ad52c57","79d72c168cf14179b628908322ce7d8a","3503a7f4ca2141b39d9cd8933d2eef80","1cf9dc8513ab4a65adec4ad92e03bc60","d10c28b7704744ceac7eb6141b1b465a","a197067a2d3a4b21a8f4bf8b50de4c47","aa7232082621432ba27af997750494ad","1c055652137649ff90932c538c71a895","bf933ab1e4f5434c9323412e578dd6b1","88d44c70d62e4d5a9828d60364787387","bbaa99f285c746e8b1e3d50db9d93f55","2862bd7b50fd44dcbd86bb6d3fb0573f","abda1aa75bf4424da01fcd2df5f08db6","8abee2338294488293d26831d7e4b13b","71725bddedd74b7d86c1e7ff4e07cc7c","cd99d39c31054641bc535ebdc86cb8c0","d08f626451404922b79b915e4372b1c0","8229913929b54348ab259294e9cfce74","a6f392c48b4d4f00a0c577e526e11a8a","b82cda8a11654b91abd1ab192adeeb1c","988f51fd557543a996c9c97257ace7ca","6cf1f7dc9f0346a9a9f5424005e49c3a","effaf58a690f428aa097ecf0358e7943","bb8e7b17af6c4292a1e5256830888224","230e98beb7404f1babc0808c99f7c35c","becb392a34d747ab98e0ad7c77bffa9e","4cb1b153678d413cbeeddf959ac72321","a590aafff07545989202abdd789f0190","3fcede1bd5f64013ae1ffb5f1f4db26d","2b58a11e5ca34e62a7f42aa4cea89e05","36cedfc7d5504286af45cb0fbef7b596","cbe88ae910f745cd9b5083a600690b09","bd81ec093e1d4976872c83b37b736d03","5dc32073f8f84dc29febe442cb7189c2","59573fb967b04adc94cb444e4c307112","b1b880a685144af183309c69befa34dc","550864c16a82437d9f2cc39aee14d5ed","a1f791a5676f4292a5eb64397e2ef32e","50adf133691f4a40aae771280b5843ba","c414c351b73f4d6db97cbedfcaca4252","2c0bf11bba7247269d6e5f5311e14deb","2ab0a5c8212d4e518ca08039b360f7ae","a9d76559b2e649b7aa4c1d0a76789d9d","24e7a10cd4dd41c28d9f3d410ee4fa27","a6c9a4179b6f4093991ccb0ccf43f3b0","699366a70b604e76aa427faf71d59f16","419337dfe0b742f09c12ae0b065cb3f0","378e445bcd01435cb37c61c8a5e1c71e","1cb8c953b5334822981d6c478b3d3a37","10f9289fe7ea41689ccfd7e8a21bf1f6","af54f25dd88a4248b8ed8ea79e69a89f","d770b1a19351416a9ac95a48c404fb0a","9f2a6c6053984ea0b35dc180251e62c6","f6fa2f1a9bf24505aa1858ccb34cdbca","bca0c852e4f44f1f85da6658d4aacc70","c0060f5a423a4367ba8af7491310a2ac","e5aaa7d9b6be4e23a554faf3c33b8a4e","55a8d400e1944933b7114f0848ab0856","cff2c4102b8045108edfc03a451e1493","790d9d593f764116a0d84e9da817947f","6aae39759e314718b3b2a298f324fc05","02922fbf81294dedb91d2ce8063fbd3a","c9c14b7947814e7c9697cb4cdf65c371","783789fec2764710ab0f59486dec4786","67392e48a1f646f39f6ab411d4132306","bb7747d5d36a4780b5348c93a03097c7","c2b242b9465d4ab4ad6ac299d3217a30","18e75ac0af9f4facadc6a8f786f555b5","262838d436d54912b50d7058d4b39fbd","788726659d7b48748a387582f6dad978","a33c0e0d90194409b8b4763d82b8973a","ce099b06511440fea3e0f2191e0eb25c","52d3dbf5cc524ba1b67ef712454e5b19","ea9530958b0040e9921a217a7120c074","ed8eaf972b0749e48d926d4bca239727","df6d61bb0dfa4f8a95bcf22f183b0ff5","0a5a44dd92d54f819dad9802ef5885ab","b0d8a79a169044068808ca4c1551bd8a","14e703d98f034502891ff426405e183a","cc05b5edadca458b983593a4e103375a","dc844bc333204f329d825c07a14e1976","3cad9a73138e4bcabd5db0300f56bea6","bd0a70fece664f0aa54adc2a7c2f2f0d","e9ed6ccf88a3484395d2fe7993269c70","f3d57941d52e43769e111270bfb7098f","beabc3f606f748039059f045808918dd","3af1be27d0334a9d84a3f2f978d6c848","9c926e343afb4f43a1846a8013e3e4a6","37cbc519d4eb45d09029b3052ea823f2","3a09defeb7954d5d889afedb1c3c93bb","6ed656b3f8014dbfb240e585008d481b","2925cfcd532243d3b4ab13628a94bb2c","949e4a7bf79841d0bb5cbb553239ae15","dfe2137d29464343ab064dcd4d1773a1","1fbc7be7a54f432a8eadd0bf99902217","1b6626b36b0944c7bde8fcbd1570eb46","4672c41c69dd49a98b9c7b4ff1e253d0","8cd7495c1e10414bbed06e43c7b95f03","adeb579cf556412e82cf424aaeafdafc","4e116a3c96f34c8aa3a3f81638177f7c","830a196760f643a58b61c6ff2d44872b","944ae46aff544c5ab101553c91e5e1db","18669308a9ec4d08955c42d1c7857743","11793d3796ad405fb7d8d294fb914d62","2a1d062b21a946b29831133e620e81a6","93dab773a9a54bcd8fca2a750c6d80f6","688ad4f4174144739a46913df10254c7","99dd018c64334c9c976a78d344c67aed","b5282767b95c4631b83013ede5286858","4f531384cd734475ae7355209dbaadbb","dae6e350d545405f9538ca2a9829a008","cb80efcefc164fd4a4c3608108b5e1e6","b61cb5e9561a47d8af358f96656fe94f","7d8ea2e9f18242578c92a79732e74cb1","afe22c7bcd664344ada3358f6bc17ffb","64e955967687422da8d49426a05025c6","314475ed369c4061899f323e67336990","c9387e3ac5dd44c18c38c212df745f5b","799c0afcc8a543ffa0275b72b4951837","4a27cb25079544ef83a8ef0263ca88d8","24118f122b434a3fac83757b6e738009","0604e5643a82441ba1576c4010c63daf","25db42e48bb44cb69257f3f79035e4a2","fd11277131454f30b8d5d170fe554977","01d3e46747f743eeb179fd3e2f078ed0","480ea24b01854a7688f33c919d5fecf6","049f116494e242ed9a2867c7827b213d","9ea89f381ae6406e8fcb95d19261d7d3","2395e0d566f4426f86d031044def637e","39c050468abe48818e3274e5b177dda3","2f26713df09d42cab216aa02b61fbc14","1ad188c27f1e43bdad9af03cdb0c2430","18920d971546489cbb484482ce6512b2","8f28c5631c344deaab972b0da16f0f6b","f9654cd21ddb4a5d99ad86d94e5124fb","550afd3fb7544366a2e4f63bf42b54d4","25faebda6ce5446ca8bb6d957f05cb15","6fd29ea3fd234ee48bea7fa52c0b9b87","960f4c9e91b94f16843061188108566d","fe43dd6b059c40118f3dc8bef3f6920c","250e01c777424247a6d256c5f12b075b","2a46085da984422a961e9fade7d89f1d","ebce1b6f52134e2fa66d7bb980cb5bef","81e2a613cbb4404599b3b5f339b313b1","b7fbdb0a9faa43a287aad8f46a16c379","fdebb50029d9406ca3b639962fd88e03","d10e7c6ae36a41c8b0286525ea568ce6","059c6f33a101400d9ef07726b037f861","ab1d064d808a4dc085a2b121f706cb08","d25cac64104d4cfaa018d8f3fb6aea74","744b425cd49942b59b6d6edbeddece61","dd3d1d8392c540a8be4a4ce085d24ad0","2fc13e0c325840598f3a0a64dafbe8d1","7900507b29f94a7aa76043cb0e877542","d390a925f5d940a89c998becbb1d7d56","8fb9b9e963bf432a8cdfbbd2d30385e7","e1599d73a8b04a39946b97c3b1aad26c","07dee853dbf04f7abe5805943544f1e0","864a9c0bf37f4e8f8a807cbc67fd0aba","e33b89bd139f4037ba30d53b75e0a3e1","4b1321733107437788fdfa2bcfb6454e","b2e4cf9729b8431b946948b4b6384f25","95b1769d96ca41d3806f8022b340c2d4","119d13e5499f4cfea528221dfcecb010","3737ce68d3d0466cb6dbe8c62b0ded91","32970ab804214c1ab1c8c95ae51f6c13","db191c0b65a741deb864eae8c251fd57","5b743555729b46bb93693467e8176b14","29c03fc391c44334b200e40e3ec729ae","5e1430a4feed47a497e8ce2e066ffeca","976dc09db82c4ec89a80907c5c4db61b","cf9797d317814ae78755f8164ee6f8a5","645c525726dc43e5bc043794aaf6555e","1634f7239ecb4cc88227b0bca0ce995f","cdfac1191ea2412796ad214c3705fe26","be8258cf612a4de599795733f6c6cedf","c523114b8ae14b5c815a98f0a46bb24e","c3a915eeb42e44559c89068464b2236c","13b30112e2a04a07b29f927e0135c3a3","519e860a5f7a40dda319ea23db0ff202","8fec5b1df95a4fd5a1cab549a5119816","f9cc976e25b74a638d00d2228bd80cf5","d0f525914dd046d9adc076a806bfe1ec","5f20a30989e948a593927874eff67f95","a5c69297ab9f47e08d916df200a49ca2","c370086cbe0f48b79d0e823fac2491fb","3ccafc3c21bf4dea8c982f0e865b09e0","3a6e12a9e571409c9adef8bf754b2ffa","d2f8cbbf5fc043dea150c92a76b47289","acfe79a28c50465da9c251af30bbbd52","74faa8dadca84e06ab0474de72503690","3bfa72c1319b4a1e89ea558c6e64eb53","388c61f30ae347eba02435b8bb76c816","22dec6e5c4f74dc1911039572a657b78","e120d61d017140e3aea7281ebbfe166a","08ed64fa70d64a78a816b182a0006d93","3dabfa3fc21a4640a54325864ec6a5d7","5659522cd4aa4077854b16e2f8ad2ab6","70eeacaafc6746ee951aa9bb2970a01c","6baf4211fa1241a8b473f197bb8be356","11225576afac49f3ae78733715abe77c","68eb63fb70f741c6b9485ec47e03b9e2","9b43b79691c6472bb48b177e6fee6037","293ba0b109524a979f0d18ceec2fa0c6","bb854c858baa49f290f14bc7537bcc43","03f7d6b5676c4c54922fec876afe6095","22c231329ef44addbd07852ae033d5f3","ebb14746c27f4294b815eb0be1978ca3","c4479a18d2b648ceb9d05a01410b7728","6163a133ed7a4b7ab16fccba0cdf0c3b","d54550e012ab490e86da09f71e60c7f0","cb5bd2403fe849a8bcbb8a7d75e0f175","dc788477593d48e6a95f56947a743452","9df4ae8388d14a0ba854de7c5ba9713a","755c9b0266834294916fa8693307a56e","a1a89a91ba6e4fd988f354448510670c","9193a811cc5f4458867fae0e27bb836e","0bebd49e0a164e86bfbfcee2940bdf04","5d92410888bc49bc8bf88dbc105b4c0f","bfad523c020742c7a20264a689aa25b9","302ca5f94740480b95c16062322230bd","eab3f4a4442d4bafab6c9e40a39f581e","67f1025a955b46ebb09327c709ba855a","3464f40a57014c79881f0d24041f555b","74a17329a5004e468d915beea163853a","8e0602e010964203902efb5e75a1c94f","553257cb0f524a38948c3d1e7db86e85","7780f4256b9c478f8fb26e83449a9a02","06f0f88e93c24166afa993513fcb6108","ee160e9e298147fcba8d73c2d5f70e45","17ea0a86ddb143b68ff5e8993cb093a0","9fbb48eedb0f4a83a2ef899ae5ba08e0","e4a65f97e5e943fe87a765fe97347bf0","6a33d4d5c69348de9ebbe2f12533ca54","54d46ee5ccd84403805dcb0ab795a71c","2249d09f9e2843789405a422df10592d","92791ca7968242d6a2a92ee43988c483","92d15bd050eb4977b5915b95a7e3045b","63a1be0f7ff24379a09175de2a2ac698","c105be94b0f0441cad37b88dbd5816f4","f48db386806f4fbabd269326f86e32e8","9a622df79aea4f45889ac149c0f68205","58b1694262ee458aa27f35b491d6ee04","5e8c08b8ea5b4bb5aea27e76751c80ee","b69f53f7e77f4df6b1af05ae24883606","0ba11f10fbda49d99a4f352e0114b39b","d8349079b7394b1da54558acc1795449","cb6b80661b054c0ca22a1ab5b00eede4","c2051d418b18472fad20a824f53fa4d9","e8d77b2bf50b44aebc9bc8a37fd05099","dcb0edad8f7e49a9bb8da814dfda85b9","5e551cb8d5604bc89aa9f8a3f5259653","873eb016316a4d1f8176d9497f0394b5","cb2b211f5f474164a02d7da60a65ec13","1fd98e6afc684e01a4804b82248585d6","49dde6d953664b27b9dc275341cda34b","bf4873c67c8f4caab50379797d866e6b","2c355fe34da346a18219f30d98bf18e8","0fa43dc15a7740b7baf3d15de42f6f9e","4b38e631b74d469297d1a3d8c754c6c8","83efc126f77246f781ee0b6d4f67e7c5","e9627cbb1b0440c582ea3b1a703fce12","5b0f34140dc14a9da7070703b1b0a262","ef1e6abd06c04b84bec9581e608d3f56","9435f664149647a2ac2711f33edd5ece","b0c118f751b44a098de3f5211d771dcc","972caa1518834e699c5b4e921fc21a27","4e70401a1212473cb9c87ddb9ac416b8","c762ea78ac9d4ef98274ae70bcbed50f","b1279b9cef424a51b920a4b474470d52","4b61c161f82b4357ad98edbfcad4722f","67c2b4526e9b49c1a0a45ade0dc67a8e","bd57722ae15d485eb22bd82478c6bb0a","2ffc866639f745fbabab26ea698e3306","23a0b04c9cbc40559e8adf6e8552ffd3","472e87488cc84633bed95926c0fb5ab3","bc4aca93940d4705a7b7c5869f36ef14","603edc29adb3480383ed77cef581f717","66e9d2c327c94387b1f55772f3b628ec","b2c4a4d2859e4976a4d181ea2e4753d1","b6b150ef54d044bdb242c3eb27c6b042","ecfb48ec3335402d959619efe5b339e6","c0c74f3e718f40ca9464a440e52de109","a568dc0256e4418a91259e06994cf821","61ef997c3eda421bb750d6b2e186afaa","f5314baa104f408bb9b9f931534a0fc3","9be6bf0ae5a54829abcf24bd8108c831","6906b8d3458145d0b680aaf44b1fb8e1","dafb3a5e4b8b4a89835ba151767d97d3","7524ce9cffe44595b4432ffab8db6e36","ef133c854d0644388ad1b609f31a84ff","f37dcea3d3d745ef85568dccb01cd9c8","c13a1a5180774fbeb82ea71643947acd","92e246e2860e476ba0592970407f8f90","874f7a5628c1444f847209e638c24bed","65f420dacba74722b05fd812929880b2","4e08a1b8a86b4f93993281da9047d6fd","dd2dce5d270b42eeaeb255bf431b6853","bc32d8e110584964bb0dc539abf1e70d","9872c4cafed74296adb1d9a4b41fba8c","38a2cd98d64a420a8087c8729bdbc00c","d11c514387524a50b4a62e8ffddd664e","8b320e8ca2c54856a78e9f99e2edd422","5889b79a4fb242a59a74b59bc0b53dc9","8691a308fba240ee8fdcd43449cb3c50","97d53914d30e47b3b93ea93fe147a47d","e67ea249728740658de3af242270e5e2","00d7dd0bb8494a288952a7da80dd40c4","21f28b1eaed84d5e9d591fdfbd066747","814d8dc69a2d4cc7bf17790716396ab2","db3912ba5c074498ac9584c300048a3f","28482f4ce2d14f4fbf0b1e011dde1aeb","721ea9b41e704966ba73a10886abd93e","e2d71f5b24114690b21b11e18e5d93cb","4ce221f19b7b410d8ecfa6d219500b8a","abdff801e9d942619f38b1122efa4cf6","719644826a3a496a810b98e747d89896","f9bef9a6a02a4658aa1bfb830db09bfd","fcd8b63483e9471abe185e3533527161","b99f3e0b0f3c4cdf815c81406fbd0376","b1c4745d51534f6cadbf28b6de64c07f","e98fb93f08154832841f3945898ce30f","5e18ab366f34446b97b2c263a3035651","0e98946c024f4a51b7264b3c862b6ed9","9153c5a26cc14de2b78355fb0ffd0ed0","a5d7e075225b4aae8e8854a1a7cc6c5e","0da9fabe62e2473db2080149e834b234","6501b8cb4c7944ddb5d56b3be2a33a82","45b48d4839bf4f279aa54ac94f64a9b5","264ebb3e841341a8a514d04f402fa5dc","d5c0500bbfc3449fb9f841c1fba53a93","5f01ceacb1b04508a6b040ea8c0a7ec5","e2a392c8a61f40acb1eaad1c6ce5106b","0875729627bb4dfd92c26c7518625749","2a7f40bc9aaa45928134e778fa85125c","e612bf2df4d34b889ce9d25037c2f876","d7ab4dc12474400a8f41bf85b0a2c24f","94bc8216161c48059c272fd31041b763","bbd2c769a44c43e182bc275b5cb352bc","0cd16eac3f80464bb89097d45697ca5a","65aafc6b98fe4372b1e5269dd3fe27e1","1e83841f002a420890c1cf91d79d27cf","a90beb4d4d2547d48b9c8f5e361f2c44","3afbbd36d2954511bcc6b2a788942218","f37eb7c87f4b455f9949b1dc45b6b091","b2adbe0ed3274dc69b1ffdeac13879ae","1ffaf52019054745b1fc461564e7301c","b8acb46a16bd456eb234ebfbc0d1e943","ffab3affbf714c8b972505c7eb2fd963","75d0f911b4014c82abb54c51516b500f","7780a6d986be421f9cd70a8e1baea52c","fe1596e7f0cc41ba8503cd89c047632f","908321460b854efb8718966fe0902438","2d35652beb4b496c85febb845cc15e2f","34f7003de5f64623a9405b57caf8ebe6","584d19acb6e545a4826e8724a02557f2","d6a2afa130ab4df4b3601de9e738da02","5749a6a35a364f7f9a58ea74a81dccb4","17dfc2d79b944b86b2ee93f50627dde3","278104e653eb43928e28a7ca56d7129d","f8d0134fff5b4a108c4f4bedb824713d","258f797ad0484abea9ee01ba81fefce5","d489b2a2a5824569b5bd753f6a4f2dd1","5d10c89dc18a4e6f93386fa8c05d05ea","2322f07c7c9a45f5a50aeae5030cd365","7f022d65743b4ab18d3a9f1a78e4d878","d694ea6e233646e5bc0012a1687f35bc","1cae23d38c0e4047a3d2173588a92104","28560541c037446ead9fc6e0868aa938","8137c945a7264b48902f69c799bb976a","fd25fcddb86c45c5ae910a1d7d2dc1a1","e959d496caa849c5b2656bfd190b5636","1db0112d52d34feba0454bb71fdf222a","b67e9b61d34941be8190db18fa7dc405","2980a8a521bf4222826f30e86f81b227","64e5654bc0ec4364af5c6fc9b3dd1b72","08aaf2ccf3c8433db37ec5284524b36a","37782ff3191a43e68f15f92025c990a0","76db36f9b3df4f59814f0375ab394ead","c4d1537819104f2f81986da39e54c02b","0b5ef5a5b9c249c989f53ff03087986f","04b2d3b8796a422c8c3dfbd8f9b22d64","4516bdf02f90413fa15a9aafac706e11","fbcd10cb6cf444a084221e27d186bd27","5b274c837b534aa885db9a2b40031764","a299796edcb84ae582ab163f919ac894","77b20e73d0da4ed9bfeac65aaf316ff3","64a7bf5b591f4f8d93fe75b945c0e934","6d1ad7ca305c4698bfc0038ce00639bf","82e207c9932a4d8ea6bab1c03226ea3a","164554482a3c45108ca6be00428a04d3","3006db96af294ad092797586f2e60ee1","552910d968b64deca06ccb4bfbfca328","d92eb020638d4a3e98a6290f3fe2cb08","b2895a97b8144bd1bb9dbd4fe142b203","ea576903e39e40449fd3a1ca3bc4534d","db9054fbc0724c828e70ed80619aa8c7","40e276d91f664e64864f2e091a0e9815","3b2adc779be84958a7d98fd7a309619a","7a166007e6f44b9b8e3b875599ed404a","ce126dc6948048578dcbba5801cf95da","d4f06dc9644447f18bcfa807139081e6","d637d595f5804fc4af09cb2b7c5f3184","de588d9ce34d4651ab0c4d2d1b231b57","256e55b24c9e40fa9d9db9a5843d35c1","a630278a39724d31a275ddcd4974cbb9","6015c316078144028877c620b31cdc01","d3ef7594270d4fa2a5d77c89e9d390d5","959c3e24f2624478abe81ef6f4466bbd","70b9ed417b33460e9181ea1605d7eb62","a1e458fb4ccb436b9c84d5bad1506eb6","faf9f57849c64c1c9d4c483c25bcc1a2","568f5432497d4a02a7096c67c06a4550","5f9fdb4fcbd94dc4ba9038ecd2c2ed8a","f0ddad3d35ff4eadad4f450f1c1d8439","6a265404945648eb8d5705f4473ceffb","b6b13aa149ac44b1a4bd2bef4f105b28","ef3bd93c4c0c48b0aed04bca9abf085b","9290a5f608f14569b25cc5a66df14983","a521792dae424ff3b85cf5fc5ec0bf64","4e1e9bc821d84c55a3ca66d5f5b79ba9","448ae10989954eb59b74ac21d68f0899","4da1cfddfd364f8191dcccfd723eca5e","a768b1b967b44c4da8a8e9fe2b0c935c","bba85d5133a647b1986772be2c9643d8","c160b5cb6a814491b53acc862f9121cd","ffd247702ea644c2b98dab49e19cf902","cbe381754e364270afa662eeb64f3e97","451a4f45a8d24f2384960a044ebf107f","b162e4545694455e9e3d66904f17f5fb","c44df35f4f5c44aca5aa643efa0b140f","222f70fba8334e6296f027798de7501e","0d1ebbfb34754e629d3781c714c927c6","c7b01e5c91804c26b540a6d863bba3a1","614f7712ea8448f9b18b22c93bea9cab","82302eba8c91482b942cc50b5021f908","8b73df25b24f4462ba39a28f67a7bf93","a48d5dc698dc42cdabadf5592ae3bb8b","394b1ce5f21945159eb3dd79b9617049","d8f92aeeec174de8a90e28e807b96a83","c27588b0e143452b923b7bbd86665998","8ca939af296246e4a1e363d7560e49d3","a88e485d7a1f43e0a45a6db0d8b5ca99","0908b36a0bd14888b055e2ec0864c39f","dd30547cedaa47a6b49dc4f199aae5a5","9afb11162cb14d07a52435c5d681fa13","31992952b8264720ae85a0702e4b946b","f511f5a4124b41c9beec2556333f92e6","f2922bdc2bbb45649c13f7caf95049fc","f3dd6149046c49a5bf54dfb73505c418","fe621909f6fc444fa0f4ce60739e86df","948086ab70ec4992ad3543d76cf134f9","dcd2a59ef9ac40faa92520059ff79a30","b66188a89404445b9313ea3a8fbeea09","a1611566c62e4ebf92a6f183eafb9465","2ac73dac4f5e47569bae44aed816996f","5b430760443446f3a797bcb652ebdba0","8cdd7e8245da4e0d9f0b88df91f61a20","5650032f00f54fbf8ced4db4faab5983","d3c1a570d7394ebaa5a009a40e7c751e","0762d547c7364649804b6e68586273df","b48be8cb04b84151a46bf8e89718b79b","7488a357d5104ab8b3ba423aa9574b20","2946476f9ce042e994a311a9ea093b4e","720e3f6a78314663817b7bd9127fcac9","f7ea1fab44fe4a689072600c1e4a7b74","a3b0a073634d48e4a13cf0874bae69f6","2f6adc0c733a4c16a90670e463e8b974","8f6b5c20cabd480a98626f210e051268","726527471c31429db643a4607fc13744","7b3e1f521b554802be0faa908f9171db","0a2b4f5811ab4add927fb2d1aac243a9","f791788312b146d9929900c1e254ed6f","825c78f1e2cb469cb2949302a8dbe34d","306db6acf40848e49e575a4f2f048549","75f236023d0d47d48c98c63bf1eb1268","5a372cf01d2542089df7901c99f08fbc"]},"id":"c7a5d393","outputId":"9d362b4c-5995-4439-9391-57bd2d408cf3"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286719\n","1.0    286719\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71705\n","1.0     4025\n","Name: HEARTDISEASE, dtype: int64\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8518e52d4f73487eb40a3967b28012e1","version_major":2,"version_minor":0},"text/plain":["max_depth:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8d00c444c8b143f59af4291254ab1996","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0688935c94cc4c1cb519faa16a794056","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"45949b1cf6754c08af1908b811572eea","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"067aef279fe8482fb83859ea08b1a512","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd78f4fd24fd46f6bc362c40dbdcf25c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"daaf104e37d74dd69edb55aefbe57d01","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"990387fa34424d47abc4061c98ae9540","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0cab2949cf1c4cdb9d965ea2e1b545a6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"feed65ccc174482985dc91d3194c037a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4ebbdf77295c40ef8455ca29bc83247b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5dbf16170419436dbcaad80beea82303","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a5bc87b933fa46f5875607a83fe3d062","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e8a57ebb3618402eb751cb2e209cc05c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3cb6f21e8444dff8ad008eaf11fdcba","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a79086e8e7f047809fb65d6ef6a06373","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d6965c15be247bc816898dba06ac42d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"79f5c1eb454b47cfa35a26982692f09f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e69ddf6696794d638f124500a704c8a5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6c37bd8e0192412f88ca074791221527","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d50978a22744b8cb80296387c425f11","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"108edcc80c964e19afc5460c15a14255","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0caa9ca5e8cc4729860724bb4dea4edc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"644e769dff414de09d253275b9fea5ea","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f54d9a50767641e0a3879d2e3c72103f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"161992bd98224f76b45921f88e1f762c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"59fa310d8f5f4a9d836ccbac05b4e00d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"10769b0201c249ff89176a3a8f59603d","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7673c20557da4d2fa907e9fe127d21f2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fa7a77bc47c74bccbad3e4c9c224f750","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b009c7e6cc1c4723b2fb04cb7ed1b90a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"51f2447b9ad943d681dbf59fc777388a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dd24a31472244b5cba1d252a86762f34","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"46e28d1eefe64c9988009088293d9ae0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3fedeebecd5641dda0af7514dc64b223","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a3347c3d019f4819af118c342313745d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f94a5d173a1f4741a28270294bd25e99","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"16828252c8b04d749e07945080862bf2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4b7182fea1b9489283f6251adea66620","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5ca332c3d3dc44e9b68512f67eaa6b25","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"755eaff9594740fea7a64117bf821750","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c874e351d9dd4d46a556a3d69ae1e4aa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e11be9ccba774a07853180b373d8769a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09e3a0e0beb34a2fae0457b463799969","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ba899bce331d436097fa9f8a69ea1a56","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"377fdff37839409b90c6c5ed985c91d2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e015b797e31f40348296e5118202163e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"218373c6c18d4aa896d4b7ce7f6eba97","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5415100b766540c08072aa234c93a4e5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b63808a2923c41e4b78dff1551a035b8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f80de651c71946d7a0d389d29d5eeb90","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8087d0669013474b85bdf1b3847989b8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"926f01bdc1f648eaa64646d8ea153eaa","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3ae72b927e394994918039664a894f61","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce7a0460994d474cb447e4977725e3e2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09f34d1f238b4e0a916fbbd8abeb29bf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3b43df5f1b84eaa96620a4935d11b5c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a645e977f6fa4883921e0ede1e6a023c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db2e7b3238a143ad8aa3d3aa394c756d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f16f2fafecae4e468d74de27b6c1b0e4","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"78ecc19ce44b4c3294a0d2b1a89b15d8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1d3959be39bf4774a8c183a743089e77","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b5ed68af2bf445c6bdb62858d319ff77","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3791c76c7b88438b9853929a64a09b68","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f4fa664a6f0e440a8eafea69d5af25d0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7600ac1c77b14b4c89f5eef675ced957","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4159893277014c32ba47ba3bf8273292","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b6f23b0a168e41b2bfe3ca3fbbec7065","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17e1046d49ec4ff59ff3f5d8ff0c6f53","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23812c860adf45039478eae45a99f9fa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f92ceeb798e845fbaa5bf164abe33fdd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"584f7e36b26341e3a0ed40036aa0121e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af1c5e7acf08419ab2ca5f8a965da2f7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6d5b9738c3024dd2958be2c9b835f704","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4c6f26a0c4b04d3cba40a6264d0996d7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7aea76cdc11c478c867314a15ce0ca40","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ac54155bcf2428381a00141f254b9c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"482d136eecbe461fa29d27e95c025773","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7fedb2d7c60e4e05afce84b27b5ebd5c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"529d1f42ad5849e082c50b6fb0713dc0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a64d862726e543e9b832216600c454c1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea7f6f48e7c04979914df653af371a80","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f14d44305d634f4fa0cf2224e9cb6c79","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"93cb4bd1babb4d6d89f6702fb89c04c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dd70744bacaa42f791641511d3c6cd93","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6432011ca84f4195b2902d1d04ec41cc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f48387290ea14ade8946d0d4282eacb3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d283f8a4c82b41e98fe46d702e666f6a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bc43cf2f4684467eb94ab480fa51dd44","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"12af1c3c1ad2436390f894c580474cc9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24c4fc89657d478fb9bcd113a05ca8cd","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8382585a6d244f7b9cefa3901f683a1c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb5ffbda1d3b4bba953f805b1d30bcb7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0bf47288b3f74068aaf66a3a70fc7d67","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7843be268e6f4f988e5cc7a5b1d6381c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1e10dc087e647509dc0422b89dff8c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3c585dab831d442684efc6686c24d84d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c7ee623b79c4a118a13ccb503070e52","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5870548f9968432fad2e3eb134423414","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"01fec1cc65ae4a528cc59be917af7679","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"04e560b98e794db9949b577e4135ecc3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3d3098babd7e4d86b4d45ff4354e8763","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fc12351486dd4ca497cac4a5e9a42e62","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"48cbdd92945b4dc8a84204d940701524","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0c7eb064224e482ca7d84d332536bd7d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ec735421371a4f93a4fc334e1523000e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c08fb52c2e3c45d28b1ee1ffbb23eddb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"34f227703f9d45339095639998126f3b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4c34337547a5478d988f81e9955aa8ac","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"27cb5d248b6d4be8a7f02dba046d106f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09ab1257ca964bf4a8df643cd1340f27","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"60fbe5836ff541baa9a6c3d58d87f7a9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2156cc757d184a23a380e63a4060f755","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a7498ba07f5411d910d7c12bdac9d52","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e16cc42e180d4e30845196364e53f51f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"da578163c6de43bf91a399809196fa99","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24205c57045946fab55124e7f921dd91","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9400a7fbe64e416bad1fb9f54262422f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ba0ed8f6b1943e78ca86ed6b4f2aafa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ed69dec2252440d1837c5b493e0cc8b3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"91b622bf7397462c8fcb3e99be304255","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d26adbf157f24840ab428803fbb60e14","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"28768ac0813042a9a3ea4185447d84bd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"27f1f9d9868f4285860b4dbe01023fee","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef0b40b553924e1b889f6dc6e35a9d7a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dbfffae6be3047a588de4e0676bc50d0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e21491be9d334295b03aa34ead74a192","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"88cd4570e1ce415598c54c93ed777175","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"49f64c71dd9f4a699fbaf9182ad52c57","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"79d72c168cf14179b628908322ce7d8a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3503a7f4ca2141b39d9cd8933d2eef80","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1cf9dc8513ab4a65adec4ad92e03bc60","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d10c28b7704744ceac7eb6141b1b465a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a197067a2d3a4b21a8f4bf8b50de4c47","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa7232082621432ba27af997750494ad","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c055652137649ff90932c538c71a895","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf933ab1e4f5434c9323412e578dd6b1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"88d44c70d62e4d5a9828d60364787387","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bbaa99f285c746e8b1e3d50db9d93f55","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2862bd7b50fd44dcbd86bb6d3fb0573f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"abda1aa75bf4424da01fcd2df5f08db6","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8abee2338294488293d26831d7e4b13b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"71725bddedd74b7d86c1e7ff4e07cc7c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd99d39c31054641bc535ebdc86cb8c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d08f626451404922b79b915e4372b1c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8229913929b54348ab259294e9cfce74","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a6f392c48b4d4f00a0c577e526e11a8a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b82cda8a11654b91abd1ab192adeeb1c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"988f51fd557543a996c9c97257ace7ca","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6cf1f7dc9f0346a9a9f5424005e49c3a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"effaf58a690f428aa097ecf0358e7943","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb8e7b17af6c4292a1e5256830888224","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"230e98beb7404f1babc0808c99f7c35c","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"becb392a34d747ab98e0ad7c77bffa9e","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4cb1b153678d413cbeeddf959ac72321","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a590aafff07545989202abdd789f0190","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3fcede1bd5f64013ae1ffb5f1f4db26d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2b58a11e5ca34e62a7f42aa4cea89e05","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"36cedfc7d5504286af45cb0fbef7b596","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cbe88ae910f745cd9b5083a600690b09","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd81ec093e1d4976872c83b37b736d03","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5dc32073f8f84dc29febe442cb7189c2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"59573fb967b04adc94cb444e4c307112","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1b880a685144af183309c69befa34dc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"550864c16a82437d9f2cc39aee14d5ed","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1f791a5676f4292a5eb64397e2ef32e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"50adf133691f4a40aae771280b5843ba","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c414c351b73f4d6db97cbedfcaca4252","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c0bf11bba7247269d6e5f5311e14deb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ab0a5c8212d4e518ca08039b360f7ae","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a9d76559b2e649b7aa4c1d0a76789d9d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24e7a10cd4dd41c28d9f3d410ee4fa27","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a6c9a4179b6f4093991ccb0ccf43f3b0","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"699366a70b604e76aa427faf71d59f16","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"419337dfe0b742f09c12ae0b065cb3f0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"378e445bcd01435cb37c61c8a5e1c71e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1cb8c953b5334822981d6c478b3d3a37","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"10f9289fe7ea41689ccfd7e8a21bf1f6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af54f25dd88a4248b8ed8ea79e69a89f","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d770b1a19351416a9ac95a48c404fb0a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9f2a6c6053984ea0b35dc180251e62c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f6fa2f1a9bf24505aa1858ccb34cdbca","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bca0c852e4f44f1f85da6658d4aacc70","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c0060f5a423a4367ba8af7491310a2ac","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e5aaa7d9b6be4e23a554faf3c33b8a4e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"55a8d400e1944933b7114f0848ab0856","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cff2c4102b8045108edfc03a451e1493","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"790d9d593f764116a0d84e9da817947f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6aae39759e314718b3b2a298f324fc05","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"02922fbf81294dedb91d2ce8063fbd3a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c9c14b7947814e7c9697cb4cdf65c371","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"783789fec2764710ab0f59486dec4786","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"67392e48a1f646f39f6ab411d4132306","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb7747d5d36a4780b5348c93a03097c7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c2b242b9465d4ab4ad6ac299d3217a30","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"18e75ac0af9f4facadc6a8f786f555b5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"262838d436d54912b50d7058d4b39fbd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"788726659d7b48748a387582f6dad978","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a33c0e0d90194409b8b4763d82b8973a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce099b06511440fea3e0f2191e0eb25c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"52d3dbf5cc524ba1b67ef712454e5b19","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea9530958b0040e9921a217a7120c074","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ed8eaf972b0749e48d926d4bca239727","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"df6d61bb0dfa4f8a95bcf22f183b0ff5","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0a5a44dd92d54f819dad9802ef5885ab","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b0d8a79a169044068808ca4c1551bd8a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"14e703d98f034502891ff426405e183a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cc05b5edadca458b983593a4e103375a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dc844bc333204f329d825c07a14e1976","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3cad9a73138e4bcabd5db0300f56bea6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd0a70fece664f0aa54adc2a7c2f2f0d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e9ed6ccf88a3484395d2fe7993269c70","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3d57941d52e43769e111270bfb7098f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"beabc3f606f748039059f045808918dd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3af1be27d0334a9d84a3f2f978d6c848","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c926e343afb4f43a1846a8013e3e4a6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"37cbc519d4eb45d09029b3052ea823f2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a09defeb7954d5d889afedb1c3c93bb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6ed656b3f8014dbfb240e585008d481b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2925cfcd532243d3b4ab13628a94bb2c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"949e4a7bf79841d0bb5cbb553239ae15","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dfe2137d29464343ab064dcd4d1773a1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1fbc7be7a54f432a8eadd0bf99902217","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1b6626b36b0944c7bde8fcbd1570eb46","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4672c41c69dd49a98b9c7b4ff1e253d0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8cd7495c1e10414bbed06e43c7b95f03","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"adeb579cf556412e82cf424aaeafdafc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e116a3c96f34c8aa3a3f81638177f7c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"830a196760f643a58b61c6ff2d44872b","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"944ae46aff544c5ab101553c91e5e1db","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"18669308a9ec4d08955c42d1c7857743","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11793d3796ad405fb7d8d294fb914d62","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a1d062b21a946b29831133e620e81a6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"93dab773a9a54bcd8fca2a750c6d80f6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"688ad4f4174144739a46913df10254c7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"99dd018c64334c9c976a78d344c67aed","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b5282767b95c4631b83013ede5286858","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4f531384cd734475ae7355209dbaadbb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dae6e350d545405f9538ca2a9829a008","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cb80efcefc164fd4a4c3608108b5e1e6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b61cb5e9561a47d8af358f96656fe94f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7d8ea2e9f18242578c92a79732e74cb1","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"afe22c7bcd664344ada3358f6bc17ffb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64e955967687422da8d49426a05025c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"314475ed369c4061899f323e67336990","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c9387e3ac5dd44c18c38c212df745f5b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"799c0afcc8a543ffa0275b72b4951837","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4a27cb25079544ef83a8ef0263ca88d8","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24118f122b434a3fac83757b6e738009","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0604e5643a82441ba1576c4010c63daf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25db42e48bb44cb69257f3f79035e4a2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fd11277131454f30b8d5d170fe554977","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"01d3e46747f743eeb179fd3e2f078ed0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"480ea24b01854a7688f33c919d5fecf6","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"049f116494e242ed9a2867c7827b213d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9ea89f381ae6406e8fcb95d19261d7d3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2395e0d566f4426f86d031044def637e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"39c050468abe48818e3274e5b177dda3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2f26713df09d42cab216aa02b61fbc14","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ad188c27f1e43bdad9af03cdb0c2430","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"18920d971546489cbb484482ce6512b2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f28c5631c344deaab972b0da16f0f6b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f9654cd21ddb4a5d99ad86d94e5124fb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"550afd3fb7544366a2e4f63bf42b54d4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25faebda6ce5446ca8bb6d957f05cb15","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6fd29ea3fd234ee48bea7fa52c0b9b87","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"960f4c9e91b94f16843061188108566d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe43dd6b059c40118f3dc8bef3f6920c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"250e01c777424247a6d256c5f12b075b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a46085da984422a961e9fade7d89f1d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebce1b6f52134e2fa66d7bb980cb5bef","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"81e2a613cbb4404599b3b5f339b313b1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b7fbdb0a9faa43a287aad8f46a16c379","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fdebb50029d9406ca3b639962fd88e03","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d10e7c6ae36a41c8b0286525ea568ce6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"059c6f33a101400d9ef07726b037f861","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ab1d064d808a4dc085a2b121f706cb08","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d25cac64104d4cfaa018d8f3fb6aea74","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"744b425cd49942b59b6d6edbeddece61","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dd3d1d8392c540a8be4a4ce085d24ad0","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2fc13e0c325840598f3a0a64dafbe8d1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7900507b29f94a7aa76043cb0e877542","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d390a925f5d940a89c998becbb1d7d56","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8fb9b9e963bf432a8cdfbbd2d30385e7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e1599d73a8b04a39946b97c3b1aad26c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"07dee853dbf04f7abe5805943544f1e0","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"864a9c0bf37f4e8f8a807cbc67fd0aba","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e33b89bd139f4037ba30d53b75e0a3e1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4b1321733107437788fdfa2bcfb6454e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2e4cf9729b8431b946948b4b6384f25","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"95b1769d96ca41d3806f8022b340c2d4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"119d13e5499f4cfea528221dfcecb010","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3737ce68d3d0466cb6dbe8c62b0ded91","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"32970ab804214c1ab1c8c95ae51f6c13","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db191c0b65a741deb864eae8c251fd57","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b743555729b46bb93693467e8176b14","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"29c03fc391c44334b200e40e3ec729ae","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e1430a4feed47a497e8ce2e066ffeca","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"976dc09db82c4ec89a80907c5c4db61b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cf9797d317814ae78755f8164ee6f8a5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"645c525726dc43e5bc043794aaf6555e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1634f7239ecb4cc88227b0bca0ce995f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cdfac1191ea2412796ad214c3705fe26","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be8258cf612a4de599795733f6c6cedf","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c523114b8ae14b5c815a98f0a46bb24e","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c3a915eeb42e44559c89068464b2236c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"13b30112e2a04a07b29f927e0135c3a3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"519e860a5f7a40dda319ea23db0ff202","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8fec5b1df95a4fd5a1cab549a5119816","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f9cc976e25b74a638d00d2228bd80cf5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0f525914dd046d9adc076a806bfe1ec","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5f20a30989e948a593927874eff67f95","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a5c69297ab9f47e08d916df200a49ca2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c370086cbe0f48b79d0e823fac2491fb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3ccafc3c21bf4dea8c982f0e865b09e0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a6e12a9e571409c9adef8bf754b2ffa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d2f8cbbf5fc043dea150c92a76b47289","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"acfe79a28c50465da9c251af30bbbd52","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"74faa8dadca84e06ab0474de72503690","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3bfa72c1319b4a1e89ea558c6e64eb53","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"388c61f30ae347eba02435b8bb76c816","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22dec6e5c4f74dc1911039572a657b78","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e120d61d017140e3aea7281ebbfe166a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"08ed64fa70d64a78a816b182a0006d93","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3dabfa3fc21a4640a54325864ec6a5d7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5659522cd4aa4077854b16e2f8ad2ab6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"70eeacaafc6746ee951aa9bb2970a01c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6baf4211fa1241a8b473f197bb8be356","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11225576afac49f3ae78733715abe77c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"68eb63fb70f741c6b9485ec47e03b9e2","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9b43b79691c6472bb48b177e6fee6037","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"293ba0b109524a979f0d18ceec2fa0c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb854c858baa49f290f14bc7537bcc43","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03f7d6b5676c4c54922fec876afe6095","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22c231329ef44addbd07852ae033d5f3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebb14746c27f4294b815eb0be1978ca3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c4479a18d2b648ceb9d05a01410b7728","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6163a133ed7a4b7ab16fccba0cdf0c3b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d54550e012ab490e86da09f71e60c7f0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cb5bd2403fe849a8bcbb8a7d75e0f175","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dc788477593d48e6a95f56947a743452","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9df4ae8388d14a0ba854de7c5ba9713a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"755c9b0266834294916fa8693307a56e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1a89a91ba6e4fd988f354448510670c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9193a811cc5f4458867fae0e27bb836e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0bebd49e0a164e86bfbfcee2940bdf04","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d92410888bc49bc8bf88dbc105b4c0f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bfad523c020742c7a20264a689aa25b9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"302ca5f94740480b95c16062322230bd","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eab3f4a4442d4bafab6c9e40a39f581e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"67f1025a955b46ebb09327c709ba855a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3464f40a57014c79881f0d24041f555b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"74a17329a5004e468d915beea163853a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8e0602e010964203902efb5e75a1c94f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"553257cb0f524a38948c3d1e7db86e85","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7780f4256b9c478f8fb26e83449a9a02","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"06f0f88e93c24166afa993513fcb6108","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ee160e9e298147fcba8d73c2d5f70e45","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17ea0a86ddb143b68ff5e8993cb093a0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9fbb48eedb0f4a83a2ef899ae5ba08e0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e4a65f97e5e943fe87a765fe97347bf0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6a33d4d5c69348de9ebbe2f12533ca54","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"54d46ee5ccd84403805dcb0ab795a71c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2249d09f9e2843789405a422df10592d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"92791ca7968242d6a2a92ee43988c483","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"92d15bd050eb4977b5915b95a7e3045b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63a1be0f7ff24379a09175de2a2ac698","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c105be94b0f0441cad37b88dbd5816f4","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f48db386806f4fbabd269326f86e32e8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9a622df79aea4f45889ac149c0f68205","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"58b1694262ee458aa27f35b491d6ee04","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e8c08b8ea5b4bb5aea27e76751c80ee","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b69f53f7e77f4df6b1af05ae24883606","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0ba11f10fbda49d99a4f352e0114b39b","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d8349079b7394b1da54558acc1795449","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cb6b80661b054c0ca22a1ab5b00eede4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c2051d418b18472fad20a824f53fa4d9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e8d77b2bf50b44aebc9bc8a37fd05099","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dcb0edad8f7e49a9bb8da814dfda85b9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e551cb8d5604bc89aa9f8a3f5259653","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"873eb016316a4d1f8176d9497f0394b5","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cb2b211f5f474164a02d7da60a65ec13","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1fd98e6afc684e01a4804b82248585d6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"49dde6d953664b27b9dc275341cda34b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf4873c67c8f4caab50379797d866e6b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c355fe34da346a18219f30d98bf18e8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0fa43dc15a7740b7baf3d15de42f6f9e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4b38e631b74d469297d1a3d8c754c6c8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"83efc126f77246f781ee0b6d4f67e7c5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e9627cbb1b0440c582ea3b1a703fce12","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b0f34140dc14a9da7070703b1b0a262","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef1e6abd06c04b84bec9581e608d3f56","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9435f664149647a2ac2711f33edd5ece","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b0c118f751b44a098de3f5211d771dcc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"972caa1518834e699c5b4e921fc21a27","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e70401a1212473cb9c87ddb9ac416b8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c762ea78ac9d4ef98274ae70bcbed50f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1279b9cef424a51b920a4b474470d52","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4b61c161f82b4357ad98edbfcad4722f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"67c2b4526e9b49c1a0a45ade0dc67a8e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd57722ae15d485eb22bd82478c6bb0a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ffc866639f745fbabab26ea698e3306","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23a0b04c9cbc40559e8adf6e8552ffd3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"472e87488cc84633bed95926c0fb5ab3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bc4aca93940d4705a7b7c5869f36ef14","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"603edc29adb3480383ed77cef581f717","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"66e9d2c327c94387b1f55772f3b628ec","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2c4a4d2859e4976a4d181ea2e4753d1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b6b150ef54d044bdb242c3eb27c6b042","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ecfb48ec3335402d959619efe5b339e6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c0c74f3e718f40ca9464a440e52de109","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a568dc0256e4418a91259e06994cf821","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"61ef997c3eda421bb750d6b2e186afaa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f5314baa104f408bb9b9f931534a0fc3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9be6bf0ae5a54829abcf24bd8108c831","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6906b8d3458145d0b680aaf44b1fb8e1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dafb3a5e4b8b4a89835ba151767d97d3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7524ce9cffe44595b4432ffab8db6e36","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef133c854d0644388ad1b609f31a84ff","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f37dcea3d3d745ef85568dccb01cd9c8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c13a1a5180774fbeb82ea71643947acd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"92e246e2860e476ba0592970407f8f90","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"874f7a5628c1444f847209e638c24bed","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"65f420dacba74722b05fd812929880b2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e08a1b8a86b4f93993281da9047d6fd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dd2dce5d270b42eeaeb255bf431b6853","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bc32d8e110584964bb0dc539abf1e70d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9872c4cafed74296adb1d9a4b41fba8c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"38a2cd98d64a420a8087c8729bdbc00c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d11c514387524a50b4a62e8ffddd664e","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8b320e8ca2c54856a78e9f99e2edd422","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5889b79a4fb242a59a74b59bc0b53dc9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8691a308fba240ee8fdcd43449cb3c50","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"97d53914d30e47b3b93ea93fe147a47d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e67ea249728740658de3af242270e5e2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"00d7dd0bb8494a288952a7da80dd40c4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"21f28b1eaed84d5e9d591fdfbd066747","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"814d8dc69a2d4cc7bf17790716396ab2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db3912ba5c074498ac9584c300048a3f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"28482f4ce2d14f4fbf0b1e011dde1aeb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"721ea9b41e704966ba73a10886abd93e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e2d71f5b24114690b21b11e18e5d93cb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4ce221f19b7b410d8ecfa6d219500b8a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"abdff801e9d942619f38b1122efa4cf6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"719644826a3a496a810b98e747d89896","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f9bef9a6a02a4658aa1bfb830db09bfd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fcd8b63483e9471abe185e3533527161","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b99f3e0b0f3c4cdf815c81406fbd0376","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1c4745d51534f6cadbf28b6de64c07f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e98fb93f08154832841f3945898ce30f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e18ab366f34446b97b2c263a3035651","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0e98946c024f4a51b7264b3c862b6ed9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9153c5a26cc14de2b78355fb0ffd0ed0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a5d7e075225b4aae8e8854a1a7cc6c5e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0da9fabe62e2473db2080149e834b234","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6501b8cb4c7944ddb5d56b3be2a33a82","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"45b48d4839bf4f279aa54ac94f64a9b5","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"264ebb3e841341a8a514d04f402fa5dc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d5c0500bbfc3449fb9f841c1fba53a93","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5f01ceacb1b04508a6b040ea8c0a7ec5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e2a392c8a61f40acb1eaad1c6ce5106b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0875729627bb4dfd92c26c7518625749","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a7f40bc9aaa45928134e778fa85125c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e612bf2df4d34b889ce9d25037c2f876","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d7ab4dc12474400a8f41bf85b0a2c24f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"94bc8216161c48059c272fd31041b763","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bbd2c769a44c43e182bc275b5cb352bc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0cd16eac3f80464bb89097d45697ca5a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"65aafc6b98fe4372b1e5269dd3fe27e1","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1e83841f002a420890c1cf91d79d27cf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a90beb4d4d2547d48b9c8f5e361f2c44","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3afbbd36d2954511bcc6b2a788942218","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f37eb7c87f4b455f9949b1dc45b6b091","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2adbe0ed3274dc69b1ffdeac13879ae","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ffaf52019054745b1fc461564e7301c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b8acb46a16bd456eb234ebfbc0d1e943","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ffab3affbf714c8b972505c7eb2fd963","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"75d0f911b4014c82abb54c51516b500f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7780a6d986be421f9cd70a8e1baea52c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe1596e7f0cc41ba8503cd89c047632f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"908321460b854efb8718966fe0902438","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2d35652beb4b496c85febb845cc15e2f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"34f7003de5f64623a9405b57caf8ebe6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"584d19acb6e545a4826e8724a02557f2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d6a2afa130ab4df4b3601de9e738da02","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5749a6a35a364f7f9a58ea74a81dccb4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17dfc2d79b944b86b2ee93f50627dde3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"278104e653eb43928e28a7ca56d7129d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f8d0134fff5b4a108c4f4bedb824713d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"258f797ad0484abea9ee01ba81fefce5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d489b2a2a5824569b5bd753f6a4f2dd1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d10c89dc18a4e6f93386fa8c05d05ea","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2322f07c7c9a45f5a50aeae5030cd365","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7f022d65743b4ab18d3a9f1a78e4d878","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d694ea6e233646e5bc0012a1687f35bc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1cae23d38c0e4047a3d2173588a92104","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"28560541c037446ead9fc6e0868aa938","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8137c945a7264b48902f69c799bb976a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fd25fcddb86c45c5ae910a1d7d2dc1a1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e959d496caa849c5b2656bfd190b5636","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1db0112d52d34feba0454bb71fdf222a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b67e9b61d34941be8190db18fa7dc405","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2980a8a521bf4222826f30e86f81b227","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64e5654bc0ec4364af5c6fc9b3dd1b72","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"08aaf2ccf3c8433db37ec5284524b36a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"37782ff3191a43e68f15f92025c990a0","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"76db36f9b3df4f59814f0375ab394ead","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c4d1537819104f2f81986da39e54c02b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0b5ef5a5b9c249c989f53ff03087986f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"04b2d3b8796a422c8c3dfbd8f9b22d64","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4516bdf02f90413fa15a9aafac706e11","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fbcd10cb6cf444a084221e27d186bd27","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b274c837b534aa885db9a2b40031764","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a299796edcb84ae582ab163f919ac894","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"77b20e73d0da4ed9bfeac65aaf316ff3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64a7bf5b591f4f8d93fe75b945c0e934","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6d1ad7ca305c4698bfc0038ce00639bf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"82e207c9932a4d8ea6bab1c03226ea3a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"164554482a3c45108ca6be00428a04d3","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3006db96af294ad092797586f2e60ee1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"552910d968b64deca06ccb4bfbfca328","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d92eb020638d4a3e98a6290f3fe2cb08","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2895a97b8144bd1bb9dbd4fe142b203","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea576903e39e40449fd3a1ca3bc4534d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db9054fbc0724c828e70ed80619aa8c7","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"40e276d91f664e64864f2e091a0e9815","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b2adc779be84958a7d98fd7a309619a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7a166007e6f44b9b8e3b875599ed404a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce126dc6948048578dcbba5801cf95da","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d4f06dc9644447f18bcfa807139081e6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d637d595f5804fc4af09cb2b7c5f3184","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"de588d9ce34d4651ab0c4d2d1b231b57","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"256e55b24c9e40fa9d9db9a5843d35c1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a630278a39724d31a275ddcd4974cbb9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6015c316078144028877c620b31cdc01","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3ef7594270d4fa2a5d77c89e9d390d5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"959c3e24f2624478abe81ef6f4466bbd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"70b9ed417b33460e9181ea1605d7eb62","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1e458fb4ccb436b9c84d5bad1506eb6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"faf9f57849c64c1c9d4c483c25bcc1a2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"568f5432497d4a02a7096c67c06a4550","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5f9fdb4fcbd94dc4ba9038ecd2c2ed8a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f0ddad3d35ff4eadad4f450f1c1d8439","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6a265404945648eb8d5705f4473ceffb","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b6b13aa149ac44b1a4bd2bef4f105b28","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef3bd93c4c0c48b0aed04bca9abf085b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9290a5f608f14569b25cc5a66df14983","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a521792dae424ff3b85cf5fc5ec0bf64","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e1e9bc821d84c55a3ca66d5f5b79ba9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"448ae10989954eb59b74ac21d68f0899","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4da1cfddfd364f8191dcccfd723eca5e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a768b1b967b44c4da8a8e9fe2b0c935c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bba85d5133a647b1986772be2c9643d8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c160b5cb6a814491b53acc862f9121cd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ffd247702ea644c2b98dab49e19cf902","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cbe381754e364270afa662eeb64f3e97","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"451a4f45a8d24f2384960a044ebf107f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b162e4545694455e9e3d66904f17f5fb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c44df35f4f5c44aca5aa643efa0b140f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"222f70fba8334e6296f027798de7501e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0d1ebbfb34754e629d3781c714c927c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c7b01e5c91804c26b540a6d863bba3a1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"614f7712ea8448f9b18b22c93bea9cab","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"82302eba8c91482b942cc50b5021f908","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8b73df25b24f4462ba39a28f67a7bf93","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a48d5dc698dc42cdabadf5592ae3bb8b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"394b1ce5f21945159eb3dd79b9617049","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d8f92aeeec174de8a90e28e807b96a83","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c27588b0e143452b923b7bbd86665998","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8ca939af296246e4a1e363d7560e49d3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a88e485d7a1f43e0a45a6db0d8b5ca99","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0908b36a0bd14888b055e2ec0864c39f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dd30547cedaa47a6b49dc4f199aae5a5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9afb11162cb14d07a52435c5d681fa13","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"31992952b8264720ae85a0702e4b946b","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f511f5a4124b41c9beec2556333f92e6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f2922bdc2bbb45649c13f7caf95049fc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3dd6149046c49a5bf54dfb73505c418","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe621909f6fc444fa0f4ce60739e86df","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"948086ab70ec4992ad3543d76cf134f9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dcd2a59ef9ac40faa92520059ff79a30","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b66188a89404445b9313ea3a8fbeea09","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1611566c62e4ebf92a6f183eafb9465","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ac73dac4f5e47569bae44aed816996f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b430760443446f3a797bcb652ebdba0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8cdd7e8245da4e0d9f0b88df91f61a20","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5650032f00f54fbf8ced4db4faab5983","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3c1a570d7394ebaa5a009a40e7c751e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0762d547c7364649804b6e68586273df","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b48be8cb04b84151a46bf8e89718b79b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7488a357d5104ab8b3ba423aa9574b20","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2946476f9ce042e994a311a9ea093b4e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"720e3f6a78314663817b7bd9127fcac9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7ea1fab44fe4a689072600c1e4a7b74","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a3b0a073634d48e4a13cf0874bae69f6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2f6adc0c733a4c16a90670e463e8b974","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f6b5c20cabd480a98626f210e051268","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"726527471c31429db643a4607fc13744","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7b3e1f521b554802be0faa908f9171db","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0a2b4f5811ab4add927fb2d1aac243a9","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f791788312b146d9929900c1e254ed6f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"825c78f1e2cb469cb2949302a8dbe34d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"306db6acf40848e49e575a4f2f048549","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"75f236023d0d47d48c98c63bf1eb1268","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5a372cf01d2542089df7901c99f08fbc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["max_depth_list = [5, 10, 15, 20]\n","min_samples_split_list = [2, 20, 40, 60, 80, 100]\n","min_samples_leaf_list = [1, 5, 10, 15]\n","min_impurity_decrease_list = [.0001, .0004, .0007, .001, .0013]\n","ccp_alpha_list = [.0, .015, .03, .045]\n","\n","\n","dt_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","\n","for max_depth in tqdm(max_depth_list, desc=\"max_depth\"):\n","    for min_samples_split in tqdm(min_samples_split_list, desc=\"min_samples_split\"):\n","        for min_samples_leaf in tqdm(min_samples_leaf_list, desc=\"min_samples_leaf\"):\n","            for min_impurity_decrease in tqdm(min_impurity_decrease_list, desc=\"min_impurity_decrease\"):\n","                for ccp_alpha in tqdm(ccp_alpha_list, desc=\"ccp_alpha\"):\n","                    model = DecisionTreeClassifier(max_depth=max_depth,\n","                                                   min_samples_split=min_samples_split,\n","                                                   min_samples_leaf=min_samples_leaf,\n","                                                   min_impurity_decrease=min_impurity_decrease,\n","                                                   ccp_alpha=ccp_alpha)\n","                    dt_df = pd.concat([dt_df, make_eval_df(model)], axis=0, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"id":"1dfd859a","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:42:12.839079Z","start_time":"2022-12-26T15:42:12.812135Z"},"id":"1dfd859a","outputId":"157d3f50-16ef-4e3b-f9bd-1ef84a5ef41d"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[52132 19573] [1259  2766]]</td>\n","      <td>0.724917</td>\n","      <td>0.123819</td>\n","      <td>0.687205</td>\n","      <td>0.209832</td>\n","      <td>0.769942</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[52132 19573] [1259  2766]]</td>\n","      <td>0.724917</td>\n","      <td>0.123819</td>\n","      <td>0.687205</td>\n","      <td>0.209832</td>\n","      <td>0.769942</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[52132 19573] [1259  2766]]</td>\n","      <td>0.724917</td>\n","      <td>0.123819</td>\n","      <td>0.687205</td>\n","      <td>0.209832</td>\n","      <td>0.769942</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[52132 19573] [1259  2766]]</td>\n","      <td>0.724917</td>\n","      <td>0.123819</td>\n","      <td>0.687205</td>\n","      <td>0.209832</td>\n","      <td>0.769942</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[52132 19573] [1259  2766]]</td>\n","      <td>0.724917</td>\n","      <td>0.123819</td>\n","      <td>0.687205</td>\n","      <td>0.209832</td>\n","      <td>0.769942</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                 model  \\\n","0    DecisionTreeClassifier(max_depth=5, min_impuri...   \n","40   DecisionTreeClassifier(max_depth=5, min_impuri...   \n","80   DecisionTreeClassifier(max_depth=5, min_impuri...   \n","100  DecisionTreeClassifier(max_depth=5, min_impuri...   \n","120  DecisionTreeClassifier(max_depth=5, min_impuri...   \n","\n","                        confusion  accuracy  precision    recall        f1  \\\n","0    [[52132 19573] [1259  2766]]  0.724917   0.123819  0.687205  0.209832   \n","40   [[52132 19573] [1259  2766]]  0.724917   0.123819  0.687205  0.209832   \n","80   [[52132 19573] [1259  2766]]  0.724917   0.123819  0.687205  0.209832   \n","100  [[52132 19573] [1259  2766]]  0.724917   0.123819  0.687205  0.209832   \n","120  [[52132 19573] [1259  2766]]  0.724917   0.123819  0.687205  0.209832   \n","\n","      roc_auc  \n","0    0.769942  \n","40   0.769942  \n","80   0.769942  \n","100  0.769942  \n","120  0.769942  "]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["dt_df.sort_values(\"precision\", ascending=False).head()"]},{"cell_type":"code","execution_count":null,"id":"b5d1baaf","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:42:17.053722Z","start_time":"2022-12-26T15:42:16.337274Z"},"id":"b5d1baaf"},"outputs":[],"source":["dt_df.to_csv(\"./DecisionTree_smote_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"id":"95c60865","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:55:49.693115Z","start_time":"2022-12-26T15:42:17.121854Z"},"colab":{"referenced_widgets":["e2712b88ca2a4c1a87c96cd0e74568e2","86eff9b566e54235880920ece16651f4","69852da6ac9a4eeea960b2178c7fca59","2e91a3e0c32a424c8c77fc6a500eb709","d1f0fa4ac52b4628a3700224568a2e67","9034011801374204a92cfbbaf84e7c84","930288a31ddf4c278bde5a6966144c0b","f35adfe772164f80b7760d721144d728","c1b2ff89b5ab4c57acdce9ad6f0ad336","612038a7ba45471a96cc1c1fe801c1a7","651f0a98f9e347cb9bbd5134b764e31c","a26dbb49fa3d4aa78ba39a713e64a692","39ae2ac07f1d498185bb255d2895a121","b0359839c6e0469e9dd3a4521da4703f","a7a0a4714b624b20862f858f7b37112d","585f4446418c455794cf2000d9d146d6","89b2760e10c54c159b6c455605ca05f7","7f1f8410ce5746429c14104cf3fd9a15","50672757bb04453b9fb18024d8206d94","b8cc41d9de844f9eb10b8536bdde633e","d686978d57ec406abaa09817dc8739bc","6b2beb81838b4826bff54e60dcd0a861","98513f6746ff4a01801f645fd33dd4ed","3230f32f32c84398a7dbf2f6a2f17500","9c3710db8b7145c69d5aa599478c608b","64e025e94c3249ecbd80865ee4084b3c","0335e7cfc06742f8a4fa6541a17fc24f","4993cd3df0314ad3a51939920226a41e","7191f044cff54bd5b6a2752efe3683d7","7b90bf41d6dd4c66b5169f5682ab1d1f","6a8fbb243f02407db49b519dc6163f15","6c3394c0027841c783b788970184c34e","6e7701a6482d427a8b160fd4fd18b91b","250515b36d324a4e8f880c013212b3fb","1a9291270a0247dda6371ad20e5831d3","95316c1e660642d4ba11d65131292e9a","19158c2f3d3340f0afbd3fd20351a08e","1432a9bc310346eb9cb6b6f8888ec269","f385f54242df424d8760b5ffbc50c43b","0cbce407875e47f38a8c9ac813f810bb","b95fffa80e894739aceb0f0896eb0e53","301ca5d9d5904947857496590a5d2a98","e18bcd04d2ad4ca884213102bc6a478d","737d05bc03ca40d7ae95901028fee52f","87691972bb0541d686ce09f4b8be6bdc","5125161b9d2d41afa814dcb86efc4d0a","d69b91c86f6d49629a1299a62c2d7ba9","f1b95df08a334b229e8a6f3a977ad2a5","9150d9d0e8624061be7b52468dc894f1","fecb797d37814c4f85d484c553769278","2ce3087cfa6a4033b6923ec77613cef3","6f305ab46eda4e948e1f913c4da47cfa","fe63077446654b5096814aba8a417c7d","ad405605a7394e3883ea2303d28e976c","c9b5f4fed91846e08be86d4ac2d0aebb","8afb611a9ea744be8bc7f69513056c6c","bd75bdd1667f435dbbb8e68aae62ca46","b89e1ea101424b0ea4fb8371074431d3","9c35a85a5e9c461f8c4c0a0b2883598a","43cd082b283d47af9b0726a082cd0914","ffd7c5f3e25547fa9813215bed557529","4cfa8c9c36d1472082cdd7f5e36fe13c","3116160c0a23468eb51ab552544c9ba4","34bfd3b395ab4ac19a67abd2fd397c4c","ed2ef6e9e46048369aa1b27cd3f77aaa","3034a5bb7b5e491a9b210c0c93a1b583","1ab5025861e74eb885cdeb1194efbc14","652718161b264659aea2978cee5e265d","1fbbcebe087a430d8d9b8211d78586e9","a32613461abc45b3a7c4ff51ba81f012","63f445e94c6148f2baa9e82864167700","d3b352642b2d45f5af631c25ee324066","eb9e143225a64d1e8c7bd5f516010d93","5f1d31b33bc84a378831023534e56493","b630cb6a572645ad991b6141fe34946e","f63419ebbd6d45a49650e9088318a837","882c9a3c15e44574bac874b0d517bdd7","27234881d9f342dfa4786823b50f0549","916353bc87004c97a8c08ad46e4222b8","6600f15184d64e40960321134eaeed2f","5680cdcff27b4304975f398e8553d8a1","e925dc120ffc4bb38ca6a880f4dfb9d5","dba2b10496cb42ea97222b9022dc7733","ebe8580a23b743288553c39ca3a60af7","2e4e46dc90874aca8acb72daf6f4b773","bd8b524ed9694221a80803af0c918d87","50d13a334d404d4fad8262ed10f0bdef","342a2aa62f734e9c9ba749522df7bd75","52c8d38ad6dc49729c986015408502ce","99272cfb90544f8583e03551cefa1094","3dabbf28ade844339c7700612ec9947a","abc68efe8ce24d8b99108a7965107008","4c7e330217444e45b45db865efa98e64","705b3bbd87c744db8072e2ffb888de82","6d80e48f288a49e791b442484003c027","eb28a5954acb4f18b9bc74ac69c297cb","cdabb95c3be74bd3a4a4ea703520911f","b6422cab2e004f22ad7fe15cb8c5d62c","7b04e9fb2b294a5aaeba6571428ac10e","249c9f9ef4ca4572b6517b2353d89679","39db86b803934364949beb6e3341d96a","063db3c35fb44dbbbddb3fe675595432","edfd0fdf17944ce5a7bda06cdec28d15","b971db12a93e457daa6c56ad07e3916d","57dc768c7e4a4f83aca184143d7c8a78","5a44e017bb67467d8e941ed2c1213c76","c3fe3586ea6349928dda3585ee63fa7d","a34b1c9e29334c0ebb44d5249ceda377","90c52bac161149e5a2d94c636618d5cc","32401c1898ad47139bbc6453cff1a0b6","72565671d2084e05837150bdaf593dc7","63fc9c4e2c424de8ae807ea53edc4602","f7688dda2cf149779a397cdc640ed376","52c6708c6bcf4e2d9ecb4b271825e0e2","3a40ba8328b54966987abac2109d94ad","ae05c8340011465b8a1cae2bcebc4d46","5666a9195ea74242b0ba8ffb7885c199","e50b91a6c8f74fb89070ca1570cb7bf4","4d6e20edc7024b31aa39f49ead87b631","a454c9aae5f744eabaeef05a66b1a40f","9cee3ef4d0ad4a0ebe4f5391734f450a","03f047fa1e134fafbf4c126d08939ab0","aaa11cabe2a14adeaeac35c60dd76ab7","0efbfc0af49c4e949d20768e6ca72ac5","d5c0a1928a864004bb2e306b2767389b","5f570964f4944e46b06f89a17788edca","cbe8c26400ae46888348fb165ba52e63","76f9e4e3ccea4e36b392ac54722ec682","ab442d7604ba45c5a2ad16c807f3286a","207fa2e3567a462ea29a3bc3a9789441","b4c5e346986145b580a18408a2be656e","f92ee178292041bfa65fc8891f7e199d","80bf74080c9e490abbb16876e3343e09","524e5afab803469b9711de59fb813c9b","f8b4257b777b49fa8a897b204c31f91f","ff2f452a5f6a4666989afa7562ecac07","6c61dcd4e859490ea98d55a41fbd530f","698b572355b149c08a8c30bb1ee473b8","8f8ecd33f8564644b50e3210e91eb65a","041bdc136b854e45b4b56d07b9de0670","0e894820d29344efb6934868d2d9deef","a3eb23bed978472590de3710d1e092f2","bb0cb8f2717645f8a6a4399c60a5fd25","32a85348159840f3a05b2d02731bb07a","ba087df07c5741b39f443221d3803a15","d2b3dd8190b14a08b8f109c19872d144","122fba368edd4477aa9dbb80e885db0c","836adc2c245143a4940f98cb0e23ea83","9b19666ac7214a09842ba6e2fa759090","7c858f4da4b24dc6b1f6ade42d180e09","257debe6d295454ba72f5bfa810f051f","baa84422bcb7444d8c7d341bca7b51fc","f3613812e73b4adb95ddc66373962267","8bb8147f58ea41cd9d208a5d1ee6932b","88dbfb63e40745c6913410ba3cc41836","e4bde394d8844eeba23d40a60078dab4","fd0d2047b90e493699d06016cdd322ef","8f411911cd6b453799f00bee47ebed29","64f5c315684c4915a0507199d741d370","6d7a73740574441aa946130a18c7043d","f672ef47050f4dc397c4477825ffd511","f6b6e0fd1dba4ebbbe76db3205891bf2","83d9b0bfa55f4942b2e54297289d2916","993b49ad82654bf88997b710f564c003","c43e2dde847d479b86516cdec8363a89","b092710036a345c581c61c5fb39044d4","4f351f01f295487683b9c44fe5085f9a","07209da76eb5426ca544593539fa9370","f29daa02759c486488b8fe3ad343c1c6","9c391235faef4e7484d3c4e343c7aa17","f31319e7d2a748aeab2e88527ddb5d97","a94ba79a45a1456fad3ea720501b3bcb","d8c2c59cb662463e90c3ff47ab7d0e85","ced5d9072772413db0462d0621c6333d","9a9996997de547669103b135450ce0d8","0be46d8fb48b48319bb899f1dbe7b749","3825d32eaf884f45a749e943db733f31","2dee577ac0cd4c819d0f9c5faa710d24","d94658daa3384d5287584536aae67940","33906e746a314954acb782ddd189469e","d6df72b9e8984f4d9bc471bd82878c25","d8e959f8a5b543ce8c28ca8f8ae3bd6a","ebd870fc48054e7e9457c753a4bb695c","3bbc8c264efd472fb3179cf3fe5cadd4","4a505a94f47a4e91b3a1a96a841903c3","5ff9e684a42c48f0a38e1a7e3fabab86","b2b5b6cb662d42c5a2a2e48ae84b6e99","810f9e16145a4311ae50264b4dfdd609","fe3c4959adc54e098f80347c5874828f","2ca3d45995db47a29dda81134553e1e9","8e3d0c25dfb843b196d654fe1a44bc13","1c0a9669db16446d9a521283a9ccb69e","796c2f0b9a854988acdf4346a4f348cd","bd2df5a34ad248028cba8befbd5e9dbf","647aa14b67be44b0a9caf11a3895206a","4d001256a4514616b93a5d16688e7e8e","a1ddd464a691455bb549d7539f3f92b9","d7e7dceeaf2d46398996e7dafb272703","ff75736c0b39461a984c744f7ce05ada","63504ab3d9134e06abed9a1d38f11faa","3b69a5f8cec743d198369f8d05280bdb","a75de2bafa71477494f0bfe826ac2ce8","96b4879cd9754a94aa33b932ab7c975e","adbb0d55c50346c6b9dbf5fd7f8dbbee","6aed92869e0346ec96f992ef3f0683ab","00ea237e2d624e49bb3b19b510e12c9d","be6743069ea843dc9202e83752164467","0cf29f72a5c34919bf7328e5c791c6db","611af17b65864c1289bd550376ee6a9f","3533687e62f545bda073902f085d1868","1e8af965df6641b29ff4ebfec4f21327","94b41f5b40fd422f90f4e4560f1f8ed1","1e8ed1a79f72405998d9ee09215bb6d1","672888629be945a49fe4c62a537eff98","e35a637a7ac343809a6f0198c546645c","e6461196a8d2428bac5f246b03df7b81","7b36c4d5bb3445bc8a224dc43779ed32","851bd5c475c542319f5fe4f98c956328","1def908a6df8421c984e34ed0cb187ec","e64d6932f1cd446d98db857cba555caf","9122ca3f770b4557addce40add438d1e","abca5dd258544c5185ef55d6484c8cb2","7fde2d269d3641698a7c85fe0ae903ea","140980e7f01c4d849e62f7723d713a7f","0960de1812c042179f5982b6734000fd","233266e0764b464b84a5285bd881e8c9","d03881a17d454d6e94fcf2d2009c7fa7","6fb6c6feb57b4c8fa033816c700560c8","60b56ec2788044ba9009b6490c565f03","8b470723a4024bd7a9eb22deabe8e77f","11ed5e24aeac43319d920ef7e8e32db6","ea7ce4da4e764e6585b1ce5f2b9dd29d","e7d6f62852cb433c91d5c11cdcef8661","bef0f3e044fc4c4f832a822c7e7bf35c","25398e1fc69d422f98d26a0680736f08","03cc5e4ee93241929e9056b26a70eac4","40d1d54213604ad689aa7bbe427267bb","176c01c925234914aebc5b8d730a68e8","296db7fd74a64e24bf36a1b5843a8049","1f1eab19548a48a9ae3552af151e589f","f72564d19a7641e8b0c4b2edb2316e50","be757ae89c814b27a2cd36524a6bfefe","6b06254a809b4d2e9e4179ccb9db1dd4","363df90a715a47ecb2a06efeaed781a6","597c2cb222484dbbb1177fb55c776f5e","de08c73bd16e4394a66a32c587946bfa","0d671da3a9d14fb0a61a50ec52e2d2c2","2db7273487e8497285b30c061017a447","89d691940296454b81bbea5aa915dbc6","0988a7543b82413f95bd7dafbdaad607","2e18b2ce20264cfba39ac18924382308","97f10ca51f5d4c9a9dcda315d9a148df","9c6f07a191b847538eef908393a5a8b2","6afcf007a7c24c5c82f54c27fcef0988","ad47f150380744cdb92313fe5c8b3fee","dea42facad584fcd98bd10047ffe9de8","7dd3160e39674b8daee126c6e1b0c00c","0aab59de5db6426980cf57a01757ffa2","aa31562595a2401ca66db471a2fe6d38","762fbe76b557484bb35b70b7427bc104","3a840c0d183146aeb346d063c8ca0e78","8c5766897a9e4b45b394d03602da91d1","263e6eb2768843bea41b358ee2a54d06","e6104e1a6eee486a891e4eb19964bbf4","4d5d21185d4541edbd1d9a2bd961c0ea","1276261ab4d4441b8bccddbdd4d4e6af","8a64f39fac19458ca6e561b72ca5318f","3b5aad33e5e04f7eacb37b2a852a39c8","9b934b270a9a468795703e5836c92bbe","d0e6aaf10f5a4612bc41ea4b46c681a9","b7c886247647412bac9824b68bd45510","a1e24290bb184e90945c333d90ade310","677ec12d3da2493281ffb4a9606d82ec","c9a1812d762d4547af1c1409781af665","5e948267760e415989fe6a228a9d16eb","b29f03b6d2e9429cb7b1766bd08d8c17","04b72f8dcef44d86b20112503a2af9ba","afab6749ce8b4ba3b40959be6c19ed79","399692a4b89d47cfb1d1b5bedaf09ce4","adea369d24a144a8805bef8e921e6c56","09ae7aea582740fbaca2c0e976173378","f83098371bf242eeb5248de527738b9b","95d200040d774f5c8346d19f2694f5ce","c607d3dc56d4437cb0a57835948479f8","3c0cb5949ac6491498ff0047871a647a","1db2f32eacc44461b113c79350628522","6b498aa7185c45c4b9ccdc0f01915486","bf3a4f41b4884a01b78bcb193399e5f6","9c40fb4c535b40529d58c6f0616146e0","d9ffad02c0a347119ddfa3c1c88a14a1","1e17e730b4b4477a82df7d3ff4f58188","3b98c6a78d9942ac9af335c8605d9d8d","935397f75f1a4c358d1b7a0d5d52f6d4","dec844056c7444518ad90cdc8d82e068","806ea8eefe1142d2abcd400615a08d31","268feeceeafd443fb111a76c376e8a0b","b7380f80a445413a950d7b841a691f80","b39db096b23b4b189ac6389fb2ffde50","f5aceb3ddda247cc88d3acd77eb74379","3736d00cb7c74cc9b8ff8f5edb0bf0f8","b3051c7bc7f74e2686a9af945813d5fa","39716c3e1b194643ace2645043b0f0b6","fa8f2e719b354d9da4975f84ace071ec","2d90fa21ad4049119f1d039b440b3f0e","ee059d859e1d4134bc545c3f8a9d214d","f05012dc27e14da6adf683e3750e101d","823bdb2bbce04960b889543bfbd45927","ef095a2e8e8d4234a47656bb4106816e","c7c43e00ce01465aab915d71098ad00d","0e0ca3a135d042c58f167a0b4f62478b","7321cbf8c9cd475eaab34ef67e00f83a","d6eed0378a1b4a15ae3ac483962ef579","a7a1f0cb77a242f8adc7e4ab7c6baef0","e868e25bb083496ea757247a0533397a","61008846cdb34fa3a8a3a51fc0d1b6b6","a93a0ddca4074320a78fa5f7a851584a","aa7b464c3f6c4aefa0ca4745dc5f6035","151a4d8b6b4346a98ab042089e62e968","4f54e39a82fa483d82d82498b83b0f93","22ca5c31d8a94db281399d5e3dbe9525","9da7702c44474873894a794fe1f188c2","2103e6ac88d245d18f454349f9cc95fe","143b6a8702cb4195b5418315c6bd742a","60e76643b0af433fb8ad92efdfec2e08","4d339b01047f45c6a40eb6f0601a448a","9e4daf9febd6472abcd1c3c5781203bb","afd28c1980c2444f9b8bbeb8879d6ad2","1076c77745d647929690ce0bd455e4ce","a9aba9a3d80e46ce92e9a3d8eb460b5b","1ae5c98dfc994ac7bb4d77f474b1910c","6bd84ec406e94868ab4b04e3ce6ddf9c","2a494349339e40fe9314ef844b843a64","9ee5bc0a48e841b8b6ce389e34c47116","8ae30c4b8f3e4f83a4499a894d0ac099","719d0dba9fa548ad98f5f9579dfd269e","91fa8a5a1a9a472b91df50c7ca5b8276","533fcb074a60462f8da95d4df7188638","b9fb1e3b99a44f42a3a0e9bb7b250be1","c5c820937f6248a7b2425a4161c91ed3","b00f9900bc17483b8ad6b44c041716f9","4558210a29da49d38bb6c5070868038f","176aad125b634a1798eb4ad90a4edcf3","1ca52cbb6c334555be9ffd2847567f25","fc9d26b49db24155a48a004be630cb4d","734531233f1e4801a2863d484e771766","a1ce3f2f607041d1b95548ae30acc8ae","ed3b2dcd781c4251a71f15131d370ea5","b883c1a4e0d94944bfe67632b3b11a68","fb345e6d3421451da453cffee56c79fb","417cb09724194974860e442d3e3f521a","73c53fa47fc64b918cc0e7c9420351eb","c4c8761394754eb089776667fa861625","22ce80bf32ae4564b0ccdd962873b634","4da5b698d25b4c98a327b704e0da45fa","6feedd6105e949d9a4242e834b2fb441","21e2fdec24cd4e94943d9069873d7c3e","dec3a02e8e20481d94ba449f818f2500","0b6f0996a4de4891b753d5d40b154bfd","74017027ee9440599f5646a86a4e71b3","3f8d91fa21494d8babfa170b09c6fd5d","e1308b4cbc814eab922292a6bb645ba3","61b0a1910c7f4dafb596ffad68971d99","2cace469c44c48e9833f726e14c0cea2","cbb3c0927b9b40e08247d009d77796d4","428e17cfbdc74b46a016cd0a33fbc237","e34f0baeeb8947119526e323b26e6b9a","fb330e4ed4834c2983496eacd86d8b17","fb315d83d2bb435cb4ae181c9d851ece","e00e62738d444541bde95dca61c01035","9a12e2fbf0cc470b84b77d6f41e64051","aabf95e3a83f42b393ee351c375ab095","3968eb0d6e5f41d98b65600b404c0381","977d40f40e4e4322a4063b6d52b0d0b1","7d6ec17bb5304e6cb99808325b063eae","b9faf5008fbe40f6b8db118111672434","fb90f78c43fb4d9eaf0fe813e5ae185c","9eed8767fa834ade9a71e6da762e1d29","e54fdfea9bf8410f8b14c283265c8e47","baec264afdb841758e45765f466b5ac2","1d1cdb766d9a45dc863a7709fda65ce0","327b0592089d4ab680d3e5ef91bb2c20","bec373891a6641d79a2dfdeaacbded72","349f6cc45b154a9f9a166099c612f124","cda613e751c94ea88d61155dadac81aa","173726880a4d499787d55e6cf46eb4cc","09ed105ceca24eda94e54a1c3109fe8c","674be341d8f043a59a8efe2025b96131","075c56318c7f4430bfd0dc265c930595","3ddeba506bc841349b6d8590b0cc2f56","703fdfe20f1f4890bf51434fc9c1fb2a","b8ca7b54290a44e49617e1985bcfebaa","ee24d9d1e639415ca9085e445e35612e","02ff2489a9d24955aee46f2ee58eaa4a","f84564fe4c214958b7beb9f4dd4ed160","715114d5d40c4c4aae37993385df739e","82a7f917faa74fa483ea97e32e50b2d1","21a37a8cad454feaa33ac75f2279b8da","c318b2b5705f46d4b45b1c87eabe16fd","1b3b9f01cc0e43b29254b3fc1df18e31","00975680ef6449f69ddd5574a1b34760","092a2231aee648dc9b1515d6f2d9baee","3b27bc45001a4cf09bfdbf77905a23a3","2a93c9739e6e44c3b864690b5d583506","e6fe60ef241b40069710601c903ca639","43580b59a44f4e70b03cbf0f57d0e5a7","5c52ea01783445bf999eaebc566ca7e0","ce13193a7d5e4a08bf669901036c2c57","9b4acb7058f747f6b8178b9818461a21","56772bac0fbf436188e904d85cf29846","65222168f4bf43c0850467cb406379ab","b8233cdfd42a4dacb7851ab19868fca9","dea134aebeba4d66835943ed2404e71d","3b3205d7d4f14ed2a89df073b78c53fa","967f6e5602e643d886839d98032cb0d5","906d2cbb22884592954c1043dd160ffc","9159185b73584f9c8555e5af589d2efa","228ce7106c834bbbbb48d73ecb44a8e4","a048cdecf5f5438aaa319ce27b7404a1","561ac628cbc84a1ab30b879ff208443f","8d81c18fe0564b50a2e07d25337d4241","14d271545b6d48dcbf2c6d0ca719e581","f743af7e00954210a5bad76527a5a15e","01691441ee7c4e4c848b0605a91469ba","618d6631f63a43dfb4564fdef0e59faf","a49837aca0ad42b19f3aab7fb46e1336","e3d0fd2bcd1342a6a0a66f16f0192c26","686209715afa4e3b9099e2f3894bf928","c2676e30cfe34fb2926ade405fa84b39","f7bd58e8e21b417b89ca8c4441127e25","759ce26adabf404fb5555e0ce6535cd0","efbeb77e120147ef8e68faa6a476af9a","f3a8d4e32f4c41bea55eb51b8ea033b7","052088e5dc3046638adae39eabc037c0","f1c21312eadb4b9fad36adde39358379","9e7c672045264d999fabed7359dbf779","e830d9f2b28e4487948e62f309b47169","428582fcaeef4a7488ccde8098f1acfa","14cd36c1466e49679bff7c417d0d3453","ccabd57fc85543e399be6ac680569ea5","e409b119fc7346ef95c6be236b9bc9ed","ebdb36b3c80a49fa8293949e57593080","cd1d480d919446689e39b580a7a1921e","7ca058b7dda0451c9f8e7267f86d0a43","a0873f2ae9e54cdea873e9a05540bd72","e63acc84c67245b0921b3a088840dd9f","bd19a754130046389d5fd976ca7246db","11274986449c43e78961193c6df78a09","29fa199f93934202ad65d8b597564766","eaa374dbcd70442d92bbea77d496607f","85d7e30183b5466e9281aa83033d18ce","142433823fb64fd28c013d176f255deb","4d0c4ac6a127432f9ca730496b4e477d","5c8574d3b1914716878cf4856b230cd9","03f8b2afb8754c8e8e0805f0ddeeb8bc","6e2ddf4f6cd2448f88391cc02e3a2d4c","efb6591860d846bb8f086d45c024eea6","8f4010f716f34796aef071c54889aa64","fd55e795d00d4a2f8e33d0c12060914d","9dee38ff6e7040a688c952e6b3111a36","5aae01bfce8e4fa6b76c66e789a89c89","333dac8c4ba242a0ace4b9427e28ed77","e9541c0aaa024377acf8604e9a59b7e5","ac5153d2a73f4ca993e50a458e5a0341","41cb3dd60e244255b8b57e556857844b","1d4c490a37e647b48066bf83b98f9a8b","33e40c904fa84bdba5dc51acb681a53d","dad89cbcbf244deb8add33d36ae2849a","03f5a3b2764746d3936158485ee834c0","fe211e2d4ba2482da4d798176f23e30c","55580206f09c49948343d0bd6d62a14c","c06bf794afe04812b4f0381a87757eaa","4a1685ca2e0a432489c64159d283ec36","ea6df5fe60ca4007975ae5d056742adc","aba0dd897a0240bba81f45b52dc50f28","66a980b425e74e89aa090ec7cfed3420","3bbe91460d004e9cab4b5936dac0e9ad","2be9c30a5bb04f2e8d55c285357531ae","ce3d71379d244e338b18e56cd7ae04dd","b7432eda077d4caa8afe8b687d69313f","f294e3acdb1e41b78beb83f37ec6466f","59fc2100c0734ad98984ef67dcbbd614","ea10342931654c10a377a1cc8b6a71c2","167bb270da3a4af493c5707ce5148176","4db1aac15cc84e2fb41d10e4f39e1b08","3f04db3a2d2d4395b087702d532bab2e","067175830b7c4c65ac4afb0282a36082","8cd00947086b466ebd02d08971b6e97d","bf51f9400d5545be915b9eec8a8bfe41","b3c40d5a2fd64b14b8843395952c7fcb","1c66069c2b3045aab8af15d7da943ef4","5d94092dc2844627a61843267340621f","c4a0cfb243f2452c9d87dbd9d86508b8","65221cbcd9374e9280b1e825eb222aef","a8ecd6627d154216a12f90130abe0985","9cbda8e0fb984f96a218195043f98bdd","aea48a53dba8491393b7ea93eb42cb40","11020ed60a92475da29ab45b2ee61379","80b39755a213461a8afcbf8b87b7ed55","272f1896ba1841a7af47ca181d193b87","d6a9ae3546fc478c9228e406b714253b","ede579199caf4a40b0e79348349e7a14","0f3b648a48384457a43895b89badf352","40079d88ebe14d58af4ee9cc59aa8671","e359ab5976024993a8bf1dc7c9c73d92","b0788c51c8504b9db2f7a8ac9251cf6b","5e09237417914c1882f033e9032b2693","0fcbc55b92044f099a6543469807a185","de2a397e2d3a45d7b423a439d22582de","4d26b7ba2e584cb6bc029079f918e1de","a81b188839e34973bb616fe58723a60c","577e2a075caf453cbc4145ece9240b0a","211fdd7b31c1479f819ecebbdf0a675d","7c0b9dc1695a4498a0abbba4b2fda180","5d18781ffea04e58b6eb811e3307c0f5","5e07812b60954b97bcbef580cd1e8302","d0871f8f58bc49afb853a659afcc4f32","7d8f81fa5bd24a379ed5f957d2002ebc","960cd406def44bbf8d6ecf13690e906f","5919bce914b94f95890f387316319898","2991186b5366446083c45f46b328a10c","45741e6cef1b4a10869e527f2cac8339","a19260df32354087ad6e420b7ce46b59","c8ac9ad5d69a49deb577b4790d3a9c27","fd9fd0ca5ab14f3088937c52595781d7","cee0d704192e4d508a00b2e6e04d05ec","55c0ff1cc021408a820f0afacb0ec444","c1df62d9c03f4f13a58f532dfc371ca3","2c1331961caf473a893a60d48f8bd336","c13472d09ccb439f8f6d49e413bc8308","7acaabe620124b81916c104bf4995ed6","1123c2e8533c4d778923599ab2dd1f00","e8ccddae528c480cabea0e168e92323a","f380585da81b4348810504367fa05369","0c93bdaae0a04e04a5971b6db9ea6ece","2d6f89b8583d4a4f9359c54ae2b7ec84","548f4fa1904444c4b00f7283332ed8ac","530e9358c4574e519c36eb57bd3bac1f","2c4df581b9c14e9ca11b47b6dd94f566","368b381756344bcf8d25db7868295e51","e96434ee07a0419b844c7103d75be2df","049695a665414bd7b821c3b4219bca0a","f5c174a42170468d950fde33c776bb30","986e780244fe4979a3c9d3914135d7ea","6f3673e7d54240e8b22e62de7f63d6e2","f5420328b0024f82a35aada2eb5a1440","11dba7937f464f74a83f13a216b3a385","b5cc69157961475785f87f72b8e69c67","1dc9b751959740b2a76eff96123e239b","bc31e1d44dd047679463d0f985118805","a2ba54465bd54a8bbe91600b2ee2f8e4","2c3a06d5f527483ba5ea656876f5a023","34d81cfa83ba48f29696cdcd9ddd838a","6c123edded6b4d3c9e7fdc674a53ca0b","17d475fd25ab4f06af5b39808ebf02a4","ce37e44ae04a42049deb49887d8513f7","d13e8aaa6d3747729996d118929b7905","30dc35e0d9a64cae9fc0a7ffb6e80d19","db85cb9ace4a4aaaa84df5920631f76a","f9ee914c49c647cfbbd25b2d908cb1ee","16b5109bd2f848c58bb9b8aeed323cac","8aca206b143043a2bf28cd4d2c54b0ef","4ed3fa2c14924b8bb5ff37462f69a1b3","e65a2fd2ca2c42ee800caf194c821a4b","1f923581ac7341a8bc4ac3f477b30077","3b73efba64cb43d0bad6d4094ec9bb3a","14983879654d452e8179422233c8ca57","bde7aac36670441e9f8c99ed90bbc5dc","e48740b0ba8d40bb91f6651d6faf5720","f1a1bd646af6401a82485ee926ce7105","092cfd4ea0ab424cb9e4b7291258d4c3","7d6f3dfc6e9445acb6a4ebb7f693a737","25454ad84efd4cfa93cdbd0d987a784c","ca4490e63ac5471ba5b9b536b7bdc760","7c6cc4cc4b6f43ff84916ebd966083ab","22e4129b5ffa4e7580efc4bcc8a90fbb","d3f8a9ff0952450aabd25014dcb22e54","5fa73ccb23494d819bde64c3dc5f3498","170bef605b4044b48310ff109c6e0aa4","2d20f2f85956422f92fd50f2fd9853a5","d39604847e4b4e0e9ce69a9e059f880b","a7e604ee18a147f3b5372f78d534db9a","759b13c7150049f080b9231c88e337c6","43c7dd2fe2234053b83a822be584f64c","aad354671916484e82d8890545e8aa39","bf3c7766288846279053b75d3b473bdb","bb5e04ef35254628b5dd89884b6e3758","66967a16129f42b3a111532e61340a10","e6fb1c6fdc0a49f4bf15eb53219453dc","2e3113d8af944c65ba285cceb8ceb81e","2cb76f3896da41c0a29bd88b4df0aac3","8d01ae57688640cf8d99a12a77afa241","856f6e58e844443fab3d464e6c7ee706","1ea9d9d6217944f1bd6e5fc888a59ad8","30a14ea0a4794ef5a31f1856bc8960e1","b4b695deb15644c286b9ec84439da3bc","db83240056334404b7ac852f499b97e3","3397e7657b834124a1a591e53e707180","4d24bc213caa4577a8d00234e86a17e0","23ce023754f94b57b184b971be6cdd63","621614ec3acf4615a52bd30bcffe9514","247f9b1bdf4e414fb72d296dc62e824b","661a9159583f487b87c83dcfffb29bf0","2c1c86539317402f8832af1e6d8ca394","ad993a176baf457bb3ad9b1c8b45ca30","72f25068a9d94373bd3d0dbf6d68827b"]},"id":"95c60865","outputId":"7195a878-ebf0-44cd-f3b9-272b94f181a5"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286731\n","1.0    285345\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71693\n","1.0     4037\n","Name: HEARTDISEASE, dtype: int64\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e2712b88ca2a4c1a87c96cd0e74568e2","version_major":2,"version_minor":0},"text/plain":["max_depth:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"86eff9b566e54235880920ece16651f4","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"69852da6ac9a4eeea960b2178c7fca59","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2e91a3e0c32a424c8c77fc6a500eb709","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d1f0fa4ac52b4628a3700224568a2e67","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9034011801374204a92cfbbaf84e7c84","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"930288a31ddf4c278bde5a6966144c0b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f35adfe772164f80b7760d721144d728","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c1b2ff89b5ab4c57acdce9ad6f0ad336","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"612038a7ba45471a96cc1c1fe801c1a7","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"651f0a98f9e347cb9bbd5134b764e31c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a26dbb49fa3d4aa78ba39a713e64a692","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"39ae2ac07f1d498185bb255d2895a121","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b0359839c6e0469e9dd3a4521da4703f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a7a0a4714b624b20862f858f7b37112d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"585f4446418c455794cf2000d9d146d6","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"89b2760e10c54c159b6c455605ca05f7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7f1f8410ce5746429c14104cf3fd9a15","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"50672757bb04453b9fb18024d8206d94","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b8cc41d9de844f9eb10b8536bdde633e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d686978d57ec406abaa09817dc8739bc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6b2beb81838b4826bff54e60dcd0a861","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"98513f6746ff4a01801f645fd33dd4ed","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3230f32f32c84398a7dbf2f6a2f17500","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c3710db8b7145c69d5aa599478c608b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64e025e94c3249ecbd80865ee4084b3c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0335e7cfc06742f8a4fa6541a17fc24f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4993cd3df0314ad3a51939920226a41e","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7191f044cff54bd5b6a2752efe3683d7","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7b90bf41d6dd4c66b5169f5682ab1d1f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6a8fbb243f02407db49b519dc6163f15","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6c3394c0027841c783b788970184c34e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6e7701a6482d427a8b160fd4fd18b91b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"250515b36d324a4e8f880c013212b3fb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1a9291270a0247dda6371ad20e5831d3","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"95316c1e660642d4ba11d65131292e9a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"19158c2f3d3340f0afbd3fd20351a08e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1432a9bc310346eb9cb6b6f8888ec269","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f385f54242df424d8760b5ffbc50c43b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0cbce407875e47f38a8c9ac813f810bb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b95fffa80e894739aceb0f0896eb0e53","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"301ca5d9d5904947857496590a5d2a98","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e18bcd04d2ad4ca884213102bc6a478d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"737d05bc03ca40d7ae95901028fee52f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"87691972bb0541d686ce09f4b8be6bdc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5125161b9d2d41afa814dcb86efc4d0a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d69b91c86f6d49629a1299a62c2d7ba9","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f1b95df08a334b229e8a6f3a977ad2a5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9150d9d0e8624061be7b52468dc894f1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fecb797d37814c4f85d484c553769278","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ce3087cfa6a4033b6923ec77613cef3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f305ab46eda4e948e1f913c4da47cfa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe63077446654b5096814aba8a417c7d","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ad405605a7394e3883ea2303d28e976c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c9b5f4fed91846e08be86d4ac2d0aebb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8afb611a9ea744be8bc7f69513056c6c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd75bdd1667f435dbbb8e68aae62ca46","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b89e1ea101424b0ea4fb8371074431d3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c35a85a5e9c461f8c4c0a0b2883598a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"43cd082b283d47af9b0726a082cd0914","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ffd7c5f3e25547fa9813215bed557529","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4cfa8c9c36d1472082cdd7f5e36fe13c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3116160c0a23468eb51ab552544c9ba4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"34bfd3b395ab4ac19a67abd2fd397c4c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ed2ef6e9e46048369aa1b27cd3f77aaa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3034a5bb7b5e491a9b210c0c93a1b583","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ab5025861e74eb885cdeb1194efbc14","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"652718161b264659aea2978cee5e265d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1fbbcebe087a430d8d9b8211d78586e9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a32613461abc45b3a7c4ff51ba81f012","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63f445e94c6148f2baa9e82864167700","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3b352642b2d45f5af631c25ee324066","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb9e143225a64d1e8c7bd5f516010d93","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5f1d31b33bc84a378831023534e56493","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b630cb6a572645ad991b6141fe34946e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f63419ebbd6d45a49650e9088318a837","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"882c9a3c15e44574bac874b0d517bdd7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"27234881d9f342dfa4786823b50f0549","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"916353bc87004c97a8c08ad46e4222b8","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6600f15184d64e40960321134eaeed2f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5680cdcff27b4304975f398e8553d8a1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e925dc120ffc4bb38ca6a880f4dfb9d5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dba2b10496cb42ea97222b9022dc7733","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebe8580a23b743288553c39ca3a60af7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2e4e46dc90874aca8acb72daf6f4b773","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd8b524ed9694221a80803af0c918d87","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"50d13a334d404d4fad8262ed10f0bdef","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"342a2aa62f734e9c9ba749522df7bd75","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"52c8d38ad6dc49729c986015408502ce","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"99272cfb90544f8583e03551cefa1094","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3dabbf28ade844339c7700612ec9947a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"abc68efe8ce24d8b99108a7965107008","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4c7e330217444e45b45db865efa98e64","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"705b3bbd87c744db8072e2ffb888de82","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6d80e48f288a49e791b442484003c027","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb28a5954acb4f18b9bc74ac69c297cb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cdabb95c3be74bd3a4a4ea703520911f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b6422cab2e004f22ad7fe15cb8c5d62c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7b04e9fb2b294a5aaeba6571428ac10e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"249c9f9ef4ca4572b6517b2353d89679","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"39db86b803934364949beb6e3341d96a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"063db3c35fb44dbbbddb3fe675595432","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"edfd0fdf17944ce5a7bda06cdec28d15","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b971db12a93e457daa6c56ad07e3916d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"57dc768c7e4a4f83aca184143d7c8a78","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5a44e017bb67467d8e941ed2c1213c76","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c3fe3586ea6349928dda3585ee63fa7d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a34b1c9e29334c0ebb44d5249ceda377","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"90c52bac161149e5a2d94c636618d5cc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"32401c1898ad47139bbc6453cff1a0b6","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72565671d2084e05837150bdaf593dc7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63fc9c4e2c424de8ae807ea53edc4602","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7688dda2cf149779a397cdc640ed376","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"52c6708c6bcf4e2d9ecb4b271825e0e2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a40ba8328b54966987abac2109d94ad","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ae05c8340011465b8a1cae2bcebc4d46","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5666a9195ea74242b0ba8ffb7885c199","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e50b91a6c8f74fb89070ca1570cb7bf4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d6e20edc7024b31aa39f49ead87b631","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a454c9aae5f744eabaeef05a66b1a40f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9cee3ef4d0ad4a0ebe4f5391734f450a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03f047fa1e134fafbf4c126d08939ab0","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aaa11cabe2a14adeaeac35c60dd76ab7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0efbfc0af49c4e949d20768e6ca72ac5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d5c0a1928a864004bb2e306b2767389b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5f570964f4944e46b06f89a17788edca","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cbe8c26400ae46888348fb165ba52e63","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"76f9e4e3ccea4e36b392ac54722ec682","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ab442d7604ba45c5a2ad16c807f3286a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"207fa2e3567a462ea29a3bc3a9789441","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b4c5e346986145b580a18408a2be656e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f92ee178292041bfa65fc8891f7e199d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"80bf74080c9e490abbb16876e3343e09","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"524e5afab803469b9711de59fb813c9b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f8b4257b777b49fa8a897b204c31f91f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ff2f452a5f6a4666989afa7562ecac07","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6c61dcd4e859490ea98d55a41fbd530f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"698b572355b149c08a8c30bb1ee473b8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f8ecd33f8564644b50e3210e91eb65a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"041bdc136b854e45b4b56d07b9de0670","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0e894820d29344efb6934868d2d9deef","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a3eb23bed978472590de3710d1e092f2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb0cb8f2717645f8a6a4399c60a5fd25","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"32a85348159840f3a05b2d02731bb07a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ba087df07c5741b39f443221d3803a15","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d2b3dd8190b14a08b8f109c19872d144","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"122fba368edd4477aa9dbb80e885db0c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"836adc2c245143a4940f98cb0e23ea83","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9b19666ac7214a09842ba6e2fa759090","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7c858f4da4b24dc6b1f6ade42d180e09","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"257debe6d295454ba72f5bfa810f051f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"baa84422bcb7444d8c7d341bca7b51fc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3613812e73b4adb95ddc66373962267","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8bb8147f58ea41cd9d208a5d1ee6932b","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"88dbfb63e40745c6913410ba3cc41836","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e4bde394d8844eeba23d40a60078dab4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fd0d2047b90e493699d06016cdd322ef","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f411911cd6b453799f00bee47ebed29","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64f5c315684c4915a0507199d741d370","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6d7a73740574441aa946130a18c7043d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f672ef47050f4dc397c4477825ffd511","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f6b6e0fd1dba4ebbbe76db3205891bf2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"83d9b0bfa55f4942b2e54297289d2916","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"993b49ad82654bf88997b710f564c003","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c43e2dde847d479b86516cdec8363a89","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b092710036a345c581c61c5fb39044d4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4f351f01f295487683b9c44fe5085f9a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"07209da76eb5426ca544593539fa9370","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f29daa02759c486488b8fe3ad343c1c6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c391235faef4e7484d3c4e343c7aa17","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f31319e7d2a748aeab2e88527ddb5d97","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a94ba79a45a1456fad3ea720501b3bcb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d8c2c59cb662463e90c3ff47ab7d0e85","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ced5d9072772413db0462d0621c6333d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9a9996997de547669103b135450ce0d8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0be46d8fb48b48319bb899f1dbe7b749","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3825d32eaf884f45a749e943db733f31","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2dee577ac0cd4c819d0f9c5faa710d24","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d94658daa3384d5287584536aae67940","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"33906e746a314954acb782ddd189469e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d6df72b9e8984f4d9bc471bd82878c25","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d8e959f8a5b543ce8c28ca8f8ae3bd6a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebd870fc48054e7e9457c753a4bb695c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3bbc8c264efd472fb3179cf3fe5cadd4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4a505a94f47a4e91b3a1a96a841903c3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5ff9e684a42c48f0a38e1a7e3fabab86","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2b5b6cb662d42c5a2a2e48ae84b6e99","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"810f9e16145a4311ae50264b4dfdd609","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe3c4959adc54e098f80347c5874828f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ca3d45995db47a29dda81134553e1e9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8e3d0c25dfb843b196d654fe1a44bc13","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c0a9669db16446d9a521283a9ccb69e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"796c2f0b9a854988acdf4346a4f348cd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd2df5a34ad248028cba8befbd5e9dbf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"647aa14b67be44b0a9caf11a3895206a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d001256a4514616b93a5d16688e7e8e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1ddd464a691455bb549d7539f3f92b9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d7e7dceeaf2d46398996e7dafb272703","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ff75736c0b39461a984c744f7ce05ada","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63504ab3d9134e06abed9a1d38f11faa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b69a5f8cec743d198369f8d05280bdb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a75de2bafa71477494f0bfe826ac2ce8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"96b4879cd9754a94aa33b932ab7c975e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"adbb0d55c50346c6b9dbf5fd7f8dbbee","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6aed92869e0346ec96f992ef3f0683ab","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"00ea237e2d624e49bb3b19b510e12c9d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be6743069ea843dc9202e83752164467","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0cf29f72a5c34919bf7328e5c791c6db","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"611af17b65864c1289bd550376ee6a9f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3533687e62f545bda073902f085d1868","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1e8af965df6641b29ff4ebfec4f21327","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"94b41f5b40fd422f90f4e4560f1f8ed1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1e8ed1a79f72405998d9ee09215bb6d1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"672888629be945a49fe4c62a537eff98","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e35a637a7ac343809a6f0198c546645c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e6461196a8d2428bac5f246b03df7b81","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7b36c4d5bb3445bc8a224dc43779ed32","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"851bd5c475c542319f5fe4f98c956328","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1def908a6df8421c984e34ed0cb187ec","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e64d6932f1cd446d98db857cba555caf","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9122ca3f770b4557addce40add438d1e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"abca5dd258544c5185ef55d6484c8cb2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7fde2d269d3641698a7c85fe0ae903ea","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"140980e7f01c4d849e62f7723d713a7f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0960de1812c042179f5982b6734000fd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"233266e0764b464b84a5285bd881e8c9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d03881a17d454d6e94fcf2d2009c7fa7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6fb6c6feb57b4c8fa033816c700560c8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"60b56ec2788044ba9009b6490c565f03","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8b470723a4024bd7a9eb22deabe8e77f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11ed5e24aeac43319d920ef7e8e32db6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea7ce4da4e764e6585b1ce5f2b9dd29d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e7d6f62852cb433c91d5c11cdcef8661","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bef0f3e044fc4c4f832a822c7e7bf35c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25398e1fc69d422f98d26a0680736f08","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03cc5e4ee93241929e9056b26a70eac4","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"40d1d54213604ad689aa7bbe427267bb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"176c01c925234914aebc5b8d730a68e8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"296db7fd74a64e24bf36a1b5843a8049","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1f1eab19548a48a9ae3552af151e589f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f72564d19a7641e8b0c4b2edb2316e50","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be757ae89c814b27a2cd36524a6bfefe","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6b06254a809b4d2e9e4179ccb9db1dd4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"363df90a715a47ecb2a06efeaed781a6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"597c2cb222484dbbb1177fb55c776f5e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"de08c73bd16e4394a66a32c587946bfa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0d671da3a9d14fb0a61a50ec52e2d2c2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2db7273487e8497285b30c061017a447","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"89d691940296454b81bbea5aa915dbc6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0988a7543b82413f95bd7dafbdaad607","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2e18b2ce20264cfba39ac18924382308","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"97f10ca51f5d4c9a9dcda315d9a148df","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c6f07a191b847538eef908393a5a8b2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6afcf007a7c24c5c82f54c27fcef0988","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ad47f150380744cdb92313fe5c8b3fee","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dea42facad584fcd98bd10047ffe9de8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7dd3160e39674b8daee126c6e1b0c00c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0aab59de5db6426980cf57a01757ffa2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa31562595a2401ca66db471a2fe6d38","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"762fbe76b557484bb35b70b7427bc104","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a840c0d183146aeb346d063c8ca0e78","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c5766897a9e4b45b394d03602da91d1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"263e6eb2768843bea41b358ee2a54d06","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e6104e1a6eee486a891e4eb19964bbf4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d5d21185d4541edbd1d9a2bd961c0ea","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1276261ab4d4441b8bccddbdd4d4e6af","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8a64f39fac19458ca6e561b72ca5318f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b5aad33e5e04f7eacb37b2a852a39c8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9b934b270a9a468795703e5836c92bbe","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0e6aaf10f5a4612bc41ea4b46c681a9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b7c886247647412bac9824b68bd45510","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1e24290bb184e90945c333d90ade310","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"677ec12d3da2493281ffb4a9606d82ec","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c9a1812d762d4547af1c1409781af665","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e948267760e415989fe6a228a9d16eb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b29f03b6d2e9429cb7b1766bd08d8c17","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"04b72f8dcef44d86b20112503a2af9ba","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"afab6749ce8b4ba3b40959be6c19ed79","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"399692a4b89d47cfb1d1b5bedaf09ce4","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"adea369d24a144a8805bef8e921e6c56","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09ae7aea582740fbaca2c0e976173378","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f83098371bf242eeb5248de527738b9b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"95d200040d774f5c8346d19f2694f5ce","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c607d3dc56d4437cb0a57835948479f8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3c0cb5949ac6491498ff0047871a647a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1db2f32eacc44461b113c79350628522","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6b498aa7185c45c4b9ccdc0f01915486","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf3a4f41b4884a01b78bcb193399e5f6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9c40fb4c535b40529d58c6f0616146e0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d9ffad02c0a347119ddfa3c1c88a14a1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1e17e730b4b4477a82df7d3ff4f58188","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b98c6a78d9942ac9af335c8605d9d8d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"935397f75f1a4c358d1b7a0d5d52f6d4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dec844056c7444518ad90cdc8d82e068","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"806ea8eefe1142d2abcd400615a08d31","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"268feeceeafd443fb111a76c376e8a0b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b7380f80a445413a950d7b841a691f80","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b39db096b23b4b189ac6389fb2ffde50","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f5aceb3ddda247cc88d3acd77eb74379","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3736d00cb7c74cc9b8ff8f5edb0bf0f8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b3051c7bc7f74e2686a9af945813d5fa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"39716c3e1b194643ace2645043b0f0b6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fa8f2e719b354d9da4975f84ace071ec","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2d90fa21ad4049119f1d039b440b3f0e","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ee059d859e1d4134bc545c3f8a9d214d","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f05012dc27e14da6adf683e3750e101d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"823bdb2bbce04960b889543bfbd45927","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef095a2e8e8d4234a47656bb4106816e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c7c43e00ce01465aab915d71098ad00d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0e0ca3a135d042c58f167a0b4f62478b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7321cbf8c9cd475eaab34ef67e00f83a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d6eed0378a1b4a15ae3ac483962ef579","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a7a1f0cb77a242f8adc7e4ab7c6baef0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e868e25bb083496ea757247a0533397a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"61008846cdb34fa3a8a3a51fc0d1b6b6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a93a0ddca4074320a78fa5f7a851584a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa7b464c3f6c4aefa0ca4745dc5f6035","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"151a4d8b6b4346a98ab042089e62e968","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4f54e39a82fa483d82d82498b83b0f93","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22ca5c31d8a94db281399d5e3dbe9525","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9da7702c44474873894a794fe1f188c2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2103e6ac88d245d18f454349f9cc95fe","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"143b6a8702cb4195b5418315c6bd742a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"60e76643b0af433fb8ad92efdfec2e08","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d339b01047f45c6a40eb6f0601a448a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9e4daf9febd6472abcd1c3c5781203bb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"afd28c1980c2444f9b8bbeb8879d6ad2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1076c77745d647929690ce0bd455e4ce","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a9aba9a3d80e46ce92e9a3d8eb460b5b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ae5c98dfc994ac7bb4d77f474b1910c","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6bd84ec406e94868ab4b04e3ce6ddf9c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a494349339e40fe9314ef844b843a64","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9ee5bc0a48e841b8b6ce389e34c47116","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8ae30c4b8f3e4f83a4499a894d0ac099","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"719d0dba9fa548ad98f5f9579dfd269e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"91fa8a5a1a9a472b91df50c7ca5b8276","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"533fcb074a60462f8da95d4df7188638","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b9fb1e3b99a44f42a3a0e9bb7b250be1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c5c820937f6248a7b2425a4161c91ed3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b00f9900bc17483b8ad6b44c041716f9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4558210a29da49d38bb6c5070868038f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"176aad125b634a1798eb4ad90a4edcf3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ca52cbb6c334555be9ffd2847567f25","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fc9d26b49db24155a48a004be630cb4d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"734531233f1e4801a2863d484e771766","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a1ce3f2f607041d1b95548ae30acc8ae","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ed3b2dcd781c4251a71f15131d370ea5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b883c1a4e0d94944bfe67632b3b11a68","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb345e6d3421451da453cffee56c79fb","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"417cb09724194974860e442d3e3f521a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"73c53fa47fc64b918cc0e7c9420351eb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c4c8761394754eb089776667fa861625","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22ce80bf32ae4564b0ccdd962873b634","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4da5b698d25b4c98a327b704e0da45fa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6feedd6105e949d9a4242e834b2fb441","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"21e2fdec24cd4e94943d9069873d7c3e","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dec3a02e8e20481d94ba449f818f2500","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0b6f0996a4de4891b753d5d40b154bfd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"74017027ee9440599f5646a86a4e71b3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3f8d91fa21494d8babfa170b09c6fd5d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e1308b4cbc814eab922292a6bb645ba3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"61b0a1910c7f4dafb596ffad68971d99","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2cace469c44c48e9833f726e14c0cea2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cbb3c0927b9b40e08247d009d77796d4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"428e17cfbdc74b46a016cd0a33fbc237","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e34f0baeeb8947119526e323b26e6b9a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb330e4ed4834c2983496eacd86d8b17","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb315d83d2bb435cb4ae181c9d851ece","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e00e62738d444541bde95dca61c01035","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9a12e2fbf0cc470b84b77d6f41e64051","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aabf95e3a83f42b393ee351c375ab095","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3968eb0d6e5f41d98b65600b404c0381","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"977d40f40e4e4322a4063b6d52b0d0b1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7d6ec17bb5304e6cb99808325b063eae","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b9faf5008fbe40f6b8db118111672434","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb90f78c43fb4d9eaf0fe813e5ae185c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9eed8767fa834ade9a71e6da762e1d29","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e54fdfea9bf8410f8b14c283265c8e47","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"baec264afdb841758e45765f466b5ac2","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1d1cdb766d9a45dc863a7709fda65ce0","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"327b0592089d4ab680d3e5ef91bb2c20","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bec373891a6641d79a2dfdeaacbded72","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"349f6cc45b154a9f9a166099c612f124","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cda613e751c94ea88d61155dadac81aa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"173726880a4d499787d55e6cf46eb4cc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09ed105ceca24eda94e54a1c3109fe8c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"674be341d8f043a59a8efe2025b96131","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"075c56318c7f4430bfd0dc265c930595","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3ddeba506bc841349b6d8590b0cc2f56","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"703fdfe20f1f4890bf51434fc9c1fb2a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b8ca7b54290a44e49617e1985bcfebaa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ee24d9d1e639415ca9085e445e35612e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"02ff2489a9d24955aee46f2ee58eaa4a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f84564fe4c214958b7beb9f4dd4ed160","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"715114d5d40c4c4aae37993385df739e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"82a7f917faa74fa483ea97e32e50b2d1","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"21a37a8cad454feaa33ac75f2279b8da","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c318b2b5705f46d4b45b1c87eabe16fd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1b3b9f01cc0e43b29254b3fc1df18e31","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"00975680ef6449f69ddd5574a1b34760","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"092a2231aee648dc9b1515d6f2d9baee","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b27bc45001a4cf09bfdbf77905a23a3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a93c9739e6e44c3b864690b5d583506","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e6fe60ef241b40069710601c903ca639","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"43580b59a44f4e70b03cbf0f57d0e5a7","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5c52ea01783445bf999eaebc566ca7e0","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce13193a7d5e4a08bf669901036c2c57","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9b4acb7058f747f6b8178b9818461a21","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"56772bac0fbf436188e904d85cf29846","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"65222168f4bf43c0850467cb406379ab","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b8233cdfd42a4dacb7851ab19868fca9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dea134aebeba4d66835943ed2404e71d","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b3205d7d4f14ed2a89df073b78c53fa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"967f6e5602e643d886839d98032cb0d5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"906d2cbb22884592954c1043dd160ffc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9159185b73584f9c8555e5af589d2efa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"228ce7106c834bbbbb48d73ecb44a8e4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a048cdecf5f5438aaa319ce27b7404a1","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"561ac628cbc84a1ab30b879ff208443f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8d81c18fe0564b50a2e07d25337d4241","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"14d271545b6d48dcbf2c6d0ca719e581","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f743af7e00954210a5bad76527a5a15e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"01691441ee7c4e4c848b0605a91469ba","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"618d6631f63a43dfb4564fdef0e59faf","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a49837aca0ad42b19f3aab7fb46e1336","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3d0fd2bcd1342a6a0a66f16f0192c26","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"686209715afa4e3b9099e2f3894bf928","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c2676e30cfe34fb2926ade405fa84b39","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7bd58e8e21b417b89ca8c4441127e25","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"759ce26adabf404fb5555e0ce6535cd0","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"efbeb77e120147ef8e68faa6a476af9a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3a8d4e32f4c41bea55eb51b8ea033b7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"052088e5dc3046638adae39eabc037c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f1c21312eadb4b9fad36adde39358379","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9e7c672045264d999fabed7359dbf779","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e830d9f2b28e4487948e62f309b47169","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"428582fcaeef4a7488ccde8098f1acfa","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"14cd36c1466e49679bff7c417d0d3453","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ccabd57fc85543e399be6ac680569ea5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e409b119fc7346ef95c6be236b9bc9ed","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebdb36b3c80a49fa8293949e57593080","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd1d480d919446689e39b580a7a1921e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7ca058b7dda0451c9f8e7267f86d0a43","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a0873f2ae9e54cdea873e9a05540bd72","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e63acc84c67245b0921b3a088840dd9f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd19a754130046389d5fd976ca7246db","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11274986449c43e78961193c6df78a09","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"29fa199f93934202ad65d8b597564766","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eaa374dbcd70442d92bbea77d496607f","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"85d7e30183b5466e9281aa83033d18ce","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"142433823fb64fd28c013d176f255deb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d0c4ac6a127432f9ca730496b4e477d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5c8574d3b1914716878cf4856b230cd9","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03f8b2afb8754c8e8e0805f0ddeeb8bc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6e2ddf4f6cd2448f88391cc02e3a2d4c","version_major":2,"version_minor":0},"text/plain":["min_samples_split:   0%|          | 0/6 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"efb6591860d846bb8f086d45c024eea6","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f4010f716f34796aef071c54889aa64","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fd55e795d00d4a2f8e33d0c12060914d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9dee38ff6e7040a688c952e6b3111a36","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5aae01bfce8e4fa6b76c66e789a89c89","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"333dac8c4ba242a0ace4b9427e28ed77","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e9541c0aaa024377acf8604e9a59b7e5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ac5153d2a73f4ca993e50a458e5a0341","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"41cb3dd60e244255b8b57e556857844b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1d4c490a37e647b48066bf83b98f9a8b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"33e40c904fa84bdba5dc51acb681a53d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dad89cbcbf244deb8add33d36ae2849a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"03f5a3b2764746d3936158485ee834c0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe211e2d4ba2482da4d798176f23e30c","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"55580206f09c49948343d0bd6d62a14c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c06bf794afe04812b4f0381a87757eaa","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4a1685ca2e0a432489c64159d283ec36","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea6df5fe60ca4007975ae5d056742adc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aba0dd897a0240bba81f45b52dc50f28","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"66a980b425e74e89aa090ec7cfed3420","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3bbe91460d004e9cab4b5936dac0e9ad","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2be9c30a5bb04f2e8d55c285357531ae","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce3d71379d244e338b18e56cd7ae04dd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b7432eda077d4caa8afe8b687d69313f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f294e3acdb1e41b78beb83f37ec6466f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"59fc2100c0734ad98984ef67dcbbd614","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea10342931654c10a377a1cc8b6a71c2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"167bb270da3a4af493c5707ce5148176","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4db1aac15cc84e2fb41d10e4f39e1b08","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3f04db3a2d2d4395b087702d532bab2e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"067175830b7c4c65ac4afb0282a36082","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8cd00947086b466ebd02d08971b6e97d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf51f9400d5545be915b9eec8a8bfe41","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b3c40d5a2fd64b14b8843395952c7fcb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c66069c2b3045aab8af15d7da943ef4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d94092dc2844627a61843267340621f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c4a0cfb243f2452c9d87dbd9d86508b8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"65221cbcd9374e9280b1e825eb222aef","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a8ecd6627d154216a12f90130abe0985","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9cbda8e0fb984f96a218195043f98bdd","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aea48a53dba8491393b7ea93eb42cb40","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11020ed60a92475da29ab45b2ee61379","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"80b39755a213461a8afcbf8b87b7ed55","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"272f1896ba1841a7af47ca181d193b87","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d6a9ae3546fc478c9228e406b714253b","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ede579199caf4a40b0e79348349e7a14","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0f3b648a48384457a43895b89badf352","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"40079d88ebe14d58af4ee9cc59aa8671","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e359ab5976024993a8bf1dc7c9c73d92","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b0788c51c8504b9db2f7a8ac9251cf6b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e09237417914c1882f033e9032b2693","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0fcbc55b92044f099a6543469807a185","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"de2a397e2d3a45d7b423a439d22582de","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d26b7ba2e584cb6bc029079f918e1de","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a81b188839e34973bb616fe58723a60c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"577e2a075caf453cbc4145ece9240b0a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"211fdd7b31c1479f819ecebbdf0a675d","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7c0b9dc1695a4498a0abbba4b2fda180","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d18781ffea04e58b6eb811e3307c0f5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e07812b60954b97bcbef580cd1e8302","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0871f8f58bc49afb853a659afcc4f32","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7d8f81fa5bd24a379ed5f957d2002ebc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"960cd406def44bbf8d6ecf13690e906f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5919bce914b94f95890f387316319898","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2991186b5366446083c45f46b328a10c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"45741e6cef1b4a10869e527f2cac8339","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a19260df32354087ad6e420b7ce46b59","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c8ac9ad5d69a49deb577b4790d3a9c27","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fd9fd0ca5ab14f3088937c52595781d7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cee0d704192e4d508a00b2e6e04d05ec","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"55c0ff1cc021408a820f0afacb0ec444","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c1df62d9c03f4f13a58f532dfc371ca3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c1331961caf473a893a60d48f8bd336","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c13472d09ccb439f8f6d49e413bc8308","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7acaabe620124b81916c104bf4995ed6","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1123c2e8533c4d778923599ab2dd1f00","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e8ccddae528c480cabea0e168e92323a","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f380585da81b4348810504367fa05369","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0c93bdaae0a04e04a5971b6db9ea6ece","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2d6f89b8583d4a4f9359c54ae2b7ec84","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"548f4fa1904444c4b00f7283332ed8ac","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"530e9358c4574e519c36eb57bd3bac1f","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c4df581b9c14e9ca11b47b6dd94f566","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"368b381756344bcf8d25db7868295e51","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e96434ee07a0419b844c7103d75be2df","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"049695a665414bd7b821c3b4219bca0a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f5c174a42170468d950fde33c776bb30","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"986e780244fe4979a3c9d3914135d7ea","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f3673e7d54240e8b22e62de7f63d6e2","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f5420328b0024f82a35aada2eb5a1440","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"11dba7937f464f74a83f13a216b3a385","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b5cc69157961475785f87f72b8e69c67","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1dc9b751959740b2a76eff96123e239b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bc31e1d44dd047679463d0f985118805","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a2ba54465bd54a8bbe91600b2ee2f8e4","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c3a06d5f527483ba5ea656876f5a023","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"34d81cfa83ba48f29696cdcd9ddd838a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6c123edded6b4d3c9e7fdc674a53ca0b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17d475fd25ab4f06af5b39808ebf02a4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce37e44ae04a42049deb49887d8513f7","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d13e8aaa6d3747729996d118929b7905","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"30dc35e0d9a64cae9fc0a7ffb6e80d19","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db85cb9ace4a4aaaa84df5920631f76a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f9ee914c49c647cfbbd25b2d908cb1ee","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"16b5109bd2f848c58bb9b8aeed323cac","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8aca206b143043a2bf28cd4d2c54b0ef","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4ed3fa2c14924b8bb5ff37462f69a1b3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e65a2fd2ca2c42ee800caf194c821a4b","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1f923581ac7341a8bc4ac3f477b30077","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b73efba64cb43d0bad6d4094ec9bb3a","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"14983879654d452e8179422233c8ca57","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bde7aac36670441e9f8c99ed90bbc5dc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e48740b0ba8d40bb91f6651d6faf5720","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f1a1bd646af6401a82485ee926ce7105","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"092cfd4ea0ab424cb9e4b7291258d4c3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7d6f3dfc6e9445acb6a4ebb7f693a737","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25454ad84efd4cfa93cdbd0d987a784c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ca4490e63ac5471ba5b9b536b7bdc760","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7c6cc4cc4b6f43ff84916ebd966083ab","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22e4129b5ffa4e7580efc4bcc8a90fbb","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3f8a9ff0952450aabd25014dcb22e54","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5fa73ccb23494d819bde64c3dc5f3498","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"170bef605b4044b48310ff109c6e0aa4","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2d20f2f85956422f92fd50f2fd9853a5","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d39604847e4b4e0e9ce69a9e059f880b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a7e604ee18a147f3b5372f78d534db9a","version_major":2,"version_minor":0},"text/plain":["min_samples_leaf:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"759b13c7150049f080b9231c88e337c6","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"43c7dd2fe2234053b83a822be584f64c","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aad354671916484e82d8890545e8aa39","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf3c7766288846279053b75d3b473bdb","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb5e04ef35254628b5dd89884b6e3758","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"66967a16129f42b3a111532e61340a10","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e6fb1c6fdc0a49f4bf15eb53219453dc","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2e3113d8af944c65ba285cceb8ceb81e","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2cb76f3896da41c0a29bd88b4df0aac3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8d01ae57688640cf8d99a12a77afa241","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"856f6e58e844443fab3d464e6c7ee706","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ea9d9d6217944f1bd6e5fc888a59ad8","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"30a14ea0a4794ef5a31f1856bc8960e1","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b4b695deb15644c286b9ec84439da3bc","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db83240056334404b7ac852f499b97e3","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3397e7657b834124a1a591e53e707180","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d24bc213caa4577a8d00234e86a17e0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23ce023754f94b57b184b971be6cdd63","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"621614ec3acf4615a52bd30bcffe9514","version_major":2,"version_minor":0},"text/plain":["min_impurity_decrease:   0%|          | 0/5 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"247f9b1bdf4e414fb72d296dc62e824b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"661a9159583f487b87c83dcfffb29bf0","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c1c86539317402f8832af1e6d8ca394","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ad993a176baf457bb3ad9b1c8b45ca30","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72f25068a9d94373bd3d0dbf6d68827b","version_major":2,"version_minor":0},"text/plain":["ccp_alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["max_depth_list = [5, 10, 15, 20]\n","min_samples_split_list = [2, 20, 40, 60, 80, 100]\n","min_samples_leaf_list = [1, 5, 10, 15]\n","min_impurity_decrease_list = [.0001, .0004, .0007, .001, .0013]\n","ccp_alpha_list = [.0, .015, .03, .045]\n","\n","\n","dt_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","X_train, X_test, y_train, y_test = prepare_data_adasyn()\n","\n","for max_depth in tqdm(max_depth_list, desc=\"max_depth\"):\n","    for min_samples_split in tqdm(min_samples_split_list, desc=\"min_samples_split\"):\n","        for min_samples_leaf in tqdm(min_samples_leaf_list, desc=\"min_samples_leaf\"):\n","            for min_impurity_decrease in tqdm(min_impurity_decrease_list, desc=\"min_impurity_decrease\"):\n","                for ccp_alpha in tqdm(ccp_alpha_list, desc=\"ccp_alpha\"):\n","                    model = DecisionTreeClassifier(max_depth=max_depth,\n","                                                   min_samples_split=min_samples_split,\n","                                                   min_samples_leaf=min_samples_leaf,\n","                                                   min_impurity_decrease=min_impurity_decrease,\n","                                                   ccp_alpha=ccp_alpha)\n","                    dt_df = pd.concat([dt_df, make_eval_df(model)], axis=0, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"id":"9801acb3","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:55:49.817380Z","start_time":"2022-12-26T15:55:49.785165Z"},"id":"9801acb3","outputId":"fc2d0bf6-e3ba-46d2-8adc-abd23187bcd9"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[50841 20852] [1239  2798]]</td>\n","      <td>0.708293</td>\n","      <td>0.118309</td>\n","      <td>0.693089</td>\n","      <td>0.202117</td>\n","      <td>0.763846</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[50841 20852] [1239  2798]]</td>\n","      <td>0.708293</td>\n","      <td>0.118309</td>\n","      <td>0.693089</td>\n","      <td>0.202117</td>\n","      <td>0.763846</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[50841 20852] [1239  2798]]</td>\n","      <td>0.708293</td>\n","      <td>0.118309</td>\n","      <td>0.693089</td>\n","      <td>0.202117</td>\n","      <td>0.763846</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[50841 20852] [1239  2798]]</td>\n","      <td>0.708293</td>\n","      <td>0.118309</td>\n","      <td>0.693089</td>\n","      <td>0.202117</td>\n","      <td>0.763846</td>\n","    </tr>\n","    <tr>\n","      <th>440</th>\n","      <td>DecisionTreeClassifier(max_depth=5, min_impuri...</td>\n","      <td>[[50841 20852] [1239  2798]]</td>\n","      <td>0.708293</td>\n","      <td>0.118309</td>\n","      <td>0.693089</td>\n","      <td>0.202117</td>\n","      <td>0.763846</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                 model  \\\n","0    DecisionTreeClassifier(max_depth=5, min_impuri...   \n","40   DecisionTreeClassifier(max_depth=5, min_impuri...   \n","60   DecisionTreeClassifier(max_depth=5, min_impuri...   \n","460  DecisionTreeClassifier(max_depth=5, min_impuri...   \n","440  DecisionTreeClassifier(max_depth=5, min_impuri...   \n","\n","                        confusion  accuracy  precision    recall        f1  \\\n","0    [[50841 20852] [1239  2798]]  0.708293   0.118309  0.693089  0.202117   \n","40   [[50841 20852] [1239  2798]]  0.708293   0.118309  0.693089  0.202117   \n","60   [[50841 20852] [1239  2798]]  0.708293   0.118309  0.693089  0.202117   \n","460  [[50841 20852] [1239  2798]]  0.708293   0.118309  0.693089  0.202117   \n","440  [[50841 20852] [1239  2798]]  0.708293   0.118309  0.693089  0.202117   \n","\n","      roc_auc  \n","0    0.763846  \n","40   0.763846  \n","60   0.763846  \n","460  0.763846  \n","440  0.763846  "]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["dt_df.sort_values(\"precision\", ascending=False).head()"]},{"cell_type":"code","execution_count":null,"id":"43e7e96a","metadata":{"ExecuteTime":{"end_time":"2022-12-26T15:55:50.649229Z","start_time":"2022-12-26T15:55:49.974333Z"},"id":"43e7e96a"},"outputs":[],"source":["dt_df.to_csv(\"./DecisionTree_adasyn_1.csv\", index=False)"]},{"cell_type":"markdown","source":["---"],"metadata":{"id":"PJ4NaNtwQ7gV"},"id":"PJ4NaNtwQ7gV"},{"cell_type":"code","source":[],"metadata":{"id":"7iMTZaDsQ-KR"},"id":"7iMTZaDsQ-KR","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2차"],"metadata":{"id":"c4rchUdiQrx-"},"id":"c4rchUdiQrx-"},{"cell_type":"code","source":[],"metadata":{"id":"1p_SzUYHQt6w"},"id":"1p_SzUYHQt6w","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 최종"],"metadata":{"id":"GplPN4LBQ43v"},"id":"GplPN4LBQ43v"},{"cell_type":"markdown","id":"0b16c43e","metadata":{"ExecuteTime":{"end_time":"2022-12-26T00:27:57.489498Z","start_time":"2022-12-26T00:27:57.470549Z"},"id":"0b16c43e"},"source":["### 임계값 변경"]},{"cell_type":"code","execution_count":null,"id":"412cf9c0","metadata":{"id":"412cf9c0"},"outputs":[],"source":[]},{"cell_type":"markdown","id":"068e133a","metadata":{"ExecuteTime":{"end_time":"2022-12-23T05:30:52.564141Z","start_time":"2022-12-23T05:30:52.556165Z"},"id":"068e133a"},"source":["## SGDClassifier"]},{"cell_type":"markdown","id":"9249bf57","metadata":{"ExecuteTime":{"end_time":"2022-12-26T08:43:06.188098Z","start_time":"2022-12-26T08:43:06.169128Z"},"id":"9249bf57"},"source":["### base model"]},{"cell_type":"code","execution_count":null,"id":"705da419","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:13:21.779252Z","start_time":"2022-12-26T09:13:19.280251Z"},"id":"705da419","outputId":"3c0294ec-1881-49b9-cbdf-88da2fa53a50"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286718\n","1.0    286718\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71706\n","1.0     4024\n","Name: HEARTDISEASE, dtype: int64\n","0.7057736172824867\n","0.7274263832034861\n","오차 행렬\n","[[52340 19366]\n"," [ 1276  2748]]\n","정확도: 0.7274, 정밀도: 0.1243, 재현율: 0.6829, F1: 0.2103, AUC:0.7740\n"]}],"source":["from sklearn.linear_model import SGDClassifier\n","\n","X_train, X_test, y_train, y_test = prepare_data()\n","\n","model = SGDClassifier(loss=\"log_loss\", max_iter=10)\n","model.fit(X_train, y_train)\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"afaaa342","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:13:22.160035Z","start_time":"2022-12-26T09:13:21.971898Z"},"id":"afaaa342","outputId":"261405bc-0e60-45c5-feca-e658eb5999e3"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["precision_recall_curve_plot(y_test, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"9fa216dd","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:13:53.921731Z","start_time":"2022-12-26T09:13:52.943796Z"},"id":"9fa216dd","outputId":"e91b3efd-77f5-4782-902a-10c7a7deef14"},"outputs":[{"name":"stdout","output_type":"stream","text":["분류 임계값: 0.75\n","오차 행렬\n","[[67694  4012]\n"," [ 2960  1064]]\n","정확도: 0.9079, 정밀도: 0.2096, 재현율: 0.2644, F1: 0.2338, AUC:0.7740\n","분류 임계값: 0.76\n","오차 행렬\n","[[67704  4002]\n"," [ 2963  1061]]\n","정확도: 0.9080, 정밀도: 0.2096, 재현율: 0.2637, F1: 0.2335, AUC:0.7740\n","분류 임계값: 0.77\n","오차 행렬\n","[[67704  4002]\n"," [ 2963  1061]]\n","정확도: 0.9080, 정밀도: 0.2096, 재현율: 0.2637, F1: 0.2335, AUC:0.7740\n","분류 임계값: 0.78\n","오차 행렬\n","[[67713  3993]\n"," [ 2966  1058]]\n","정확도: 0.9081, 정밀도: 0.2095, 재현율: 0.2629, F1: 0.2332, AUC:0.7740\n","분류 임계값: 0.79\n","오차 행렬\n","[[68662  3044]\n"," [ 3158   866]]\n","정확도: 0.9181, 정밀도: 0.2215, 재현율: 0.2152, F1: 0.2183, AUC:0.7740\n","분류 임계값: 0.8\n","오차 행렬\n","[[68662  3044]\n"," [ 3158   866]]\n","정확도: 0.9181, 정밀도: 0.2215, 재현율: 0.2152, F1: 0.2183, AUC:0.7740\n","분류 임계값: 0.81\n","오차 행렬\n","[[68943  2763]\n"," [ 3223   801]]\n","정확도: 0.9210, 정밀도: 0.2247, 재현율: 0.1991, F1: 0.2111, AUC:0.7740\n"]}],"source":["# 임계값 조정\n","thresholds = [.75, .76, .77, .78, .79, .80, .81]\n","get_eval_by_threshold(y_test, pred, pred_proba, thresholds)"]},{"cell_type":"code","execution_count":null,"id":"979705a3","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:14:19.511265Z","start_time":"2022-12-26T09:14:01.021226Z"},"id":"979705a3","outputId":"409b84bd-d81b-4569-d31e-4a9a15f65998"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286828\n","1.0    285758\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71596\n","1.0     4134\n","Name: HEARTDISEASE, dtype: int64\n","0.696548640728205\n","0.6726396408292619\n","오차 행렬\n","[[47841 23755]\n"," [ 1036  3098]]\n","정확도: 0.6726, 정밀도: 0.1154, 재현율: 0.7494, F1: 0.2000, AUC:0.7713\n"]}],"source":["from sklearn.linear_model import SGDClassifier\n","\n","X_train, X_test, y_train, y_test = prepare_data_adasyn()\n","\n","model = SGDClassifier(loss=\"log_loss\", max_iter=10)\n","model.fit(X_train, y_train)\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"1f88e8d7","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:14:19.878068Z","start_time":"2022-12-26T09:14:19.725802Z"},"id":"1f88e8d7","outputId":"46600548-3e84-406d-c75a-1da2ebac6840"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["precision_recall_curve_plot(y_test, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"455acb46","metadata":{"ExecuteTime":{"end_time":"2022-12-26T09:14:47.379962Z","start_time":"2022-12-26T09:14:46.057658Z"},"id":"455acb46","outputId":"7ef53f9f-71ad-458b-e310-41615017e73b"},"outputs":[{"name":"stdout","output_type":"stream","text":["분류 임계값: 0.75\n","오차 행렬\n","[[67393  4203]\n"," [ 3002  1132]]\n","정확도: 0.9049, 정밀도: 0.2122, 재현율: 0.2738, F1: 0.2391, AUC:0.7713\n","분류 임계값: 0.76\n","오차 행렬\n","[[67580  4016]\n"," [ 3030  1104]]\n","정확도: 0.9070, 정밀도: 0.2156, 재현율: 0.2671, F1: 0.2386, AUC:0.7713\n","분류 임계값: 0.77\n","오차 행렬\n","[[67606  3990]\n"," [ 3035  1099]]\n","정확도: 0.9072, 정밀도: 0.2160, 재현율: 0.2658, F1: 0.2383, AUC:0.7713\n","분류 임계값: 0.78\n","오차 행렬\n","[[67606  3990]\n"," [ 3035  1099]]\n","정확도: 0.9072, 정밀도: 0.2160, 재현율: 0.2658, F1: 0.2383, AUC:0.7713\n","분류 임계값: 0.79\n","오차 행렬\n","[[68263  3333]\n"," [ 3173   961]]\n","정확도: 0.9141, 정밀도: 0.2238, 재현율: 0.2325, F1: 0.2280, AUC:0.7713\n","분류 임계값: 0.8\n","오차 행렬\n","[[68480  3116]\n"," [ 3219   915]]\n","정확도: 0.9163, 정밀도: 0.2270, 재현율: 0.2213, F1: 0.2241, AUC:0.7713\n","분류 임계값: 0.81\n","오차 행렬\n","[[69732  1864]\n"," [ 3541   593]]\n","정확도: 0.9286, 정밀도: 0.2414, 재현율: 0.1434, F1: 0.1799, AUC:0.7713\n","분류 임계값: 0.82\n","오차 행렬\n","[[69965  1631]\n"," [ 3580   554]]\n","정확도: 0.9312, 정밀도: 0.2535, 재현율: 0.1340, F1: 0.1753, AUC:0.7713\n","분류 임계값: 0.83\n","오차 행렬\n","[[70213  1383]\n"," [ 3636   498]]\n","정확도: 0.9337, 정밀도: 0.2648, 재현율: 0.1205, F1: 0.1656, AUC:0.7713\n"]}],"source":["# 임계값 조정\n","thresholds = [.75, .76, .77, .78, .79, .80, .81, .82, .83]\n","get_eval_by_threshold(y_test, pred, pred_proba, thresholds)"]},{"cell_type":"markdown","id":"d1d1ac61","metadata":{"id":"d1d1ac61"},"source":["### 모델링\n","- 하이퍼 파라미터\n","    - loss: ```\"hinge\", \"log_loss\", \"modified_huber\", \"squared_hinge\", \"perceptron\", \"squared_error\", \"huber\", \"epsilon_insensitive\", \"squared_epsilon_insensitive\"```\n","    - penalty: ```\"l2\", \"l1\", \"elasticnet\", None```\n","    - alpha: ```0.0001, 0.001, 0.01, 0.1```\n","    - class_weight: ```\"balanced\", None```\n","\n","- 고정된 하이퍼 파라미터\n","    - early_stopping: ```True```\n","    - n_iter_no_change: ```5```\n","- 사용하지 않은 하이퍼 파라미터\n","    - fit_intercept\n","    - max_iter\n","    - tol\n","    - shuffle\n","    - epsilon\n","    - learning_rate\n","    \n","https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html"]},{"cell_type":"code","execution_count":null,"id":"e29efec4","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:04:21.971804Z","start_time":"2022-12-26T15:59:31.206284Z"},"colab":{"referenced_widgets":["fb2318ba55ff48fcaea76b87ac370815","3230458a183644dbb8f1af068f7813bc","ad3125b1300d4dcb9ed13b7e2a1aa8ec","56851938398b435395f56229fc46796d","246d9c2a13014887820ba6402077f567","38b38b3b047947cba028737366415c51","25a0962ea86e4e15b6ef9cbe11e32d2d","d264aac7978944bcba77877dbdcad139","6655a87102ed40e78b36d690a895e7e1","6fa41793e3de4caa974f9d033e2944e7","dedd292a42b248c7b52e73e98c353b36","92d745fabbc54629835350ed86fe8197","7f6a4f2033204e4982565070973fd889","213d2e5604cf4baf89af81c0c0ff307a","af3a66ae24f5427e823466fa83bab8a8","7eade77c2f88444ea295c52fa44d46ce","53ff1c74692a45d8bd6434ad0538a190","642935565dcd4396a5125019614b7fc2","032448be9111494abab32b051c0a0418","8aa4e41bad35496b8ceb2d8a4e574f78","e3de6093d38a4f94864b769ce3c3b720","3e5e288336a24958b3af9166f7ce6b68","a782817caa244399b7593461010aba5d","98542daa9b624a3d977d22917f062ad3","d627f10f79794555a217d7cb6c2ea5a1","839888e28e674b679383cc17371b7b62","438757d9224d4d75b006862e0d593e61","ecda449bbddd49de9c8325fe747983fb","370bc52904ad444e9b3922cafbf7e413","7ec1eb6caa4144a9a9028793661e94ef","8f1a88f97a0c4df394e9e18d7f997ca9","bda94f71f8254eee813ffe479e5dec78","634a94e28d694ec3a1db7baeba1aae80","a08c1abaa4634fff94bc609c30d7192a","aeb3ba524a9f4413997f8746a01332be","e8149d96cd5140ee8c364877b4518e29","43b7cbfc768049ea9446fe13ff2dcbe2","24fbe45f7a9d42ab99e2ff3e4e07597b","2668812d44044985bd1a407ee754ef69","735475653dfd40c29cc76401938934de","72ffa6e8e3b145038a4ae66842a59781","0e5f3522c0744a00b8679d043708888f","15aea7e3c5724bdc9ffca3a4eb24c265","efc5884d91e742d58a5e3403d00d5200","d0b65c16f1e34fb28535e1b169b27e67","4615ec6ea0194f5ba1dfa13a16e4c989","896634c5fec0467d9e13cbd6af46f528","c7865185d3ea4bfe9984050be181cfd9","06e24146d3c940968f4219090d6fe9b3","766782c9627c4ba693e6e85f87bd00b8","9b75bec6d5c8422e8764453ef304da43","4d312168a6744697addfeb669e9ee4a0","bd5d44ba06d349269e1400991e50892b","e502742ff31b47b997376530d39d00c6","76fa83dc37dc4e37b6914f51e13e8379","49f17926e627437592ded6f17340c5cc","b276bf04fa884d299a18f6c8f68aa942","6b592dc579b54a97a9dc4a12b528763a","2223f962485c4b2c815745595491f28d","eb96a344e48a469889c1cd482924ca94","4afb190e02444acea6495bc1e4a66c0c","72b23de11cfc4cb79bd1b066cd642e4a","6f51fef381a146cb8b869ce85b9f6d15","aa0426f5fd8e412083f53b50b85818b5","834cb7a85dfb4d799e57d0551e48563d","1f69575995924005a3890b3d8c7487d8","94fb4dbe14144122885e08160c9bf225","67428b3945524a79a405761fa8554391","4d280601c3494cdfb3af784deeb4f42f","ec6973ec432b47d5bad691fab99d595b","bec3e3b1511943b28895a0f41038bf83","8b005f3c43f34dffa7f85908fce1986f","bf9e78441ce7403d91cafb292261a968","d35dabc36b7344bb9ed1c76f616985d1","b8583fa40ac54ba9bb32dd7e7a27a027","9cdd1cd18dff4d9882936ccf15aa4e4c","6c2b5180638a40fb9d0e2c988922288e","aff85491442f4365803171d0024e0479","17dd6cd57d364f479f24304be3831eb1","a226c4e9cd7747afa4ac7a094ac6e394","1c6ff33f249f40aeab4abbdb64ee65fb","406e364bb9af4aefaf51f8f007b61f0c","eb16e1a3ea5545d096eddaf095df3879","4b32c1e515034eb79eac1f13432a090e","20dba56ea7ea4f98957a9196f36c1230","19129aee9ba342e0896861b42aa861e4","82c4051204eb4ef98d5bb118f247b196","231225c4df754d79ba190157694e385b","f4e085f22a35463c96cec485033416d3","d10603e5943d46669eac63a9a0dbe2af","921e71d8295545d0a4a121ba3e52caa9","ea0c9de0626943469984717dc1b7d626","eb05d44ccebb4e56859627babd6bc4fa","eef2b7a8240341b39aabebbad433545a","c43f53386ceb4d899153be89b9bb4c1a","418363c8f30748ccb27c60ff8e2b7339","ab0d1ff1351940bc9fccc34690da4c60","7e1cc6f35012449a959ea796cd476c3e","3adeae2cd30041a0bd44ad7518eeb18b","36fa221358454dd9953c7d69fac6bdfe","7ccf488fef28478a988e305d1d08585e","ccc965eb9bcc4e2c870cd84896602922","1caba8a615ca4b25b576d29945ad42d4","6509264df6f349b48ff0d1402985f6bf","23a5f7e646074c18855433266695cac8","f1b59088c0154982a9162b04241a32b9","e35c05cceaec4d9dbb1eeb89bb08bc55","0f87b982ea4c4a859935845ace04a774","2ca00525a60d422aa931d59eb5ddf3d1","70e6dcce84154cde9c15e972eac272f3","37c1c0bda9f8488ebe5b171638d3c29f","613de3fb396d43ab8df3df39bcc09d97","90de91b9b94f4036a050ee0082d410db","dff17bf569f6435eb0b6612ca98c3d70","90835cc712bb4032bcb99b8bbd9ada41","32fa7b454a1047a6af62bb419790bd76","941a0274256245b6863ddbb132f94827","6bec4d474c6c4232b8164aea6dd94039","ee90a9ce9a9649158d105bde43f4c960","c5e848c1a140485a856b18bda2c0737b","af77d68f900f41f197eacb4d94b2b66c","bbe04a5c57f747fb924f5a3d2ec79639","74b9d682a155495396bda6d52e52688d","4aecb017be7244a6b00ac31f71ffa68c","4d6890e6b0e94b4f8891c4a238df35e2","bd1f8531cfc14035a755ba52fc060b67","4785ed93008646dab61646c7efd408c1","0406782e03e2485d9d30f67f2449f347","e0811d1f3c38434192fa845b4d803aa3","b3ca06aff8a0409996ea1fcfdc8435c9","bb31fc5f270b48b6a5ab2075244e0ace","38e991ca8355489fbb7840312c25a348","a864d7ff85564e42a66c67b4f86c07a6","04cc571b8c59473f9b149eed3b4f9359","7a3fb67829c741d382f4fecf5ee8afe5","d591f78139124808848bcd53448c9fbf","bb9ed7be1d6840969530d7ab61d3ce1a","e79a73bf3d31450c99b241b530c5c2f0","de775b7914454d14b1fd0a4c6c8972d2","2c65698348354f69bf16e6bcb65d38e4","4c29c69f70794d0a8c0c536a61166aec","1c804f348cbf4d80b91e1e04bdf35d0c","24cdfcf9beeb4a80a035d88967df4bc6","629256f92fb94b1bb3db7225d49c94ee","78de7d4ccd9a4402ad7863a7d27b19c4","47ed9f67d3c8444bba4353a412a5937f","07d92d833867465b888abe17d40b9476","a54c138b68ab45f9814c726cf889e579","660de1eb23664062827ba127459a67fe","72cab6a0e2914b6a91e0489fa531bc93","1348b123e1fe4005b4d2bc9a9b979a76","2fba0c5db3c442ca85cb1345535464e7","06e960e9019d481b864ef8247ab31002","4a152e85f2834f61b63491771bb16c09","5a81f3172baf4545ae40f34fc34ad733","4d6309bc62f3401bbe7916b2dbac4bd2","61885efc33d448398b5675218ae00698","501dc544243541dbb6bbfa79081a4950","7059e9f0c2fe4cc3847e2a9bb9d91bc0","217e81a36fa94eae93fe74cc1db4ed36","64e1881f55644b42b70d9711536ac8d0","0943157a89504199ad19e48e0d6a9e97","5be8bf5643ee456aa7bc3071d3062240","cecd4d6530ed43f2982fa5244951ba1b","77584294c54d4877b8b15a90bbdbc8f8","8c42b398e9f54c02855f7a3e732e31b4","d4177724110e4859a03808c339e3716d","c8fd067c53034a83a3ef182f0b434634","3b18a100ab7d49d7a5c75c879a55738c","d2eccb4f29b34a10892dd00266e6db14","87bcc58722c44886a167f329c458a931","2e0076f6e9fd4086af1dbfdf8af8fcc6","21dc01ab1e6040d2a4d15175c64a3a07","91400fb6142a4acea58fba86197e29cd","267605f4ccba4e91bf7daf65131f2f4d","1fb20df6ed6e4cf1940fef5868ac5a33","ccb00d713b43451085b0d1be3bf1c34d","840756b51f7147fe9a97798dd4c9ac38","9d2b1881245d4769a34d888929e90430","42f13245ae214791b0f564ce05502cb0","0f4269a6c0a44bc392333c9466439f56","a9650cce7fba4ec5941b84264fef1321","0b9a814936bb420fb78fbc834c9a6c43","c5817df23acb494da8534efacf1aa10d","18c00ac51e454257990a87222df94e38","22e4206fabac46709480c98ce2e44204","c34676da07db4bbbbb8bc5ab1860e4ee","7f6d46d8137b4d78b775d973c5812928","ad8fe75ca23049feacbc00020d4d55fa","ec77db45c99444d9b0713f5a89c8fb87"]},"id":"e29efec4","outputId":"18501e79-091c-4ccb-9b12-eb2e581eb0f1"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286781\n","1.0    286781\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71643\n","1.0     4087\n","Name: HEARTDISEASE, dtype: int64\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fb2318ba55ff48fcaea76b87ac370815","version_major":2,"version_minor":0},"text/plain":["loss:   0%|          | 0/9 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3230458a183644dbb8f1af068f7813bc","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ad3125b1300d4dcb9ed13b7e2a1aa8ec","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"56851938398b435395f56229fc46796d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"246d9c2a13014887820ba6402077f567","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"38b38b3b047947cba028737366415c51","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25a0962ea86e4e15b6ef9cbe11e32d2d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d264aac7978944bcba77877dbdcad139","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6655a87102ed40e78b36d690a895e7e1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6fa41793e3de4caa974f9d033e2944e7","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dedd292a42b248c7b52e73e98c353b36","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"92d745fabbc54629835350ed86fe8197","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7f6a4f2033204e4982565070973fd889","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"213d2e5604cf4baf89af81c0c0ff307a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af3a66ae24f5427e823466fa83bab8a8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7eade77c2f88444ea295c52fa44d46ce","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"53ff1c74692a45d8bd6434ad0538a190","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"642935565dcd4396a5125019614b7fc2","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"032448be9111494abab32b051c0a0418","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8aa4e41bad35496b8ceb2d8a4e574f78","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3de6093d38a4f94864b769ce3c3b720","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3e5e288336a24958b3af9166f7ce6b68","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a782817caa244399b7593461010aba5d","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"98542daa9b624a3d977d22917f062ad3","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d627f10f79794555a217d7cb6c2ea5a1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"839888e28e674b679383cc17371b7b62","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"438757d9224d4d75b006862e0d593e61","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ecda449bbddd49de9c8325fe747983fb","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"370bc52904ad444e9b3922cafbf7e413","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7ec1eb6caa4144a9a9028793661e94ef","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f1a88f97a0c4df394e9e18d7f997ca9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bda94f71f8254eee813ffe479e5dec78","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"634a94e28d694ec3a1db7baeba1aae80","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a08c1abaa4634fff94bc609c30d7192a","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aeb3ba524a9f4413997f8746a01332be","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e8149d96cd5140ee8c364877b4518e29","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"43b7cbfc768049ea9446fe13ff2dcbe2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24fbe45f7a9d42ab99e2ff3e4e07597b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2668812d44044985bd1a407ee754ef69","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"735475653dfd40c29cc76401938934de","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72ffa6e8e3b145038a4ae66842a59781","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0e5f3522c0744a00b8679d043708888f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"15aea7e3c5724bdc9ffca3a4eb24c265","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"efc5884d91e742d58a5e3403d00d5200","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0b65c16f1e34fb28535e1b169b27e67","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4615ec6ea0194f5ba1dfa13a16e4c989","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"896634c5fec0467d9e13cbd6af46f528","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c7865185d3ea4bfe9984050be181cfd9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"06e24146d3c940968f4219090d6fe9b3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"766782c9627c4ba693e6e85f87bd00b8","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9b75bec6d5c8422e8764453ef304da43","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d312168a6744697addfeb669e9ee4a0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd5d44ba06d349269e1400991e50892b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e502742ff31b47b997376530d39d00c6","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"76fa83dc37dc4e37b6914f51e13e8379","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"49f17926e627437592ded6f17340c5cc","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b276bf04fa884d299a18f6c8f68aa942","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6b592dc579b54a97a9dc4a12b528763a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2223f962485c4b2c815745595491f28d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb96a344e48a469889c1cd482924ca94","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4afb190e02444acea6495bc1e4a66c0c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72b23de11cfc4cb79bd1b066cd642e4a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f51fef381a146cb8b869ce85b9f6d15","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa0426f5fd8e412083f53b50b85818b5","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"834cb7a85dfb4d799e57d0551e48563d","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1f69575995924005a3890b3d8c7487d8","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"94fb4dbe14144122885e08160c9bf225","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"67428b3945524a79a405761fa8554391","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d280601c3494cdfb3af784deeb4f42f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ec6973ec432b47d5bad691fab99d595b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bec3e3b1511943b28895a0f41038bf83","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8b005f3c43f34dffa7f85908fce1986f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf9e78441ce7403d91cafb292261a968","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d35dabc36b7344bb9ed1c76f616985d1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b8583fa40ac54ba9bb32dd7e7a27a027","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9cdd1cd18dff4d9882936ccf15aa4e4c","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6c2b5180638a40fb9d0e2c988922288e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aff85491442f4365803171d0024e0479","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17dd6cd57d364f479f24304be3831eb1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a226c4e9cd7747afa4ac7a094ac6e394","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c6ff33f249f40aeab4abbdb64ee65fb","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"406e364bb9af4aefaf51f8f007b61f0c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb16e1a3ea5545d096eddaf095df3879","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4b32c1e515034eb79eac1f13432a090e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"20dba56ea7ea4f98957a9196f36c1230","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"19129aee9ba342e0896861b42aa861e4","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"82c4051204eb4ef98d5bb118f247b196","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"231225c4df754d79ba190157694e385b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f4e085f22a35463c96cec485033416d3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d10603e5943d46669eac63a9a0dbe2af","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"921e71d8295545d0a4a121ba3e52caa9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ea0c9de0626943469984717dc1b7d626","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb05d44ccebb4e56859627babd6bc4fa","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eef2b7a8240341b39aabebbad433545a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c43f53386ceb4d899153be89b9bb4c1a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"418363c8f30748ccb27c60ff8e2b7339","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ab0d1ff1351940bc9fccc34690da4c60","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7e1cc6f35012449a959ea796cd476c3e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3adeae2cd30041a0bd44ad7518eeb18b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"36fa221358454dd9953c7d69fac6bdfe","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7ccf488fef28478a988e305d1d08585e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ccc965eb9bcc4e2c870cd84896602922","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1caba8a615ca4b25b576d29945ad42d4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6509264df6f349b48ff0d1402985f6bf","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23a5f7e646074c18855433266695cac8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f1b59088c0154982a9162b04241a32b9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e35c05cceaec4d9dbb1eeb89bb08bc55","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0f87b982ea4c4a859935845ace04a774","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2ca00525a60d422aa931d59eb5ddf3d1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"70e6dcce84154cde9c15e972eac272f3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"37c1c0bda9f8488ebe5b171638d3c29f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"613de3fb396d43ab8df3df39bcc09d97","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"90de91b9b94f4036a050ee0082d410db","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dff17bf569f6435eb0b6612ca98c3d70","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"90835cc712bb4032bcb99b8bbd9ada41","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"32fa7b454a1047a6af62bb419790bd76","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"941a0274256245b6863ddbb132f94827","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6bec4d474c6c4232b8164aea6dd94039","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ee90a9ce9a9649158d105bde43f4c960","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c5e848c1a140485a856b18bda2c0737b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af77d68f900f41f197eacb4d94b2b66c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bbe04a5c57f747fb924f5a3d2ec79639","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"74b9d682a155495396bda6d52e52688d","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4aecb017be7244a6b00ac31f71ffa68c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d6890e6b0e94b4f8891c4a238df35e2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bd1f8531cfc14035a755ba52fc060b67","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4785ed93008646dab61646c7efd408c1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0406782e03e2485d9d30f67f2449f347","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e0811d1f3c38434192fa845b4d803aa3","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b3ca06aff8a0409996ea1fcfdc8435c9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb31fc5f270b48b6a5ab2075244e0ace","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"38e991ca8355489fbb7840312c25a348","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a864d7ff85564e42a66c67b4f86c07a6","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"04cc571b8c59473f9b149eed3b4f9359","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7a3fb67829c741d382f4fecf5ee8afe5","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d591f78139124808848bcd53448c9fbf","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bb9ed7be1d6840969530d7ab61d3ce1a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e79a73bf3d31450c99b241b530c5c2f0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"de775b7914454d14b1fd0a4c6c8972d2","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c65698348354f69bf16e6bcb65d38e4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4c29c69f70794d0a8c0c536a61166aec","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c804f348cbf4d80b91e1e04bdf35d0c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"24cdfcf9beeb4a80a035d88967df4bc6","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"629256f92fb94b1bb3db7225d49c94ee","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"78de7d4ccd9a4402ad7863a7d27b19c4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"47ed9f67d3c8444bba4353a412a5937f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"07d92d833867465b888abe17d40b9476","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a54c138b68ab45f9814c726cf889e579","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"660de1eb23664062827ba127459a67fe","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72cab6a0e2914b6a91e0489fa531bc93","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1348b123e1fe4005b4d2bc9a9b979a76","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2fba0c5db3c442ca85cb1345535464e7","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"06e960e9019d481b864ef8247ab31002","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4a152e85f2834f61b63491771bb16c09","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5a81f3172baf4545ae40f34fc34ad733","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4d6309bc62f3401bbe7916b2dbac4bd2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"61885efc33d448398b5675218ae00698","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"501dc544243541dbb6bbfa79081a4950","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7059e9f0c2fe4cc3847e2a9bb9d91bc0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"217e81a36fa94eae93fe74cc1db4ed36","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"64e1881f55644b42b70d9711536ac8d0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0943157a89504199ad19e48e0d6a9e97","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5be8bf5643ee456aa7bc3071d3062240","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cecd4d6530ed43f2982fa5244951ba1b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"77584294c54d4877b8b15a90bbdbc8f8","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c42b398e9f54c02855f7a3e732e31b4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d4177724110e4859a03808c339e3716d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c8fd067c53034a83a3ef182f0b434634","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b18a100ab7d49d7a5c75c879a55738c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d2eccb4f29b34a10892dd00266e6db14","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"87bcc58722c44886a167f329c458a931","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2e0076f6e9fd4086af1dbfdf8af8fcc6","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"21dc01ab1e6040d2a4d15175c64a3a07","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"91400fb6142a4acea58fba86197e29cd","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"267605f4ccba4e91bf7daf65131f2f4d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1fb20df6ed6e4cf1940fef5868ac5a33","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ccb00d713b43451085b0d1be3bf1c34d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"840756b51f7147fe9a97798dd4c9ac38","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9d2b1881245d4769a34d888929e90430","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"42f13245ae214791b0f564ce05502cb0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0f4269a6c0a44bc392333c9466439f56","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a9650cce7fba4ec5941b84264fef1321","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0b9a814936bb420fb78fbc834c9a6c43","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c5817df23acb494da8534efacf1aa10d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"18c00ac51e454257990a87222df94e38","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"22e4206fabac46709480c98ce2e44204","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c34676da07db4bbbbb8bc5ab1860e4ee","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7f6d46d8137b4d78b775d973c5812928","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ad8fe75ca23049feacbc00020d4d55fa","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ec77db45c99444d9b0713f5a89c8fb87","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["loss_list = [\"hinge\", \"log_loss\", \"modified_huber\", \"squared_hinge\", \"perceptron\", \n","             \"squared_error\", \"huber\", \"epsilon_insensitive\", \"squared_epsilon_insensitive\"]\n","penalty_list = [\"l2\", \"l1\", \"elasticnet\", None]\n","alpha_list = [0.0001, 0.001, 0.01, 0.1]\n","class_weight_list = [\"balanced\", None]\n","\n","sgd_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","\n","for loss in tqdm(loss_list, desc=\"loss\"):\n","    for penalty in tqdm(penalty_list, desc=\"penalty\"):\n","        for alpha in tqdm(alpha_list, desc=\"alpha\"):\n","            for class_weight in tqdm(class_weight_list, desc=\"class_weight\"):\n","                model = SGDClassifier(early_stopping=True, n_iter_no_change=5,\n","                                      loss=loss, \n","                                      penalty=penalty, \n","                                      alpha=alpha, \n","                                      class_weight=class_weight)\n","                sgd_df = pd.concat([sgd_df, make_eval_df(model)], axis=0, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"id":"170df3ff","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:04:22.091026Z","start_time":"2022-12-26T16:04:22.063099Z"},"id":"170df3ff","outputId":"00b3fc07-b370-4b42-d145-e81aa6a3161f"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>159</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>[[69162  2481] [3474   613]]</td>\n","      <td>0.921365</td>\n","      <td>0.198125</td>\n","      <td>0.149988</td>\n","      <td>0.170728</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>SGDClassifier(early_stopping=True, loss='perce...</td>\n","      <td>[[69034  2609] [3592   495]]</td>\n","      <td>0.918117</td>\n","      <td>0.159472</td>\n","      <td>0.121116</td>\n","      <td>0.137672</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>[[66276  5367] [3126   961]]</td>\n","      <td>0.887852</td>\n","      <td>0.151865</td>\n","      <td>0.235136</td>\n","      <td>0.184542</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>[[59003 12640] [1846  2241]]</td>\n","      <td>0.808715</td>\n","      <td>0.150595</td>\n","      <td>0.548324</td>\n","      <td>0.236293</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>SGDClassifier(early_stopping=True, loss='modif...</td>\n","      <td>[[59009 12634] [1848  2239]]</td>\n","      <td>0.808768</td>\n","      <td>0.150541</td>\n","      <td>0.547835</td>\n","      <td>0.236181</td>\n","      <td>0.770907</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                 model  \\\n","159  SGDClassifier(alpha=0.1, early_stopping=True, ...   \n","153  SGDClassifier(early_stopping=True, loss='perce...   \n","154  SGDClassifier(alpha=0.001, class_weight='balan...   \n","256  SGDClassifier(class_weight='balanced', early_s...   \n","65   SGDClassifier(early_stopping=True, loss='modif...   \n","\n","                        confusion  accuracy  precision    recall        f1  \\\n","159  [[69162  2481] [3474   613]]  0.921365   0.198125  0.149988  0.170728   \n","153  [[69034  2609] [3592   495]]  0.918117   0.159472  0.121116  0.137672   \n","154  [[66276  5367] [3126   961]]  0.887852   0.151865  0.235136  0.184542   \n","256  [[59003 12640] [1846  2241]]  0.808715   0.150595  0.548324  0.236293   \n","65   [[59009 12634] [1848  2239]]  0.808768   0.150541  0.547835  0.236181   \n","\n","      roc_auc  \n","159         0  \n","153         0  \n","154         0  \n","256         0  \n","65   0.770907  "]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["sgd_df.sort_values(\"precision\", ascending=False).head()"]},{"cell_type":"code","execution_count":null,"id":"ef94a67a","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:04:22.335866Z","start_time":"2022-12-26T16:04:22.184055Z"},"id":"ef94a67a"},"outputs":[],"source":["sgd_df.to_csv(\"./SGDClassifier_smote_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"id":"0989e628","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:09:23.141459Z","start_time":"2022-12-26T16:04:22.429469Z"},"colab":{"referenced_widgets":["0b95e5b8dbba4117a36477d365e938a3","6f47bb61961747908206af658123192f","e6f05abc4fea49a2a8af95f4f3c87ee5","8c243f52082c49e2b4b10393fed52f03","6ff39d32484d4a15b2c181679e86f9ba","c9e24ea7f8484feb91402eb4d8e24c39","0110989c055c4a2ca7beba7481d82a4f","5c70b1267a6e4db3afeba6ed0aa0cdbe","55e15aefbc284cc8b77e95bf895bc22b","aa1d55c781ff4d21aba775c27a7be23c","0cd3f506803a4675ae8a638d668ce2d3","968fc4b3348f4cfda58e122b3e6affc6","2a03a9a9c2df432d8bb8faa1332092b6","af8171573b034bbca71431042f5768ff","2c6e8eedb0da4262bc2a81574f5ad729","8799c0ea9c9f43329bb1f453ff87bfd9","4fa629f33ec34d139ac6f7c0b24da273","912b349ec2a648749874fae39f99fb44","07dd0ee5f79243599a395ca1d7aae8aa","97cad1259a7048c2a6bb9a4eede2dba3","fc5d3ac45bc94e43bb06aa560597d17f","f7364568754b4575a35d7f7388d123d2","8fd86db6eded47668e3e44e5990be90c","31fbadc8c2c34ae985f0eb65acced988","187d69b24fcf43ab9de2e20990ce431a","b4f88e214ec246a4a069b6d77a6cd1df","797d0a85c4854180b4be426d11d73681","af20728e8cef444e9ded192e45480e43","8f0563ff468a4a9893124f5cf13ad2e5","4c5c288e8ba9478995f3b0521eae7a70","5cee3124f29e47039ea94c61f408cab2","82bd18668a9b46efa6881fe53805de3f","636645fc7764451e9fe4b6fa26b51082","b2fcaa11c7d04965bc604f6e689447fd","f93b06204956447dbfaf15f6f9e8e4ea","7101a745ca714bd8b269296ae6c89d08","772759a97e604bfaaacaa5befaf2ed1e","20fe3c13d6af4c46ace6a1f3dc3d2292","076bdc81c2d14fc9b5df903f34481e8a","c2c2513e1a8a4ee8b20f2dc85b594cde","836407679b2649b1970d4cd7b342234b","f1e83ccafaef475986abbc4e664cbcd3","8af6aee54a9640cd8c968c7cad1bb3a1","d0fc57505ba444a689f2728c95d49dfe","df274dc569df452eb5bf6430bca7da09","d0c427a0cc514707a200e04aa4824ca8","0323576e3404425eb01f9b0ed314a357","f0272b4605a6432fbd71e96ce5e7847f","13c4a1b9da0345dbabb0c75cb7d2400b","b889e70bc4df471696005e72cd76c5a4","68c0fce299774126b75aaa9af16de848","f10f6d3b71344947b4320ceac0bcff71","b7a28611eb7a46eabc5ed55f3af0ff21","1098d9d5596c45cab73eb1f63adf41ec","da9b83676c10456f8c4e17d29811f2b1","c80f2f4405cd4cb8b0796a704e7378f8","544194c144834ec7b57245f3b4f348c5","324d4016b5bd49248215d1c47926cd67","b4dea9f8ccc34eb9a358fe8fae006cb7","f95dc688a2694b86a06d2757b12989eb","ef244fa3d665480fa74ebfb545f1c410","f4d40225732d4513b1fa6ad6321da640","ba980f4eb7564aa89b2159d0e32fd688","d55a53ed64374558ab0413d628c0d92f","297121e76e9a42bf823c1d7e893f527a","cd5e07c819e04d019b3fcf9fa84694f4","93e8d08162d649eaada21c845f8f8ae3","5d41d6a0e4c840a4a9510eafdfc78eca","e7ade9f6c85842409826884dc7da72ae","c926e5b6c6d942378e7fcd80ba4a23aa","2d2554fb4e394519a1ff7ba82bf57c1b","ebcb7cf3809945a2b458725886c7b1d4","a4449181876d4fed8a5535a3f056ebf0","2efd39a8c47b41fb99464bcf26be2832","1afb72b04f9845d09c58c639fd3484d4","597021a0a89f40b78dcfe02310bb9f7c","351ff30a68614ca1b0c0604da794cb13","9de4d1bd928148fba9b3edc5d904a21a","d5e397e412f0448488b9369003903201","098dfd1d1ea841d4890ad7337acf9bf8","ffacb61e228147c1a0ab7bfc4ab7b142","c86cec20a7ca4407967ec14e254bf765","ab81d7276cd64f39adce076d088d6311","6e01f8562144461dbbbf001062ee3712","8b0e053ff6a547e79114fd83048e0fb7","8c4e6040609a4433beb276e510ad7073","50914e218e164dd6936b307d63d8ee8a","3e74416d343e4990b1a8a9e0a1d4fe65","f26cfa1d1eef4a3bad032d77615472d5","c997b53abddf424fa5d6f7dc666271cb","f6a5f2a9bb4b4d559e55f92404c340b8","66b1ea3c8e7249ddb61eeb18ec3d2ab8","6217746ef1df409ea885cbe1f10862a9","3499903728eb42869b5342bcdace8abc","cfb8a731d65b4434a33f967df5fe63ce","fdc8e0c00b6e430a843ba8323b1c2169","642e14ef95724a9788dd48d0982fb675","312a2d0b6dce43fea7dcb1d456285471","2c984999274148cd866997a257b3b6e2","944a510fa23741ec9ec18f02f200e6d0","119b1a9b78c74014b5f81c8ed49e4950","7c7e7256c5a04058a89a13c79d38220a","65a3a5f3d83d45e186d75396d9b57631","1e709814c921412180dd0f6e9dd0cb9c","23c362004d5a492792addaa118afc5b9","ed5c33b5206548f79c113ebe01d37a3b","9464d4fbf88542f8af0fce45ff5e5673","d3a4352268ba49fcb0a327c4a8b180ab","73350bcf637949bca46f3d7258ca5a1f","b3b1450b9a33485d9724ad8850ce56ea","0d4efc255d114f88a5bb273478696d35","8cd5e4cdbf5c447282b1c00f6843be81","10bdb2e828314992a5b59c4bc84469ec","c1db79ba28104a619eefe85f49469996","c927e60750ab4480be158a6983c081ca","101c398df4e742c687e2efef9e6ca200","0669be836fea4840a94d8454827c834f","b1fea17af55241839fc1a957d029009d","d6364540e9084553b6e88ce392d4e6ab","b786ecf33ad34a2cafd3d6d242c226de","26aa4a2331ee4b158fd36e36243832ef","070d36dfb2414d9f96d067a9b2874a7c","1af783ca6beb42c5ada211b4d7382b19","795cbe6109914cd0a3c2881eb59d3eb0","51789fa724cb49a990af5b7bd38724e3","26d3f01491c74b49ad5442ae88aa4a1a","5020942f070b41e6bb305c54c5efadad","3a67c27f1870449aa6c0652bf37274a4","365d435668434978ab587df43b6ed0d9","9519b45ac90d4036aff99e229d353857","f3291d6814f74f20980e329c8d0a4f37","6344e5e2422e4a58be7140c8234fa899","eb6bfb2a73fc4b469ec0f21b15602a75","f30993db4df74b9f9b39768e74fab2fa","3e5ac6ab0bb240c4971e8a22c1e855e2","5c2ac11ce0c04553860ff89447b4f20e","9de848cf96ff44e48511916aad1d9e78","5e703a3d15e24f24963713b176b4086e","dbf89a9470d543cab37486e93b5d9dfa","4365cbe25bdb43a09e5e6de10c2b36d3","8cd1d759120849dbb9a426b484325eb9","08e0cd164458476a979cfbd609d12c32","4de06885c6084ad1a8230e5946ec6720","18ffa6b327144189a024fb4bf85afb8f","3bdbcace94fb4a3889870c3e7a2786cf","bc850f5b197148a6bf72359ef56d91e8","cd78acfa455e4a52bfe5a82851988721","ce29321b85b7452f98d512aa94e99b49","ef32da4289f847c29ef1a55c042416e2","2b6fd0f6557d4692bab917be0b464bae","5a694c9bf1644962b44587e734a398a1","ce29ebb82eb244b48c1bdba0d0698a69","f137a6a347cc4b3f8139496bcf3b2777","a10fa7e448b24a9db2a09c6f53d7047a","17bf12fb4c93494b8f728c38aeac5f5c","41c25d8f517e47a18dd3d74b6e392f11","934f70e4bd434a1b870389c8a621962a","bf1a94aeac4944a48ccc9cc250854bd8","2fb24225768d4c439e01d046c6015eff","a84f1a5c967c4e2a8c51652b5c69ed83","8a3bfb4e1d894d99af50877fef39e607","c065c0ca660147b6a2a735a88d9fd0a3","b807cb54ad2c4d77a769d4e0247e6287","af376e85862c4e4f8472378e60f53357","e7b4b4fb788e4880a4c76026a011945f","d3f753fb285f4e74b90a9107bc4039ed","935b163c1864463ea616f55cc218c351","a99ac3018fda4f729f35beee1ad36856","468f2e7cbefe47ffa960de3f14c4c847","76f9875f05444596aaa4d7998f71ad36","eb408ae173dc45e9a0bfc87a5c228fdc","3b98b476bc814aefa8e459bf98b7c38c","6378489b9c4a41ccbb6ff82288b404f3","1ad1102bc0f147f2b1a6c34bbf9977fd","ece7146586524080b33aa7e7312c3241","33d1bdbca5fa4890af8ddfc97ce0f93b","d47358e7a17d44e0944ba22c57927f44","1c249eb681dc4a118883c5ac97d31a84","fef982ffe27546c4bda71a465625d6b5","aab81542ee854f458893daf442126b43","fc3f84a986bd40dabb0beb154d5e5192","c797d96ca4f342a5ba75a0e5f887a0d8","3ee72b3f7f9342d78cd403316e874ee9","494826a5deb44be4b30181e2e22c9b90","c4f70d87d88b41e2a2b5a3d8bb2076b7","200117ff21b943a1b1fd5899a57c3993","54566fa8f9f84bc3aeef80e2289a57e9","923a31aeafbb4494a1396e4189320922","89a256d41d27416bb0c15dd2fa7fac6d","0ba742fda7394996b0ae8aaa9a0431a4"]},"id":"0989e628","outputId":"e5b1f4fb-9da6-41b2-f404-8000eddb37c4"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286782\n","1.0    286653\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71642\n","1.0     4088\n","Name: HEARTDISEASE, dtype: int64\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0b95e5b8dbba4117a36477d365e938a3","version_major":2,"version_minor":0},"text/plain":["loss:   0%|          | 0/9 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f47bb61961747908206af658123192f","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e6f05abc4fea49a2a8af95f4f3c87ee5","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c243f52082c49e2b4b10393fed52f03","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6ff39d32484d4a15b2c181679e86f9ba","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c9e24ea7f8484feb91402eb4d8e24c39","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0110989c055c4a2ca7beba7481d82a4f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5c70b1267a6e4db3afeba6ed0aa0cdbe","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"55e15aefbc284cc8b77e95bf895bc22b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa1d55c781ff4d21aba775c27a7be23c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0cd3f506803a4675ae8a638d668ce2d3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"968fc4b3348f4cfda58e122b3e6affc6","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a03a9a9c2df432d8bb8faa1332092b6","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af8171573b034bbca71431042f5768ff","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c6e8eedb0da4262bc2a81574f5ad729","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8799c0ea9c9f43329bb1f453ff87bfd9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4fa629f33ec34d139ac6f7c0b24da273","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"912b349ec2a648749874fae39f99fb44","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"07dd0ee5f79243599a395ca1d7aae8aa","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"97cad1259a7048c2a6bb9a4eede2dba3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fc5d3ac45bc94e43bb06aa560597d17f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7364568754b4575a35d7f7388d123d2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8fd86db6eded47668e3e44e5990be90c","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"31fbadc8c2c34ae985f0eb65acced988","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"187d69b24fcf43ab9de2e20990ce431a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b4f88e214ec246a4a069b6d77a6cd1df","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"797d0a85c4854180b4be426d11d73681","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af20728e8cef444e9ded192e45480e43","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f0563ff468a4a9893124f5cf13ad2e5","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4c5c288e8ba9478995f3b0521eae7a70","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5cee3124f29e47039ea94c61f408cab2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"82bd18668a9b46efa6881fe53805de3f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"636645fc7764451e9fe4b6fa26b51082","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b2fcaa11c7d04965bc604f6e689447fd","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f93b06204956447dbfaf15f6f9e8e4ea","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7101a745ca714bd8b269296ae6c89d08","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"772759a97e604bfaaacaa5befaf2ed1e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"20fe3c13d6af4c46ace6a1f3dc3d2292","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"076bdc81c2d14fc9b5df903f34481e8a","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c2c2513e1a8a4ee8b20f2dc85b594cde","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"836407679b2649b1970d4cd7b342234b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f1e83ccafaef475986abbc4e664cbcd3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8af6aee54a9640cd8c968c7cad1bb3a1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0fc57505ba444a689f2728c95d49dfe","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"df274dc569df452eb5bf6430bca7da09","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d0c427a0cc514707a200e04aa4824ca8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0323576e3404425eb01f9b0ed314a357","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f0272b4605a6432fbd71e96ce5e7847f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"13c4a1b9da0345dbabb0c75cb7d2400b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b889e70bc4df471696005e72cd76c5a4","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"68c0fce299774126b75aaa9af16de848","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f10f6d3b71344947b4320ceac0bcff71","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b7a28611eb7a46eabc5ed55f3af0ff21","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1098d9d5596c45cab73eb1f63adf41ec","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"da9b83676c10456f8c4e17d29811f2b1","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c80f2f4405cd4cb8b0796a704e7378f8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"544194c144834ec7b57245f3b4f348c5","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"324d4016b5bd49248215d1c47926cd67","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b4dea9f8ccc34eb9a358fe8fae006cb7","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f95dc688a2694b86a06d2757b12989eb","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef244fa3d665480fa74ebfb545f1c410","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f4d40225732d4513b1fa6ad6321da640","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ba980f4eb7564aa89b2159d0e32fd688","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d55a53ed64374558ab0413d628c0d92f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"297121e76e9a42bf823c1d7e893f527a","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd5e07c819e04d019b3fcf9fa84694f4","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"93e8d08162d649eaada21c845f8f8ae3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d41d6a0e4c840a4a9510eafdfc78eca","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e7ade9f6c85842409826884dc7da72ae","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c926e5b6c6d942378e7fcd80ba4a23aa","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2d2554fb4e394519a1ff7ba82bf57c1b","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebcb7cf3809945a2b458725886c7b1d4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a4449181876d4fed8a5535a3f056ebf0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2efd39a8c47b41fb99464bcf26be2832","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1afb72b04f9845d09c58c639fd3484d4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"597021a0a89f40b78dcfe02310bb9f7c","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"351ff30a68614ca1b0c0604da794cb13","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9de4d1bd928148fba9b3edc5d904a21a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d5e397e412f0448488b9369003903201","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"098dfd1d1ea841d4890ad7337acf9bf8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ffacb61e228147c1a0ab7bfc4ab7b142","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c86cec20a7ca4407967ec14e254bf765","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ab81d7276cd64f39adce076d088d6311","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6e01f8562144461dbbbf001062ee3712","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8b0e053ff6a547e79114fd83048e0fb7","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c4e6040609a4433beb276e510ad7073","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"50914e218e164dd6936b307d63d8ee8a","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3e74416d343e4990b1a8a9e0a1d4fe65","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f26cfa1d1eef4a3bad032d77615472d5","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c997b53abddf424fa5d6f7dc666271cb","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f6a5f2a9bb4b4d559e55f92404c340b8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"66b1ea3c8e7249ddb61eeb18ec3d2ab8","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6217746ef1df409ea885cbe1f10862a9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3499903728eb42869b5342bcdace8abc","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cfb8a731d65b4434a33f967df5fe63ce","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fdc8e0c00b6e430a843ba8323b1c2169","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"642e14ef95724a9788dd48d0982fb675","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"312a2d0b6dce43fea7dcb1d456285471","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2c984999274148cd866997a257b3b6e2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"944a510fa23741ec9ec18f02f200e6d0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"119b1a9b78c74014b5f81c8ed49e4950","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7c7e7256c5a04058a89a13c79d38220a","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"65a3a5f3d83d45e186d75396d9b57631","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1e709814c921412180dd0f6e9dd0cb9c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23c362004d5a492792addaa118afc5b9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ed5c33b5206548f79c113ebe01d37a3b","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9464d4fbf88542f8af0fce45ff5e5673","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3a4352268ba49fcb0a327c4a8b180ab","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"73350bcf637949bca46f3d7258ca5a1f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b3b1450b9a33485d9724ad8850ce56ea","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0d4efc255d114f88a5bb273478696d35","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8cd5e4cdbf5c447282b1c00f6843be81","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"10bdb2e828314992a5b59c4bc84469ec","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c1db79ba28104a619eefe85f49469996","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c927e60750ab4480be158a6983c081ca","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"101c398df4e742c687e2efef9e6ca200","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0669be836fea4840a94d8454827c834f","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1fea17af55241839fc1a957d029009d","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d6364540e9084553b6e88ce392d4e6ab","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b786ecf33ad34a2cafd3d6d242c226de","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"26aa4a2331ee4b158fd36e36243832ef","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"070d36dfb2414d9f96d067a9b2874a7c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1af783ca6beb42c5ada211b4d7382b19","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"795cbe6109914cd0a3c2881eb59d3eb0","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"51789fa724cb49a990af5b7bd38724e3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"26d3f01491c74b49ad5442ae88aa4a1a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5020942f070b41e6bb305c54c5efadad","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3a67c27f1870449aa6c0652bf37274a4","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"365d435668434978ab587df43b6ed0d9","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9519b45ac90d4036aff99e229d353857","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f3291d6814f74f20980e329c8d0a4f37","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6344e5e2422e4a58be7140c8234fa899","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb6bfb2a73fc4b469ec0f21b15602a75","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f30993db4df74b9f9b39768e74fab2fa","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3e5ac6ab0bb240c4971e8a22c1e855e2","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5c2ac11ce0c04553860ff89447b4f20e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9de848cf96ff44e48511916aad1d9e78","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5e703a3d15e24f24963713b176b4086e","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"dbf89a9470d543cab37486e93b5d9dfa","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4365cbe25bdb43a09e5e6de10c2b36d3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8cd1d759120849dbb9a426b484325eb9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"08e0cd164458476a979cfbd609d12c32","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4de06885c6084ad1a8230e5946ec6720","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"18ffa6b327144189a024fb4bf85afb8f","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3bdbcace94fb4a3889870c3e7a2786cf","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bc850f5b197148a6bf72359ef56d91e8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd78acfa455e4a52bfe5a82851988721","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce29321b85b7452f98d512aa94e99b49","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef32da4289f847c29ef1a55c042416e2","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2b6fd0f6557d4692bab917be0b464bae","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5a694c9bf1644962b44587e734a398a1","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ce29ebb82eb244b48c1bdba0d0698a69","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f137a6a347cc4b3f8139496bcf3b2777","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a10fa7e448b24a9db2a09c6f53d7047a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"17bf12fb4c93494b8f728c38aeac5f5c","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"41c25d8f517e47a18dd3d74b6e392f11","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"934f70e4bd434a1b870389c8a621962a","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"bf1a94aeac4944a48ccc9cc250854bd8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2fb24225768d4c439e01d046c6015eff","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a84f1a5c967c4e2a8c51652b5c69ed83","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8a3bfb4e1d894d99af50877fef39e607","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c065c0ca660147b6a2a735a88d9fd0a3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b807cb54ad2c4d77a769d4e0247e6287","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af376e85862c4e4f8472378e60f53357","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e7b4b4fb788e4880a4c76026a011945f","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d3f753fb285f4e74b90a9107bc4039ed","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"935b163c1864463ea616f55cc218c351","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a99ac3018fda4f729f35beee1ad36856","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"468f2e7cbefe47ffa960de3f14c4c847","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"76f9875f05444596aaa4d7998f71ad36","version_major":2,"version_minor":0},"text/plain":["penalty:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eb408ae173dc45e9a0bfc87a5c228fdc","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3b98b476bc814aefa8e459bf98b7c38c","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6378489b9c4a41ccbb6ff82288b404f3","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ad1102bc0f147f2b1a6c34bbf9977fd","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ece7146586524080b33aa7e7312c3241","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"33d1bdbca5fa4890af8ddfc97ce0f93b","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d47358e7a17d44e0944ba22c57927f44","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c249eb681dc4a118883c5ac97d31a84","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fef982ffe27546c4bda71a465625d6b5","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aab81542ee854f458893daf442126b43","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fc3f84a986bd40dabb0beb154d5e5192","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c797d96ca4f342a5ba75a0e5f887a0d8","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3ee72b3f7f9342d78cd403316e874ee9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"494826a5deb44be4b30181e2e22c9b90","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c4f70d87d88b41e2a2b5a3d8bb2076b7","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"200117ff21b943a1b1fd5899a57c3993","version_major":2,"version_minor":0},"text/plain":["alpha:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"54566fa8f9f84bc3aeef80e2289a57e9","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"923a31aeafbb4494a1396e4189320922","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"89a256d41d27416bb0c15dd2fa7fac6d","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0ba742fda7394996b0ae8aaa9a0431a4","version_major":2,"version_minor":0},"text/plain":["class_weight:   0%|          | 0/2 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["loss_list = [\"hinge\", \"log_loss\", \"modified_huber\", \"squared_hinge\", \"perceptron\", \n","             \"squared_error\", \"huber\", \"epsilon_insensitive\", \"squared_epsilon_insensitive\"]\n","penalty_list = [\"l2\", \"l1\", \"elasticnet\", None]\n","alpha_list = [0.0001, 0.001, 0.01, 0.1]\n","class_weight_list = [\"balanced\", None]\n","\n","sgd_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","X_train, X_test, y_train, y_test = prepare_data_adasyn()\n","\n","for loss in tqdm(loss_list, desc=\"loss\"):\n","    for penalty in tqdm(penalty_list, desc=\"penalty\"):\n","        for alpha in tqdm(alpha_list, desc=\"alpha\"):\n","            for class_weight in tqdm(class_weight_list, desc=\"class_weight\"):\n","                model = SGDClassifier(early_stopping=True, n_iter_no_change=5,\n","                                      loss=loss, \n","                                      penalty=penalty, \n","                                      alpha=alpha, \n","                                      class_weight=class_weight)\n","                sgd_df = pd.concat([sgd_df, make_eval_df(model)], axis=0, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"id":"4159b005","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:09:23.272042Z","start_time":"2022-12-26T16:09:23.243120Z"},"id":"4159b005","outputId":"a98741c4-241c-457e-8fe6-758bc572cd7e"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>157</th>\n","      <td>SGDClassifier(alpha=0.01, early_stopping=True,...</td>\n","      <td>[[70931   711] [3752   336]]</td>\n","      <td>0.941067</td>\n","      <td>0.320917</td>\n","      <td>0.082192</td>\n","      <td>0.130867</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>[[67821  3821] [3309   779]]</td>\n","      <td>0.905850</td>\n","      <td>0.169348</td>\n","      <td>0.190558</td>\n","      <td>0.179328</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>SGDClassifier(alpha=0.01, class_weight='balanc...</td>\n","      <td>[[63968  7674] [2526  1562]]</td>\n","      <td>0.865311</td>\n","      <td>0.169121</td>\n","      <td>0.382094</td>\n","      <td>0.234464</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>SGDClassifier(alpha=0.1, class_weight='balance...</td>\n","      <td>[[68420  3222] [3439   649]]</td>\n","      <td>0.912043</td>\n","      <td>0.167657</td>\n","      <td>0.158757</td>\n","      <td>0.163086</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>[[62889  8753] [2457  1631]]</td>\n","      <td>0.851974</td>\n","      <td>0.157069</td>\n","      <td>0.398973</td>\n","      <td>0.225401</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                 model  \\\n","157  SGDClassifier(alpha=0.01, early_stopping=True,...   \n","144  SGDClassifier(class_weight='balanced', early_s...   \n","132  SGDClassifier(alpha=0.01, class_weight='balanc...   \n","126  SGDClassifier(alpha=0.1, class_weight='balance...   \n","111  SGDClassifier(alpha=0.1, early_stopping=True, ...   \n","\n","                        confusion  accuracy  precision    recall        f1  \\\n","157  [[70931   711] [3752   336]]  0.941067   0.320917  0.082192  0.130867   \n","144  [[67821  3821] [3309   779]]  0.905850   0.169348  0.190558  0.179328   \n","132  [[63968  7674] [2526  1562]]  0.865311   0.169121  0.382094  0.234464   \n","126  [[68420  3222] [3439   649]]  0.912043   0.167657  0.158757  0.163086   \n","111  [[62889  8753] [2457  1631]]  0.851974   0.157069  0.398973  0.225401   \n","\n","    roc_auc  \n","157       0  \n","144       0  \n","132       0  \n","126       0  \n","111       0  "]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["sgd_df.sort_values(\"precision\", ascending=False).head()"]},{"cell_type":"code","execution_count":null,"id":"945e02e3","metadata":{"ExecuteTime":{"end_time":"2022-12-26T16:09:23.531758Z","start_time":"2022-12-26T16:09:23.359062Z"},"id":"945e02e3"},"outputs":[],"source":["sgd_df.to_csv(\"./SGDClassifier_adasyn_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"id":"0584d7a0","metadata":{"id":"0584d7a0"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"f0bc895c","metadata":{"ExecuteTime":{"end_time":"2022-12-26T13:28:03.587021Z","start_time":"2022-12-26T13:15:32.676005Z"},"scrolled":true,"id":"f0bc895c","outputId":"4d855fc7-d759-43aa-b0b9-711c169131d9"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286649\n","1.0    286649\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71775\n","1.0     3955\n","Name: HEARTDISEASE, dtype: int64\n","Fitting 3 folds for each of 288 candidates, totalling 864 fits\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   1.3s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   1.3s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.5s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=None; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_error, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l2; total time=   1.1s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=l1; total time=   1.3s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.8s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=l1; total time=   1.1s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=modified_huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=None; total time=   1.4s\n","[CV] END alpha=0.001, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=hinge, penalty=None; total time=   0.8s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l2; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l2; total time=   1.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.2s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=elasticnet; total time=   1.4s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_error, penalty=None; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=balanced, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l2; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l1; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l1; total time=   0.7s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=l1; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=elasticnet; total time=   0.8s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=elasticnet; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=elasticnet; total time=   1.3s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, loss=squared_epsilon_insensitive, penalty=None; total time=   1.0s\n"]}],"source":["params = {\n","    \"loss\": [\"hinge\", \"log_loss\", \"modified_huber\", \"squared_hinge\", \"perceptron\", \n","             \"squared_error\", \"huber\", \"epsilon_insensitive\", \"squared_epsilon_insensitive\"],\n","    \"penalty\": [\"l2\", \"l1\", \"elasticnet\", None], \n","    \"alpha\": [0.0001, 0.001, 0.01, 0.1],\n","    # \"learning_rate\": [\"constant\", \"optimal\", \"invscaling\"],\n","    \"class_weight\": [\"balanced\", None],\n","}\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","model = SGDClassifier(early_stopping=True, n_iter_no_change=5)\n","result_sgd_smote_1 = grid_search(model, params)\n","result_sgd_smote_1.to_csv(\"./result_sgd_smote_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"id":"0664ef0b","metadata":{"ExecuteTime":{"end_time":"2022-12-26T13:28:14.471331Z","start_time":"2022-12-26T13:28:04.058573Z"},"id":"0664ef0b","outputId":"7f65b767-3705-4e33-9c15-e17c63e0e76f"},"outputs":[{"data":{"text/plain":["[SGDClassifier(class_weight='balanced', early_stopping=True, loss='log_loss',\n","               penalty=None),\n"," SGDClassifier(early_stopping=True, loss='squared_hinge'),\n"," SGDClassifier(early_stopping=True, loss='perceptron'),\n"," SGDClassifier(alpha=0.001, early_stopping=True, loss='log_loss',\n","               penalty='elasticnet'),\n"," SGDClassifier(alpha=0.001, early_stopping=True, loss='perceptron'),\n"," SGDClassifier(alpha=0.01, class_weight='balanced', early_stopping=True,\n","               loss='log_loss', penalty=None),\n"," SGDClassifier(alpha=0.01, early_stopping=True, loss='log_loss', penalty=None),\n"," SGDClassifier(alpha=0.1, class_weight='balanced', early_stopping=True,\n","               loss='squared_hinge', penalty=None),\n"," SGDClassifier(alpha=0.1, early_stopping=True, loss='perceptron', penalty=None)]"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["result_best_test(model, result_sgd_smote_1)"]},{"cell_type":"code","execution_count":null,"id":"8cca971a","metadata":{"ExecuteTime":{"end_time":"2022-12-26T13:44:14.348593Z","start_time":"2022-12-26T13:39:54.120502Z"},"id":"8cca971a","outputId":"7fec20ed-c7a7-4dab-997f-952a1e6fb308"},"outputs":[{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>precision</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.121669</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.141628</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.122551</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SGDClassifier(early_stopping=True, loss='log_l...</td>\n","      <td>0.121669</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SGDClassifier(early_stopping=True, loss='squar...</td>\n","      <td>0.123329</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>SGDClassifier(early_stopping=True, loss='squar...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.136554</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.122551</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.117449</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121790</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.125671</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>SGDClassifier(alpha=0.01, class_weight='balanc...</td>\n","      <td>0.112961</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>SGDClassifier(alpha=0.01, early_stopping=True,...</td>\n","      <td>0.112749</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>SGDClassifier(alpha=0.01, early_stopping=True,...</td>\n","      <td>0.130352</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>SGDClassifier(alpha=0.1, class_weight='balance...</td>\n","      <td>0.149289</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>SGDClassifier(alpha=0.1, class_weight='balance...</td>\n","      <td>0.113429</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.112618</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.133522</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.210021</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                model  precision\n","0   SGDClassifier(class_weight='balanced', early_s...   0.121669\n","1   SGDClassifier(class_weight='balanced', early_s...   0.141628\n","2   SGDClassifier(class_weight='balanced', early_s...   0.122551\n","3   SGDClassifier(early_stopping=True, loss='log_l...   0.121669\n","4   SGDClassifier(early_stopping=True, loss='squar...   0.123329\n","5   SGDClassifier(early_stopping=True, loss='squar...   0.121663\n","6   SGDClassifier(alpha=0.001, class_weight='balan...   0.136554\n","7   SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","8   SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","9   SGDClassifier(alpha=0.001, class_weight='balan...   0.122551\n","10  SGDClassifier(alpha=0.001, class_weight='balan...   0.121663\n","11  SGDClassifier(alpha=0.001, class_weight='balan...   0.117449\n","12  SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","13  SGDClassifier(alpha=0.001, class_weight='balan...   0.121790\n","14  SGDClassifier(alpha=0.001, class_weight='balan...   0.121663\n","15  SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","16  SGDClassifier(alpha=0.001, early_stopping=True...   0.121663\n","17  SGDClassifier(alpha=0.001, early_stopping=True...   0.121792\n","18  SGDClassifier(alpha=0.001, early_stopping=True...   0.125671\n","19  SGDClassifier(alpha=0.001, early_stopping=True...   0.121663\n","20  SGDClassifier(alpha=0.001, early_stopping=True...   0.121792\n","21  SGDClassifier(alpha=0.01, class_weight='balanc...   0.112961\n","22  SGDClassifier(alpha=0.01, early_stopping=True,...   0.112749\n","23  SGDClassifier(alpha=0.01, early_stopping=True,...   0.130352\n","24  SGDClassifier(alpha=0.1, class_weight='balance...   0.149289\n","25  SGDClassifier(alpha=0.1, class_weight='balance...   0.113429\n","26  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.112618\n","27  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.133522\n","28  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.210021"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["m, p = result_high_precision(model, result_sgd_smote_1)\n","pd.DataFrame({\"model\": m, \"precision\": p})"]},{"cell_type":"code","execution_count":null,"id":"8476a696","metadata":{"ExecuteTime":{"end_time":"2022-12-26T13:51:43.058855Z","start_time":"2022-12-26T13:51:43.010502Z"},"id":"8476a696","outputId":"ed2a3e95-5b5a-42b4-cd6a-b70a7ba76784"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>precision</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>28</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.210021</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>SGDClassifier(alpha=0.1, class_weight='balance...</td>\n","      <td>0.149289</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.141628</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.136554</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.133522</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>SGDClassifier(alpha=0.01, early_stopping=True,...</td>\n","      <td>0.130352</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.125671</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SGDClassifier(early_stopping=True, loss='squar...</td>\n","      <td>0.123329</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.122551</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.122551</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121792</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121790</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SGDClassifier(class_weight='balanced', early_s...</td>\n","      <td>0.121669</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SGDClassifier(early_stopping=True, loss='log_l...</td>\n","      <td>0.121669</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>SGDClassifier(alpha=0.001, early_stopping=True...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>SGDClassifier(early_stopping=True, loss='squar...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.121663</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>SGDClassifier(alpha=0.001, class_weight='balan...</td>\n","      <td>0.117449</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>SGDClassifier(alpha=0.1, class_weight='balance...</td>\n","      <td>0.113429</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>SGDClassifier(alpha=0.01, class_weight='balanc...</td>\n","      <td>0.112961</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>SGDClassifier(alpha=0.01, early_stopping=True,...</td>\n","      <td>0.112749</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>SGDClassifier(alpha=0.1, early_stopping=True, ...</td>\n","      <td>0.112618</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                model  precision\n","28  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.210021\n","24  SGDClassifier(alpha=0.1, class_weight='balance...   0.149289\n","1   SGDClassifier(class_weight='balanced', early_s...   0.141628\n","6   SGDClassifier(alpha=0.001, class_weight='balan...   0.136554\n","27  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.133522\n","23  SGDClassifier(alpha=0.01, early_stopping=True,...   0.130352\n","18  SGDClassifier(alpha=0.001, early_stopping=True...   0.125671\n","4   SGDClassifier(early_stopping=True, loss='squar...   0.123329\n","9   SGDClassifier(alpha=0.001, class_weight='balan...   0.122551\n","2   SGDClassifier(class_weight='balanced', early_s...   0.122551\n","7   SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","17  SGDClassifier(alpha=0.001, early_stopping=True...   0.121792\n","20  SGDClassifier(alpha=0.001, early_stopping=True...   0.121792\n","12  SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","15  SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","8   SGDClassifier(alpha=0.001, class_weight='balan...   0.121792\n","13  SGDClassifier(alpha=0.001, class_weight='balan...   0.121790\n","0   SGDClassifier(class_weight='balanced', early_s...   0.121669\n","3   SGDClassifier(early_stopping=True, loss='log_l...   0.121669\n","16  SGDClassifier(alpha=0.001, early_stopping=True...   0.121663\n","19  SGDClassifier(alpha=0.001, early_stopping=True...   0.121663\n","10  SGDClassifier(alpha=0.001, class_weight='balan...   0.121663\n","5   SGDClassifier(early_stopping=True, loss='squar...   0.121663\n","14  SGDClassifier(alpha=0.001, class_weight='balan...   0.121663\n","11  SGDClassifier(alpha=0.001, class_weight='balan...   0.117449\n","25  SGDClassifier(alpha=0.1, class_weight='balance...   0.113429\n","21  SGDClassifier(alpha=0.01, class_weight='balanc...   0.112961\n","22  SGDClassifier(alpha=0.01, early_stopping=True,...   0.112749\n","26  SGDClassifier(alpha=0.1, early_stopping=True, ...   0.112618"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["temp = pd.DataFrame({\"model\": m, \"precision\": p})\n","temp.sort_values(\"precision\", ascending=False)"]},{"cell_type":"code","execution_count":null,"id":"51a274fa","metadata":{"ExecuteTime":{"end_time":"2022-12-26T13:51:48.330228Z","start_time":"2022-12-26T13:51:48.139354Z"},"scrolled":true,"id":"51a274fa","outputId":"e1f24ac1-1739-429b-a772-a2b0cda03e5b"},"outputs":[{"name":"stdout","output_type":"stream","text":["SGDClassifier(alpha=0.1, early_stopping=True, loss='huber')\n","SGDClassifier(alpha=0.1, class_weight='balanced', early_stopping=True,\n","              loss='perceptron')\n","SGDClassifier(class_weight='balanced', early_stopping=True,\n","              loss='squared_epsilon_insensitive', penalty='elasticnet')\n","SGDClassifier(alpha=0.001, class_weight='balanced', early_stopping=True,\n","              loss='modified_huber')\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["SGDClassifier(alpha=0.1, early_stopping=True, loss='squared_hinge',\n","              penalty=None)\n","SGDClassifier(alpha=0.01, early_stopping=True, loss='perceptron')\n","SGDClassifier(alpha=0.001, early_stopping=True, loss='perceptron')\n","SGDClassifier(early_stopping=True, loss='squared_hinge', penalty='elasticnet')\n","SGDClassifier(alpha=0.001, class_weight='balanced', early_stopping=True,\n","              loss='squared_hinge')\n"]}],"source":["check_result(list(temp.loc[[28, 24, 1, 6, 27, 23, 18, 4, 9], \"model\"]))"]},{"cell_type":"code","execution_count":null,"id":"f281c00d","metadata":{"ExecuteTime":{"end_time":"2022-12-26T14:15:43.165470Z","start_time":"2022-12-26T14:00:21.843799Z"},"id":"f281c00d","outputId":"3f5d767d-f74c-4424-b720-7dbe3d1fa497"},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0    291591\n","0.0    286789\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71635\n","1.0     4095\n","Name: HEARTDISEASE, dtype: int64\n","Fitting 3 folds for each of 864 candidates, totalling 2592 fits\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.9s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.5s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.5s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.3s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.0001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.2s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.6s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.3s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.5s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.6s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.7s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.001, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.3s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.3s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.3s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.6s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.5s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.3s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.7s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.1s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.5s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.5s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.3s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.3s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.3s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.9s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.01, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.1s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.4s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=log_loss, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.6s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.2s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.5s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.6s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.3s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.8s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=balanced, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=constant, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=log_loss, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=modified_huber, penalty=None; total time=   0.9s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_hinge, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.4s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l2; total time=   1.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=l1; total time=   1.1s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.3s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=elasticnet; total time=   1.3s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.6s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=perceptron, penalty=None; total time=   1.5s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_error, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l2; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=l1; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.9s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=huber, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=l1; total time=   1.5s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.9s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   1.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.2s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   0.8s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=optimal, loss=squared_epsilon_insensitive, penalty=None; total time=   1.1s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=log_loss, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=modified_huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_hinge, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=perceptron, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_error, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=huber, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l2; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=l1; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=elasticnet; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n","[CV] END alpha=0.1, class_weight=None, learning_rate=invscaling, loss=squared_epsilon_insensitive, penalty=None; total time=   0.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:378: FitFailedWarning: \n","1728 fits failed out of a total of 2592.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","1728 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py\", line 890, in fit\n","    return self._fit(\n","  File \"D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py\", line 658, in _fit\n","    self._validate_params()\n","  File \"D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py\", line 148, in _validate_params\n","    raise ValueError(\"eta0 must be > 0\")\n","ValueError: eta0 must be > 0\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:953: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.67623016 0.67623708 0.67624053 0.6762388  0.70081952 0.70086102\n"," 0.69948822 0.70084719 0.69237352 0.69571389 0.68601436 0.69994639\n"," 0.68736641 0.68281753 0.69858224 0.68513434 0.62111435 0.539467\n"," 0.57956893 0.61248664 0.69904733 0.69678238 0.69690687 0.70083854\n"," 0.67623708 0.67623362 0.67623708 0.67623708 0.67624053 0.67625091\n"," 0.6762388  0.67624572 0.68737509 0.69792177 0.69686884 0.69406618\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.67624053 0.67623016 0.67623016 0.67625609 0.70085583 0.70084546\n"," 0.70082125 0.70083854 0.69614958 0.69460215 0.69205537 0.69595767\n"," 0.69237178 0.69803416 0.68717278 0.69223173 0.61299491 0.61752826\n"," 0.56166544 0.61356718 0.69502921 0.7011048  0.7010806  0.70038383\n"," 0.67623708 0.67623535 0.67623708 0.67623535 0.6762388  0.6762388\n"," 0.67623016 0.67623708 0.69098516 0.70114976 0.68848857 0.7006985\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.67621633 0.67621979 0.67621806 0.67621806 0.70083163 0.70082125\n"," 0.70082298 0.70085065 0.69892804 0.70050658 0.70081779 0.70083163\n"," 0.69885024 0.70051868 0.70082644 0.70079186 0.59434447 0.60430673\n"," 0.62538469 0.57730027 0.70056364 0.6988658  0.7002213  0.70048756\n"," 0.6762388  0.67622497 0.67623708 0.67623535 0.6762146  0.67621633\n"," 0.6762146  0.67621633 0.70081779 0.69872921 0.70082471 0.70038555\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.67621633 0.67621633 0.67621633 0.67621979 0.70082817 0.70081952\n"," 0.70083681 0.70085065 0.70081261 0.70078322 0.70079359 0.70055845\n"," 0.70053943 0.70081779 0.69885369 0.70080915 0.54358545 0.58396902\n"," 0.55667909 0.54813965 0.69849061 0.70039766 0.70054116 0.70081607\n"," 0.6762388  0.67622843 0.67623708 0.67623535 0.67621633 0.67621633\n"," 0.67621633 0.67621633 0.70057228 0.70037864 0.70082471 0.69883812\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.6762146  0.6762146  0.6762146  0.6762146  0.70051177 0.68882568\n"," 0.6992185  0.700842   0.70079705 0.69927383 0.70080742 0.70080223\n"," 0.70078494 0.68839863 0.70055499 0.70080051 0.63899513 0.49861683\n"," 0.5993343  0.5504754  0.70050485 0.69619972 0.699815   0.70078494\n"," 0.67824613 0.6762146  0.67627857 0.67623708 0.6762146  0.6762146\n"," 0.6762146  0.6762146  0.70049967 0.69901794 0.70054116 0.70079532\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.6762146  0.6762146  0.6762146  0.6762146  0.70054981 0.68882914\n"," 0.6992721  0.70085237 0.70079532 0.69936892 0.70078494 0.70080396\n"," 0.70055153 0.68905909 0.70080396 0.70080915 0.5890506  0.5288496\n"," 0.60035289 0.64396929 0.70079359 0.69611673 0.7004599  0.70080569\n"," 0.67825997 0.6762146  0.6762803  0.67623708 0.6762146  0.6762146\n"," 0.6762146  0.6762146  0.7005135  0.69915799 0.70054462 0.70080223\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.68124071 0.6762146  0.678298   0.67622324 0.69550814 0.50138317\n"," 0.68806494 0.70036654 0.69925135 0.67620077 0.69806874 0.70081088\n"," 0.69925135 0.67104325 0.69806182 0.65555519 0.53551649 0.49861683\n"," 0.50138317 0.54844573 0.6986393  0.6162349  0.69100591 0.70024378\n"," 0.56910001 0.49584875 0.50415125 0.67779314 0.67825824 0.6762146\n"," 0.67628549 0.6762146  0.69924616 0.66332167 0.6909696  0.70036826\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.68123206 0.6762146  0.67771189 0.67709464 0.69802033 0.50415125\n"," 0.68369757 0.7006449  0.69938275 0.67622843 0.69818804 0.70081088\n"," 0.69926518 0.64709878 0.69844219 0.65222178 0.62627167 0.50138491\n"," 0.55757298 0.56129891 0.69888308 0.67620595 0.69129292 0.70080223\n"," 0.57843472 0.50138491 0.49861683 0.67964141 0.67825824 0.6762146\n"," 0.67628549 0.6762146  0.69945018 0.62388745 0.69675472 0.70089214\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan]\n","  warnings.warn(\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:953: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.6932886  0.69329716 0.69330144 0.6932993  0.71175472 0.71180627\n"," 0.70395864 0.71178888 0.68555282 0.69162105 0.67046457 0.71133983\n"," 0.67497613 0.68102114 0.70235495 0.6662173  0.66919155 0.45867103\n"," 0.5612495  0.59970101 0.70797909 0.69830819 0.69860235 0.71174712\n"," 0.69329716 0.69329288 0.69329716 0.69329716 0.69330144 0.69331427\n"," 0.6932993  0.69330786 0.6901742  0.70125021 0.69946395 0.69414201\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.69330144 0.6932886  0.6932886  0.6933207  0.71179987 0.71178678\n"," 0.71175698 0.71177825 0.70282169 0.68868284 0.68381369 0.71213785\n"," 0.691694   0.70632841 0.67452426 0.68599983 0.54730586 0.68200374\n"," 0.58020053 0.54905748 0.70137496 0.71250069 0.71262534 0.71081702\n"," 0.69329716 0.69329502 0.69329716 0.69329502 0.6932993  0.6932993\n"," 0.6932886  0.69329716 0.68858677 0.71283573 0.67695202 0.71146208\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.69327149 0.69327576 0.69327362 0.69327362 0.71176974 0.71175684\n"," 0.71175902 0.71179326 0.70821776 0.71126979 0.7117419  0.71176223\n"," 0.70806437 0.7112821  0.71175848 0.71163536 0.48365952 0.63642793\n"," 0.52454082 0.45859803 0.71135291 0.70799385 0.7105727  0.71124337\n"," 0.6932993  0.69328218 0.69329716 0.69329502 0.69326935 0.69327149\n"," 0.69326935 0.69327149 0.71175262 0.70793029 0.71176096 0.71092382\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.69327148 0.69327149 0.69327149 0.69327576 0.71176544 0.71175473\n"," 0.71177612 0.71179333 0.71174619 0.71168243 0.71163222 0.71135408\n"," 0.7113078  0.71174495 0.70806398 0.71173696 0.47433893 0.6591643\n"," 0.54829353 0.24388259 0.70722422 0.71104393 0.71104226 0.71174284\n"," 0.6932993  0.69328646 0.69329716 0.69329502 0.69327149 0.69327149\n"," 0.69327149 0.69327148 0.71136354 0.7109259  0.71176105 0.70808878\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.69326935 0.69326935 0.69326935 0.69326935 0.71103499 0.689215\n"," 0.70833982 0.71178257 0.71171918 0.70841709 0.71172725 0.71173325\n"," 0.71171177 0.68696549 0.71132664 0.71173108 0.66369715 0.22344908\n"," 0.5270967  0.67631732 0.71124945 0.70284179 0.70955002 0.71171177\n"," 0.69620638 0.69326935 0.69334849 0.69329716 0.69326935 0.69326935\n"," 0.69326935 0.69326935 0.71125844 0.70806394 0.71132009 0.71172467\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.69326935 0.69326935 0.69326935 0.69326935 0.71117852 0.68921953\n"," 0.7084149  0.71179545 0.71172467 0.70876728 0.71171177 0.71173536\n"," 0.71133777 0.6886836  0.71172292 0.71174186 0.68718529 0.19802169\n"," 0.43651963 0.68512866 0.71169944 0.70274352 0.71110344 0.71172992\n"," 0.69621446 0.69326935 0.69335064 0.69329716 0.69326935 0.69326935\n"," 0.69326935 0.69326935 0.71127079 0.70830781 0.71132922 0.71173323\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.70068052 0.69326935 0.69621073 0.69328005 0.70149346 0.4468974\n"," 0.68788713 0.71075104 0.70838888 0.6932522  0.7063629  0.71174404\n"," 0.70838889 0.6759335  0.70635422 0.60832766 0.46467836 0.22344908\n"," 0.4468974  0.52403625 0.70732969 0.46227567 0.69334058 0.71051136\n"," 0.68321115 0.         0.67034648 0.6955702  0.69625007 0.69326935\n"," 0.69336309 0.69326935 0.70838236 0.68220746 0.7010482  0.71099324\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.70066998 0.69326935 0.69538461 0.69458394 0.70628785 0.67034648\n"," 0.70476736 0.71124573 0.70863585 0.69328643 0.70654159 0.71174402\n"," 0.70840621 0.59846999 0.70698989 0.58820715 0.66035172 0.44689817\n"," 0.37483565 0.27385152 0.70768193 0.69325864 0.69378317 0.7117333\n"," 0.69845454 0.44689817 0.22344908 0.69833577 0.69625007 0.69326935\n"," 0.69336309 0.69326935 0.70892431 0.62941517 0.70393039 0.71183774\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan]\n","  warnings.warn(\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:953: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72582144 0.72583516 0.72584202 0.72583859 0.73270437 0.73278668\n"," 0.70998076 0.73275924 0.66754118 0.67808677 0.64101087 0.73354116\n"," 0.65524313 0.68336471 0.70758357 0.62958047 0.76366212 0.63578437\n"," 0.64403908 0.65572326 0.72389408 0.69921568 0.69799136 0.73263235\n"," 0.72583516 0.7258283  0.72583516 0.72583516 0.72584202 0.7258626\n"," 0.72583859 0.72585231 0.69925684 0.70535442 0.70106416 0.68946229\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72584202 0.72582144 0.72582144 0.72587288 0.73277639 0.73275581\n"," 0.7327078  0.73274209 0.71274491 0.672898   0.67080603 0.74766025\n"," 0.6884849  0.72032059 0.65022583 0.6742252  0.56807652 0.82636981\n"," 0.65814103 0.506041   0.71072152 0.73463859 0.73524903 0.73039977\n"," 0.72583516 0.72583173 0.72583516 0.72583173 0.72583859 0.72583859\n"," 0.72582144 0.72583516 0.67840571 0.73585262 0.66035646 0.73199447\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72579401 0.72580086 0.72579744 0.72579744 0.73272838 0.7327078\n"," 0.73271123 0.7327661  0.72478917 0.73172697 0.73266322 0.73270094\n"," 0.72444623 0.73174069 0.73270094 0.73234428 0.5602059  0.72280352\n"," 0.41255389 0.46255543 0.73188473 0.72416158 0.72992651 0.73167896\n"," 0.72583859 0.72581115 0.72583516 0.72583173 0.72579058 0.72579401\n"," 0.72579058 0.72579401 0.73270094 0.72422331 0.73271466 0.73081817\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72579401 0.72579401 0.72579401 0.72580086 0.73272152 0.73270437\n"," 0.73273866 0.7327661  0.73269065 0.7325329  0.73233742 0.73190188\n"," 0.73178185 0.73267351 0.72443594 0.73266665 0.58146856 0.80660583\n"," 0.64686153 0.1637259  0.72236797 0.73119541 0.73087304 0.73267008\n"," 0.72583859 0.72581801 0.72583516 0.72583173 0.72579401 0.72579401\n"," 0.72579401 0.72579401 0.73190188 0.73084217 0.73271466 0.72472058\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72579058 0.72579058 0.72579058 0.72579058 0.73088333 0.68440727\n"," 0.72450453 0.73274895 0.73263235 0.72464171 0.73263578 0.73267008\n"," 0.73263578 0.6782068  0.73181271 0.73266665 0.7247926  0.33333333\n"," 0.52957739 0.93125988 0.73165838 0.71265574 0.72732698 0.73263578\n"," 0.73129486 0.72579058 0.72591747 0.72583516 0.72579058 0.72579058\n"," 0.72579058 0.72579058 0.73170297 0.72401412 0.731823   0.73265636\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.72579058 0.72579058 0.72579058 0.72579058 0.73129829 0.68441413\n"," 0.72463828 0.73276953 0.73265636 0.72562253 0.73263578 0.73267351\n"," 0.73186072 0.68251421 0.73262892 0.73268379 0.89101173 0.19601085\n"," 0.44128591 0.77442034 0.73257062 0.71251513 0.73125371 0.7326495\n"," 0.73129143 0.72579058 0.7259209  0.72583516 0.72579058 0.72579058\n"," 0.72579058 0.72579058 0.73171326 0.72452853 0.731847   0.73267008\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.74004342 0.72579058 0.73119198 0.72580772 0.70973727 0.66666667\n"," 0.68184546 0.73021801 0.72459712 0.72576314 0.72036517 0.73268722\n"," 0.72459712 0.68455817 0.72035145 0.53394995 0.60998796 0.33333333\n"," 0.66666667 0.59611236 0.72236454 0.48386953 0.69289176 0.72971388\n"," 0.9090404  0.         1.         0.73014256 0.73141832 0.72579058\n"," 0.72595176 0.72579058 0.72458684 0.71674023 0.71960383 0.73111996\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.74002627 0.72579058 0.72967273 0.72832495 0.7202177  1.\n"," 0.74884684 0.73129486 0.72514584 0.72581801 0.72069783 0.73268722\n"," 0.72462456 0.54906702 0.72164093 0.51820529 0.73332167 0.66666667\n"," 0.41886409 0.30287972 0.72301614 0.72577343 0.69375255 0.73267008\n"," 0.96202901 0.66666667 0.33333333 0.73556111 0.73141832 0.72579058\n"," 0.72595176 0.72579058 0.72602721 0.63668289 0.71508037 0.7328244\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan]\n","  warnings.warn(\n","D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:953: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66354727 0.66355149 0.6635536  0.66355255 0.69197772 0.69200171\n"," 0.69938457 0.69199352 0.70711047 0.70736303 0.71123253 0.69057413\n"," 0.70776017 0.69361666 0.69937888 0.71517288 0.63306883 0.36049579\n"," 0.62797021 0.63905353 0.6928875  0.70021317 0.70058071 0.69202838\n"," 0.66355149 0.66354938 0.66355149 0.66355149 0.6635536  0.66355993\n"," 0.66355255 0.66355677 0.69280797 0.69908272 0.69950228 0.70001387\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.6635536  0.66354727 0.66354728 0.6635631  0.69199876 0.69199256\n"," 0.69197882 0.69198862 0.69319799 0.70797643 0.70772571 0.68163525\n"," 0.69859473 0.69290769 0.70894061 0.70568064 0.66359133 0.5878323\n"," 0.59925862 0.66621536 0.69247656 0.69166902 0.6913944  0.69225828\n"," 0.66355149 0.66355044 0.66355149 0.66355044 0.66355255 0.66355255\n"," 0.66354727 0.66355149 0.70000456 0.69132922 0.70891739 0.69207827\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66353884 0.66354094 0.66353989 0.66353989 0.6919847  0.69197869\n"," 0.69197973 0.6919956  0.69243586 0.69192934 0.69199031 0.69199475\n"," 0.69246197 0.69194016 0.69198796 0.69207279 0.6188797  0.6296101\n"," 0.72774391 0.67321832 0.69194585 0.69258668 0.69222056 0.69192211\n"," 0.66355255 0.66354411 0.66355149 0.66355044 0.66353778 0.66353884\n"," 0.66353778 0.66353884 0.69197676 0.69236769 0.69198053 0.69209846\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66353883 0.66353884 0.66353884 0.66354094 0.6919827  0.69197773\n"," 0.69198764 0.69199567 0.69197378 0.69199327 0.69207656 0.69193285\n"," 0.69195209 0.69198665 0.69247023 0.69197793 0.58343067 0.58664234\n"," 0.61308592 0.74164347 0.69274558 0.69197995 0.69228088 0.69198569\n"," 0.66355255 0.66354622 0.66355149 0.66355044 0.66353884 0.66353884\n"," 0.66353884 0.66353883 0.69195073 0.69208062 0.69198061 0.69230806\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66353778 0.66353778 0.66353778 0.66353778 0.69224204 0.69409394\n"," 0.69288786 0.69199065 0.69197465 0.69291012 0.6919869  0.69196774\n"," 0.69195774 0.6959882  0.69196064 0.69196671 0.62935756 0.16805071\n"," 0.69380746 0.53143383 0.69195203 0.69329974 0.69263691 0.69195774\n"," 0.66433101 0.66353778 0.6635768  0.66355149 0.66353778 0.66353778\n"," 0.66353778 0.66353778 0.69192914 0.69280664 0.69193903 0.69196374\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66353778 0.66353778 0.66353778 0.66353778 0.69214131 0.69409607\n"," 0.6929091  0.69199664 0.69196374 0.69267883 0.69195774 0.6919687\n"," 0.69193876 0.69517356 0.69198488 0.69197175 0.57180958 0.20007421\n"," 0.44341426 0.62680037 0.69199254 0.69324143 0.69204001 0.69197966\n"," 0.66434858 0.66353778 0.66357786 0.66355149 0.66353778 0.66353778\n"," 0.66353778 0.66353778 0.69194337 0.69280219 0.6919348  0.69196772\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66529382 0.66353778 0.66442388 0.66354306 0.6934656  0.33610054\n"," 0.69404    0.69229864 0.69289697 0.66352933 0.69290267 0.69197278\n"," 0.69289697 0.67119718 0.69289864 0.71242432 0.61799796 0.16805071\n"," 0.33610054 0.59634876 0.69291628 0.44252701 0.69381333 0.69231789\n"," 0.56664995 0.         0.50415125 0.66413065 0.66430871 0.66353778\n"," 0.66357488 0.66353778 0.69289392 0.65085592 0.68485439 0.69197584\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n"," 0.66528866 0.66353778 0.66417536 0.66383772 0.6928939  0.50415125\n"," 0.66558883 0.69226832 0.69286788 0.66354621 0.69293774 0.69197276\n"," 0.69290504 0.69648197 0.69292611 0.72024117 0.61160428 0.33610141\n"," 0.42408372 0.46975243 0.69299507 0.66353251 0.69385942 0.69196778\n"," 0.55037992 0.33610141 0.16805071 0.66472059 0.66430871 0.66353778\n"," 0.66357488 0.66353778 0.69262881 0.62311134 0.69313412 0.69202789\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan\n","        nan        nan        nan        nan        nan        nan]\n","  warnings.warn(\n"]}],"source":["params = {\n","    \"loss\": [\"hinge\", \"log_loss\", \"modified_huber\", \"squared_hinge\", \"perceptron\", \n","             \"squared_error\", \"huber\", \"epsilon_insensitive\", \"squared_epsilon_insensitive\"],\n","    \"penalty\": [\"l2\", \"l1\", \"elasticnet\", None], \n","    \"alpha\": [0.0001, 0.001, 0.01, 0.1],\n","    \"learning_rate\": [\"constant\", \"optimal\", \"invscaling\"],\n","    \"class_weight\": [\"balanced\", None],\n","}\n","\n","X_train, X_test, y_train, y_test = prepare_data_adasyn()\n","model = SGDClassifier(early_stopping=True, n_iter_no_change=5)\n","result_sgd_adasyn_1 = grid_search(model, params)\n","result_sgd_adasyn_1.to_csv(\"./result_sgd_adasyn_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"id":"fd2d52cc","metadata":{"id":"fd2d52cc"},"outputs":[],"source":[]},{"cell_type":"markdown","id":"a1111a24","metadata":{"id":"a1111a24"},"source":["## SVM\n","- 종류\n","    - SVC\n","    - LinearSVC\n","    - NuSVC\n","    - https://scikit-learn.org/stable/modules/svm.html#svm-classification\n","- SVC 하이퍼 파라미터\n","    - C: float, default=1.0\n","    - kernel: {‘linear’, ‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’} or callable, default=’rbf’\n","    - degree: int, default=3\n","    - gamma: {‘scale’, ‘auto’} or float, default=’scale’\n","    - coef0: float, default=0.0\n","    - shrinking: bool, default=True\n","    - probability: bool, default=False\n","    - tol: float, default=1e-3\n","    - cache_size: float, default=200\n","    - class_weight: dict or ‘balanced’, default=None\n","    - verbose: bool, default=False\n","    - max_iter: int, default=-1\n","    - decision_function_shape: {‘ovo’, ‘ovr’}, default=’ovr’\n","    - break_ties: bool, default=False\n","- NuSVC 하이퍼 파라미터\n","    - nu: float, default=0.5\n","    - kernel: {‘linear’, ‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’} or callable, default=’rbf’\n","    - degree: int, default=3\n","    - gamma: {‘scale’, ‘auto’} or float, default=’scale’\n","    - coef0: float, default=0.0\n","    - shrinking: bool, default=True\n","    - probability: bool, default=False\n","    - tol: float, default=1e-3\n","    - cache_size: float, default=200\n","    - class_weight: dict or ‘balanced’, default=None\n","    - verbose: bool, default=False\n","    - max_iter: int, default=-1\n","    - decision_function_shape: {‘ovo’, ‘ovr’}, default=’ovr’\n","    - break_ties: bool, default=False\n","- LinearSVC 하이퍼 파라미터\n","    - penalty: {‘l1’, ‘l2’}, default=’l2’\n","    - loss: {‘hinge’, ‘squared_hinge’}, default=’squared_hinge’\n","    - dual: bool, default=True\n","    - tol: float, default=1e-4\n","    - C: float, default=1.0\n","    - multi_class: {‘ovr’, ‘crammer_singer’}, default=’ovr’\n","    - fit_intercept: bool, default=True\n","    - intercept_scaling: float, default=1.0\n","    - class_weight: dict or ‘balanced’, default=None\n","    - verbose: int, default=0\n","    - random_state: int, RandomState instance or None, default=None\n","    - max_iter: int, default=1000"]},{"cell_type":"code","execution_count":null,"id":"ef3a2eeb","metadata":{"ExecuteTime":{"end_time":"2022-12-23T08:33:17.108264Z","start_time":"2022-12-23T08:31:53.834727Z"},"id":"ef3a2eeb"},"outputs":[],"source":["from sklearn.svm import SVC, LinearSVC, NuSVC\n","\n","model = SVC(max_iter=100, probability=True)\n","model.fit(X_train, y_train)\n","\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"b6e4496d","metadata":{"ExecuteTime":{"end_time":"2022-12-23T08:48:16.174646Z","start_time":"2022-12-23T08:48:03.295296Z"},"id":"b6e4496d"},"outputs":[],"source":["model = LinearSVC(max_iter=100)\n","model.fit(X_train, y_train)\n","\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"a57a99f6","metadata":{"ExecuteTime":{"start_time":"2022-12-23T08:48:34.298Z"},"id":"a57a99f6"},"outputs":[],"source":["model = NuSVC(max_iter=100, probability=True)\n","model.fit(X_train, y_train)\n","\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"code","execution_count":null,"id":"8934e312","metadata":{"ExecuteTime":{"end_time":"2022-12-26T10:44:04.547744Z","start_time":"2022-12-26T10:44:00.944028Z"},"id":"8934e312","outputId":"87e2c031-c8b2-49b7-98c2-3ec6c3b2caaf"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286746\n","1.0    286746\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71678\n","1.0     4052\n","Name: HEARTDISEASE, dtype: int64\n","Fitting 3 folds for each of 60 candidates, totalling 180 fits\n","[CV] END ..........C=0, class_weight=balanced, kernel=linear; total time=   0.1s\n","[CV] END ..........C=0, class_weight=balanced, kernel=linear; total time=   0.0s\n","[CV] END ..........C=0, class_weight=balanced, kernel=linear; total time=   0.0s\n","[CV] END ............C=0, class_weight=balanced, kernel=poly; total time=   0.0s\n","[CV] END ............C=0, class_weight=balanced, kernel=poly; total time=   0.0s\n","[CV] END ............C=0, class_weight=balanced, kernel=poly; total time=   0.0s\n","[CV] END .............C=0, class_weight=balanced, kernel=rbf; total time=   0.0s\n","[CV] END .............C=0, class_weight=balanced, kernel=rbf; total time=   0.0s\n","[CV] END .............C=0, class_weight=balanced, kernel=rbf; total time=   0.0s\n","[CV] END .........C=0, class_weight=balanced, kernel=sigmoid; total time=   0.0s\n","[CV] END .........C=0, class_weight=balanced, kernel=sigmoid; total time=   0.0s\n","[CV] END .........C=0, class_weight=balanced, kernel=sigmoid; total time=   0.0s\n"]},{"ename":"ValueError","evalue":"X should be a square kernel matrix","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)","Cell \u001b[1;32mIn [20], line 10\u001b[0m\n\u001b[0;32m      8\u001b[0m X_train, X_test, y_train, y_test \u001b[38;5;241m=\u001b[39m prepare_data_smote()\n\u001b[0;32m      9\u001b[0m model \u001b[38;5;241m=\u001b[39m SVC(probability\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, max_iter\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m100\u001b[39m)\n\u001b[1;32m---> 10\u001b[0m model_list, result \u001b[38;5;241m=\u001b[39m \u001b[43mgrid_search_eval\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmodel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mparams\u001b[49m\u001b[43m)\u001b[49m\n","Cell \u001b[1;32mIn [4], line 10\u001b[0m, in \u001b[0;36mgrid_search_eval\u001b[1;34m(model, params)\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mgrid_search_eval\u001b[39m(model, params):\n\u001b[0;32m      8\u001b[0m     gs \u001b[38;5;241m=\u001b[39m GridSearchCV(estimator\u001b[38;5;241m=\u001b[39mmodel, param_grid\u001b[38;5;241m=\u001b[39mparams, scoring\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124maccuracy\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mf1\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrecall\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mprecision\u001b[39m\u001b[38;5;124m\"\u001b[39m], \n\u001b[0;32m      9\u001b[0m                       refit\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m, cv\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2\u001b[39m)\n\u001b[1;32m---> 10\u001b[0m     \u001b[43mgs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_train\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     11\u001b[0m     result \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mDataFrame(gs\u001b[38;5;241m.\u001b[39mcv_results_)\n\u001b[0;32m     13\u001b[0m     best_results \u001b[38;5;241m=\u001b[39m result[(result[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrank_test_accuracy\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m) \u001b[38;5;241m|\u001b[39m (result[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrank_test_f1\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m) \u001b[38;5;241m|\u001b[39m \n\u001b[0;32m     14\u001b[0m                           (result[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrank_test_recall\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m) \u001b[38;5;241m|\u001b[39m (result[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrank_test_precision\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m)]\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:875\u001b[0m, in \u001b[0;36mBaseSearchCV.fit\u001b[1;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[0;32m    869\u001b[0m     results \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_format_results(\n\u001b[0;32m    870\u001b[0m         all_candidate_params, n_splits, all_out, all_more_results\n\u001b[0;32m    871\u001b[0m     )\n\u001b[0;32m    873\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m results\n\u001b[1;32m--> 875\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_run_search\u001b[49m\u001b[43m(\u001b[49m\u001b[43mevaluate_candidates\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    877\u001b[0m \u001b[38;5;66;03m# multimetric is determined here because in the case of a callable\u001b[39;00m\n\u001b[0;32m    878\u001b[0m \u001b[38;5;66;03m# self.scoring the return type is only known after calling\u001b[39;00m\n\u001b[0;32m    879\u001b[0m first_test_score \u001b[38;5;241m=\u001b[39m all_out[\u001b[38;5;241m0\u001b[39m][\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtest_scores\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:1379\u001b[0m, in \u001b[0;36mGridSearchCV._run_search\u001b[1;34m(self, evaluate_candidates)\u001b[0m\n\u001b[0;32m   1377\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_run_search\u001b[39m(\u001b[38;5;28mself\u001b[39m, evaluate_candidates):\n\u001b[0;32m   1378\u001b[0m     \u001b[38;5;124;03m\"\"\"Search all candidates in param_grid\"\"\"\u001b[39;00m\n\u001b[1;32m-> 1379\u001b[0m     \u001b[43mevaluate_candidates\u001b[49m\u001b[43m(\u001b[49m\u001b[43mParameterGrid\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mparam_grid\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_search.py:822\u001b[0m, in \u001b[0;36mBaseSearchCV.fit.<locals>.evaluate_candidates\u001b[1;34m(candidate_params, cv, more_results)\u001b[0m\n\u001b[0;32m    814\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mverbose \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m    815\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\n\u001b[0;32m    816\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFitting \u001b[39m\u001b[38;5;132;01m{0}\u001b[39;00m\u001b[38;5;124m folds for each of \u001b[39m\u001b[38;5;132;01m{1}\u001b[39;00m\u001b[38;5;124m candidates,\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    817\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m totalling \u001b[39m\u001b[38;5;132;01m{2}\u001b[39;00m\u001b[38;5;124m fits\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(\n\u001b[0;32m    818\u001b[0m             n_splits, n_candidates, n_candidates \u001b[38;5;241m*\u001b[39m n_splits\n\u001b[0;32m    819\u001b[0m         )\n\u001b[0;32m    820\u001b[0m     )\n\u001b[1;32m--> 822\u001b[0m out \u001b[38;5;241m=\u001b[39m \u001b[43mparallel\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    823\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdelayed\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_fit_and_score\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    824\u001b[0m \u001b[43m        \u001b[49m\u001b[43mclone\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbase_estimator\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    825\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    826\u001b[0m \u001b[43m        \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    827\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtrain\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    828\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtest\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtest\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    829\u001b[0m \u001b[43m        \u001b[49m\u001b[43mparameters\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mparameters\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    830\u001b[0m \u001b[43m        \u001b[49m\u001b[43msplit_progress\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43msplit_idx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn_splits\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    831\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcandidate_progress\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mcand_idx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn_candidates\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    832\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mfit_and_score_kwargs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    833\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    834\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m(\u001b[49m\u001b[43mcand_idx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mparameters\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m(\u001b[49m\u001b[43msplit_idx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m(\u001b[49m\u001b[43mtrain\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtest\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mproduct\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    835\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;28;43menumerate\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mcandidate_params\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43menumerate\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mcv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msplit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroups\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    836\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    837\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    839\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(out) \u001b[38;5;241m<\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m    840\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    841\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNo fits were performed. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    842\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWas the CV iterator empty? \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    843\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mWere there no candidates?\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    844\u001b[0m     )\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\parallel.py:1088\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[1;34m(self, iterable)\u001b[0m\n\u001b[0;32m   1085\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdispatch_one_batch(iterator):\n\u001b[0;32m   1086\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_iterating \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_original_iterator \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1088\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdispatch_one_batch\u001b[49m\u001b[43m(\u001b[49m\u001b[43miterator\u001b[49m\u001b[43m)\u001b[49m:\n\u001b[0;32m   1089\u001b[0m     \u001b[38;5;28;01mpass\u001b[39;00m\n\u001b[0;32m   1091\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m pre_dispatch \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mall\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mor\u001b[39;00m n_jobs \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   1092\u001b[0m     \u001b[38;5;66;03m# The iterable was consumed all at once by the above for loop.\u001b[39;00m\n\u001b[0;32m   1093\u001b[0m     \u001b[38;5;66;03m# No need to wait for async callbacks to trigger to\u001b[39;00m\n\u001b[0;32m   1094\u001b[0m     \u001b[38;5;66;03m# consumption.\u001b[39;00m\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\parallel.py:901\u001b[0m, in \u001b[0;36mParallel.dispatch_one_batch\u001b[1;34m(self, iterator)\u001b[0m\n\u001b[0;32m    899\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m    900\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 901\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_dispatch\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtasks\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    902\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\parallel.py:819\u001b[0m, in \u001b[0;36mParallel._dispatch\u001b[1;34m(self, batch)\u001b[0m\n\u001b[0;32m    817\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_lock:\n\u001b[0;32m    818\u001b[0m     job_idx \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_jobs)\n\u001b[1;32m--> 819\u001b[0m     job \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_backend\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply_async\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbatch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcb\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    820\u001b[0m     \u001b[38;5;66;03m# A job can complete so quickly than its callback is\u001b[39;00m\n\u001b[0;32m    821\u001b[0m     \u001b[38;5;66;03m# called before we get here, causing self._jobs to\u001b[39;00m\n\u001b[0;32m    822\u001b[0m     \u001b[38;5;66;03m# grow. To ensure correct results ordering, .insert is\u001b[39;00m\n\u001b[0;32m    823\u001b[0m     \u001b[38;5;66;03m# used (rather than .append) in the following line\u001b[39;00m\n\u001b[0;32m    824\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_jobs\u001b[38;5;241m.\u001b[39minsert(job_idx, job)\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\_parallel_backends.py:208\u001b[0m, in \u001b[0;36mSequentialBackend.apply_async\u001b[1;34m(self, func, callback)\u001b[0m\n\u001b[0;32m    206\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mapply_async\u001b[39m(\u001b[38;5;28mself\u001b[39m, func, callback\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[0;32m    207\u001b[0m     \u001b[38;5;124;03m\"\"\"Schedule a func to be run\"\"\"\u001b[39;00m\n\u001b[1;32m--> 208\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mImmediateResult\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    209\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m callback:\n\u001b[0;32m    210\u001b[0m         callback(result)\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\_parallel_backends.py:597\u001b[0m, in \u001b[0;36mImmediateResult.__init__\u001b[1;34m(self, batch)\u001b[0m\n\u001b[0;32m    594\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m, batch):\n\u001b[0;32m    595\u001b[0m     \u001b[38;5;66;03m# Don't delay the application, to avoid keeping the input\u001b[39;00m\n\u001b[0;32m    596\u001b[0m     \u001b[38;5;66;03m# arguments in memory\u001b[39;00m\n\u001b[1;32m--> 597\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mresults \u001b[38;5;241m=\u001b[39m \u001b[43mbatch\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\parallel.py:288\u001b[0m, in \u001b[0;36mBatchedCalls.__call__\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    284\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[0;32m    285\u001b[0m     \u001b[38;5;66;03m# Set the default nested backend to self._backend but do not set the\u001b[39;00m\n\u001b[0;32m    286\u001b[0m     \u001b[38;5;66;03m# change the default number of processes to -1\u001b[39;00m\n\u001b[0;32m    287\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m parallel_backend(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backend, n_jobs\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_n_jobs):\n\u001b[1;32m--> 288\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m [func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    289\u001b[0m                 \u001b[38;5;28;01mfor\u001b[39;00m func, args, kwargs \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mitems]\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\joblib\\parallel.py:288\u001b[0m, in \u001b[0;36m<listcomp>\u001b[1;34m(.0)\u001b[0m\n\u001b[0;32m    284\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[0;32m    285\u001b[0m     \u001b[38;5;66;03m# Set the default nested backend to self._backend but do not set the\u001b[39;00m\n\u001b[0;32m    286\u001b[0m     \u001b[38;5;66;03m# change the default number of processes to -1\u001b[39;00m\n\u001b[0;32m    287\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m parallel_backend(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backend, n_jobs\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_n_jobs):\n\u001b[1;32m--> 288\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m [func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    289\u001b[0m                 \u001b[38;5;28;01mfor\u001b[39;00m func, args, kwargs \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mitems]\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\utils\\fixes.py:117\u001b[0m, in \u001b[0;36m_FuncWrapper.__call__\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m    115\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m    116\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m config_context(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mconfig):\n\u001b[1;32m--> 117\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfunction(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:678\u001b[0m, in \u001b[0;36m_fit_and_score\u001b[1;34m(estimator, X, y, scorer, train, test, verbose, parameters, fit_params, return_train_score, return_parameters, return_n_test_samples, return_times, return_estimator, split_progress, candidate_progress, error_score)\u001b[0m\n\u001b[0;32m    674\u001b[0m     estimator \u001b[38;5;241m=\u001b[39m estimator\u001b[38;5;241m.\u001b[39mset_params(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcloned_parameters)\n\u001b[0;32m    676\u001b[0m start_time \u001b[38;5;241m=\u001b[39m time\u001b[38;5;241m.\u001b[39mtime()\n\u001b[1;32m--> 678\u001b[0m X_train, y_train \u001b[38;5;241m=\u001b[39m \u001b[43m_safe_split\u001b[49m\u001b[43m(\u001b[49m\u001b[43mestimator\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrain\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    679\u001b[0m X_test, y_test \u001b[38;5;241m=\u001b[39m _safe_split(estimator, X, y, test, train)\n\u001b[0;32m    681\u001b[0m result \u001b[38;5;241m=\u001b[39m {}\n","File \u001b[1;32mD:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\utils\\metaestimators.py:302\u001b[0m, in \u001b[0;36m_safe_split\u001b[1;34m(estimator, X, y, indices, train_indices)\u001b[0m\n\u001b[0;32m    300\u001b[0m \u001b[38;5;66;03m# X is a precomputed square kernel matrix\u001b[39;00m\n\u001b[0;32m    301\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m X\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m0\u001b[39m] \u001b[38;5;241m!=\u001b[39m X\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m]:\n\u001b[1;32m--> 302\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mX should be a square kernel matrix\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    303\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m train_indices \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m    304\u001b[0m     X_subset \u001b[38;5;241m=\u001b[39m X[np\u001b[38;5;241m.\u001b[39mix_(indices, indices)]\n","\u001b[1;31mValueError\u001b[0m: X should be a square kernel matrix"]}],"source":["params = {\n","    \"C\": [0, .01, .1, 1, 10, 100],\n","    \"kernel\": [\"linear\", \"poly\", \"rbf\", \"sigmoid\", \"precomputed\"],\n","    \"class_weight\": [\"balanced\", None],\n","}\n","# probability=True\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","model = SVC(probability=True, max_iter=100)\n","model_list, result = grid_search_eval(model, params)"]},{"cell_type":"code","execution_count":null,"id":"ebb8274b","metadata":{"ExecuteTime":{"end_time":"2022-12-26T10:44:07.777958Z","start_time":"2022-12-26T10:44:07.273418Z"},"id":"ebb8274b","outputId":"b33a40d6-5351-406f-c9d1-e4bdd2ec9c41"},"outputs":[{"name":"stdout","output_type":"stream","text":["             mean_test_precision  rank_test_precision\n","param_alpha                                          \n","0.0001                  0.227514           445.393519\n","0.0010                  0.226103           546.504630\n","0.0100                  0.222609           390.791667\n","0.1000                  0.209701           346.351852\n","                    mean_test_precision  rank_test_precision\n","param_class_weight                                          \n","0                              0.221449           407.719907\n","balanced                       0.221514           456.800926\n","                     mean_test_precision  rank_test_precision\n","param_learning_rate                                          \n","constant                        0.000000           579.145833\n","invscaling                      0.000000           573.854167\n","optimal                         0.664445           143.781250\n","                             mean_test_precision  rank_test_precision\n","param_loss                                                           \n","epsilon_insensitive                     0.219379           451.750000\n","hinge                                   0.220137           454.708333\n","huber                                   0.200050           446.947917\n","log_loss                                0.226095           420.541667\n","modified_huber                          0.231131           418.697917\n","perceptron                              0.203599           451.114583\n","squared_epsilon_insensitive             0.230457           420.427083\n","squared_error                           0.229665           409.552083\n","squared_hinge                           0.232824           416.604167\n","               mean_test_precision  rank_test_precision\n","param_penalty                                          \n","0                         0.224913           432.009259\n","elasticnet                0.221248           428.527778\n","l1                        0.215297           438.189815\n","l2                        0.224468           430.314815\n","SGDClassifier(class_weight='balanced', early_stopping=True, loss='perceptron',\n","              penalty='l1')\n","SGDClassifier(class_weight='balanced', early_stopping=True,\n","              loss='squared_error')\n","SGDClassifier(early_stopping=True, loss='log_loss', penalty=None)\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["SGDClassifier(early_stopping=True, loss='squared_error')\n","SGDClassifier(alpha=0.001, early_stopping=True, loss='log_loss',\n","              penalty='elasticnet')\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["SGDClassifier(alpha=0.1, class_weight='balanced', early_stopping=True,\n","              loss='squared_hinge', penalty=None)\n","SGDClassifier(alpha=0.1, early_stopping=True, loss='log_loss', penalty=None)\n"]},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAArMAAAINCAYAAAAtJ/ceAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAACH1ElEQVR4nOzdd3xT9f7H8VeSpnsyWqCUDQKyQZA9RFAU94QLuBdcuHJdKIh7D/TnwL0VVHB7WRUUBAHZe0PZZZXSnSbn90dooLaBBtqeJn0/H4/zSHJycvLJt6G+/fZ7vl+LYRgGIiIiIiJ+yGp2ASIiIiIiZ0phVkRERET8lsKsiIiIiPgthVkRERER8VsKsyIiIiLitxRmRURERMRvKcyKiIiIiN9SmBURERERvxVkdgHlzeVysWfPHqKiorBYLGaXIyIiIiL/YBgGx44do1atWlitp+57rXRhds+ePSQlJZldhoiIiIicxs6dO6ldu/Ypj6l0YTYqKgqA999/nyuuuAK73W5yRRWLw+FgxowZ9OvXT23zD2ob79Q23qltvFPbeKe28U5t410gtU16ejpJSUme3HYqlS7MFgwtCA8PJzo62u9/2KXN4XCobbxQ23intvFObeOd2sY7tY13ahvvArFtSjIkVBeAiYiIiIjfUpgVEREREb+lMCsiIiIifqvSjZkVERGRwOJ0OnE4HGaXYTqHw0FQUBA5OTk4nU6zyzktu92OzWY76/MozIqIiIjfysjIYNeuXRiGYXYppjMMgxo1arBz506/mEvfYrFQu3ZtIiMjz+o8CrMiIiLil5xOJ7t27SI8PJzq1av7RYArSy6Xi4yMDCIjI0+70IDZDMPgwIED7Nq1i8aNG59VD63CrIiIiPglh8OBYRhUr16dsLAws8sxncvlIi8vj9DQ0AofZgGqV6/O9u3bcTgcZxVmK/4nFRERETmFyt4j669K6+emMCsiIiIifkthVkRERCTAzZkzB4vFQlpaWqkeWxEozIqIiIgEuC5durB3715iYmJK9diKQGFWREREpALLy8s763MEBwdTo0aNEo1T9eXYikBhVkRERKQc9erVixEjRjBixAhiYmKoVq0a48aN88yVW69ePZ588kmGDh1KdHQ0d9xxBwDz5s2je/fuhIWFkZSUxMiRI8nMzPScNzc3l/Hjx1O3bl1CQkJo1KgRH3zwAVB06MCOHTsYOHAgcXFxREREcO655/Lrr78WeyzAlClTOPfccwkJCaFevXq8/PLLhT5TvXr1eOaZZ7jllluIioqiTp06vPvuu2XVhIWYGmb/+OMPBg4cSK1atbBYLHz//fenfc2cOXNo166d54f08ccfl3mdIiIi4j+y8vK9bjkOZ6kfeyY++eQTgoKCWLRoEa+99hqvvPIK77//vuf5l156idatW7Ns2TLGjRvHli1buOiii7j66qtZuXIlkydPZt68eYwYMcLzmmHDhjFlyhQmTJjAunXreOedd7wuSDB8+HByc3P5448/WLVqFc8//7zXY5csWcJ1113HDTfcwKpVq3jssccYN25ckQz28ssv06FDB5YtW8Y999zD3XffzYYNG86ofXxh6jyzmZmZtG7dmltuuYWrrrrqtMdv27aNSy65hLvuuosvvviC5ORkbrvtNmrWrEn//v3LoWIRERGp6Jo/Ot3rc73Pqc5HN3f0PG7/5CyyHcUv/dqpfhUm39nZ87jb87M5nFn0T/7bn7vE5xqTkpJ49dVXsVgsnHPOOaxatYpXX32V22+/HYA+ffrw3//+13P8bbfdxuDBg/nPf/4DQOPGjXn99dfp2bMnb7/9NikpKXzzzTd89913XHbZZVitVho0aOD1/VNSUrj66qtp2bIlwCmPfeWVV7jgggsYN24cAE2aNGHt2rW8+OKL3HTTTZ7jBgwYwD333APAgw8+yKuvvsrs2bM555xzfG4fX5gaZi+++GIuvvjiEh8/ceJE6tev7+nabtasGfPmzePVV19VmBURERG/cf755xcak9q5c2defvllnE53sO7QoUOh41esWMHKlSv54osvPPsMw8DlcrFt2zZWrVqFzWaja9euJXr/kSNHcvfddzNjxgz69u3L1VdfTatWrYo9dt26dVx++eWF9nXt2pUJEybgdDo9Cx6c/HqLxUKNGjVITU0tUT1nw69WAFuwYAF9+/YttK9///6e/0upkPYshyPbIKElVGkAfrAih4iIiD9b+4T3Di7rPy5qWjKur5cjix4778HeZ1eYDyIiIgo9zsjI4M4772TkyJFFjq1Tpw6bN2/26fy33XYb/fv355dffmHGjBk8++yzvPzyy/z73/8+45rtdnuhxxaLBZfLdcbnKym/CrP79u0jISGh0L6EhATS09PJzs4udim73NxccnNzPY/T09M99x0OR9kVe5x12ZfYFr8DgGGPwIhvhhF/LiS0wEhogRHfDIKLH6NihoI2KY+28TdqG+/UNt6pbbxT23intvHu5LZxOp2e3smTQ1No0Kk7jkr72DMJbAsXLiz0ugULFtC4cWNPb23B5yrQtm1b1q5d63U4wLnnnovL5eLPP/9k4MCBRWoqeHxyWyUmJnLHHXdwxx138PDDD/Pee+8xfPjwIsc2bdqUefPmFTrnvHnzaNKkSaHA+s+ave07uSbDMIpdztaX775fhdkz8eyzz/L4448X+9zMmTPL/P0bpqaTGN6A6Oyd2ByZWHb/Dbv/9jxvYCEzJJ6jYXVJD6vD0eNbjj0OTJwSozzaxl+pbbxT23intvFObeOd2sa7mTNnEhQURI0aNcjIyCiV6avKS35+PikpKfz73//mpptuYsWKFbzxxhs8+eSTpKen43K5yMnJKdQBd88999CvXz/uvPNOhg4dSnh4OBs2bGD27Nm8+OKLVKlShRtvvJERI0aQmZlJixYt2LlzJwcOHODKK68kKysLgGPHjmG1WhkzZgx9+/alUaNGpKWlkZycTKNGjUhPTy9y7J133kmfPn0YN24cV155JYsXL+bNN9/kpZde8tRYXM1Op5Pc3NxC+06Wl5dHdnY2f/zxB/n5hS+kK6ihJPwqzNaoUYP9+/cX2rd//36io6OL7ZUFGDNmDKNHj/Y8Tk9PJykpCYALL7ywSJd46RsAgMuVj+vwViz7V2HZvwbL/tXuLTOVyNz9RObuJzFtkedVRljc8Z7bczESWmIknAvVmoAtuEyrdTgczJw5s5zaxr+obbxT23intvFObeOd2sa7k9vG6XSyc+dOIiMjCQ0NNbu0EgsKCmLIkCE4nU769u2LzWZj5MiRjBw5EovFgtVqJTQ0lOjoaM9runTpwuzZsxk7diwDBgzAMAwaNmzIdddd5znu3Xff5YEHHuD+++/n0KFD1KlTh4ceeojo6GjCw8MBiIqKIjo6GpvNxoMPPsiuXbuIjo6mf//+vPLKK8Ue2717dyZNmsRjjz3Giy++SM2aNXn88ce56667PPUVV7PNZiMkJKTQvpPl5OQQFhZGjx49ivz8vAXgYtuzxEdWAJ07d/bMgVZg5syZdO7c2csrICQkhJCQkGKfs9vt5fhLwg41z3VvJ8tIhX2rYP9q9+2+1XBwI5bsI1i2z4Xtc08ca7VD9aZQowXUaAkJx2/Dq5R+teXaNv5FbeOd2sY7tY13ahvv1Dbe2e12rFarJ/xZ/eyalODgYCZMmMDEiROLPLd9+/ZiX9OpU6dT9taHhYXx9NNP83//939F2qNPnz6eeWwB3njjDa/n+eexANdeey3XXnut19cUV/Py5cu9Hg94fn7Ffc99+d6bGmYzMjIKDVjetm0by5cvp0qVKtSpU4cxY8awe/duPv30UwDuuusu3njjDR544AFuueUWfvvtN77++mt++eUXsz7C2YuMh0YXuLcCjhw4sM4dbE8OurnpsH+Ve1vx1YnjoxNPBNsaLaBGK4irr4vNREREJOCZGmb//vtvevc+cWVgwXCAYcOG8fHHH7N3715SUlI8z9evX59ffvmFe++9l9dee43atWvz/vvvB960XPZQqNXWvRUwDEhLOakH9/iWtgPSd7u3TSfNq2ePgIRz3eE24XjATWgOwRFF309ERETET5kaZnv16lWkG/tkxa3u1atXL5YtW1aGVVVQFgvE1XVvTU+anDnnKOxf4+7F3X884KauA0cm7Frk3k6cBKo2PKkX9/hQhehapl5sJiIiUpnMmTPH7BICil+NmZVihMZA3S7urYAzHw5tLtyLu381ZOx37z+0GdZ+f+L4sCqe4QmWas2IzjoCzjzQOC0RERGp4BRmA5EtCOKbureW15zYX3CxmWccrvtiM7IPw7Y/YNsfBAG9AeOFx49fbNay8AVnZXCxmYiIiMiZUpitTE55sZl7JgXX3hU4d6/A7so+6WKzk84RXfukcbjHhyroYjMRERExicJsZfePi82cDge//vILA7q2wH5wfeGhCmk7IH2Xe9s47aRzFFxsdrwXN6GlLjYTERGRcqEwK0VZLBBbF6o3gmaXntjvudjspKEK+9d6v9isVlu46j2o1qjcP4KIiIhUDgqzUnKnuths3/EhCQVz42amwp6l8PElcNPPUK2xeXWLiIhIwFKYlbNz8sVmnLQyyJEd8NUNkLrWHWiH/QTVzzGtTBERkcrsscce4/vvv/esynXTTTeRlpbG999/b2pdpUFX7UjZiKvrDrAJLdxTgn18KaSuN7sqERERCTAKs1J2IqrB0B/dF4Zlprp7aPevNbsqERGRCiUvL8/sEvyawqyUrYiqxwNtK8g6CJ9c6h5TKyIiUkn16tWLESNG8J///Idq1arRv39/Vq9ezcUXX0xkZCQJCQkMGTKEgwcPel7jcrl44YUXaNSoESEhIdSpU4enn37a8/yDDz5I06ZNqVWrFo0aNWLcuHE4HA4zPl6505hZKXvhVWDYj/DpFbB3OXwy0B1wa7YyuzIREQkkhgGOLHPe2x7u09Lwn3zyCXfffTd//vknaWlp9OnTh9tuu41XX32V7OxsHnzwQa677jp+++03AMaMGcN7773Hq6++Srdu3di7dy/r158YvhcVFcWHH35IdHQ027Zt48477yQqKooHHnig1D9qRaMwK+UjLA6G/gCfXwW7lxwPtD9ArTZmVyYiIoHCkQXP1DLnvR/e49P86o0bN+aFF14A4KmnnqJt27Y888wznuc//PBDkpKS2LhxIzVr1uS1117jjTfeYNiwYQA0bNiQbt26eY4fO3YsLpeL9PR0WrRowaZNm5g0aZLCrEipCouFId/B51fDrsXw6WUw5HtIbGd2ZSIiIuWqffv2nvsrVqxg9uzZREZGFjluy5YtpKWlkZubywUXXFDk+QKTJ0/m9ddfZ/PmzWRmZpKfn090dHSZ1F7RKMxK+QqNgX9NhS+ugZ0L3UMPhnwHtduf9qUiIiKnZA9395Ca9d4+iIg40YubkZHBwIEDef7554scV7NmTbZu3XrKcy1YsIDBgwfz2GOP0bVrV2rVqsXXX3/Nyy+/7FNN/kphVspfaDT8awp8cS2kLIDPrnAH3KTzzK5MRET8mcXil0upt2vXjilTplCvXj2CgopGs8aNGxMWFkZycjK33XZbkefnz59P3bp1efjhh0lPTyc6OpodO3aUR+kVgmYzEHOERMHgb6FuV8hNh8+uhJSFZlclIiJS7oYPH87hw4e58cYbWbx4MVu2bGH69OncfPPNOJ1OQkNDefDBB3nggQf49NNP2bJlC3/99RcffPAB4A67KSkpTJo0iW3btvF///d/fPfddyZ/qvKjMCvmCYmEwd9Ave6Qd8x9cdiOBWZXJSIiUq5q1arFn3/+idPppF+/frRs2ZL//Oc/xMbGYrW6o9q4ceP473//y6OPPkqzZs24/vrrSU1NBeCyyy7j3nvvZeTIkfTo0YP58+czbtw4Mz9SudIwAzFXcAQM+hq+uh62/eG+OGzwN1Cvq9mViYiIlIk5c+YU2de4cWOmTp3q9TVWq5VHHnmERx55pNjnX3jhBZ577jnPMAOr1cp//vMfz/OPPfYYjz32mOfxxx9/fIbVVzzqmRXzBYfDjZOhQS9wZLovDts21+yqRERExA8ozErFEBwON06Chn3c8wR+cS2sngp5Jk1+LSIiIn5BYVYqDnsY3PAVNLoQ8rPh25vhuTrwQX9Y9B7kHDW7QhEREalgFGalYrGHwg1fQKe7IToRXA7Y+Rf8eh+83BR+GOFeQcwwzK5UREREKgCFWal4gkLg4ufg3jUwcjn0fxaqneMefrDsM3ivD0y9XYFWREREFGalArNYoEp96HwPDF8IN/8PWl0P1iBY9Q1snG52hSIiUgEY6tzwS6X1c1OYFf9gsUDdLnDVu9B5uHvfzHHgdJhbl4iImMZmswGQl5dnciVyJgp+bgU/xzOleWbF/3T/Lyz7HA5uhCUfQ8fbza5IRERMEBQURHh4OAcOHMBut3sWGKisXC4XeXl55OTkVPi2cLlcHDhwgPDw8GKX8PWFwqz4n9AY6DXGfVHYnGeh1XXufSIiUqlYLBZq1qzJtm3b2LFjh9nlmM4wDLKzswkLC8NisZhdzmlZrVbq1Klz1rUqzIp/an8TLHwHDm2Cea9C38fMrkhEREwQHBxM48aNNdQAcDgc/PHHH/To0QO73W52OacVHBxcKj3ICrPin2x2uPAJmHQjLHgLOtwCsXXMrkpERExgtVoJDQ01uwzT2Ww28vPzCQ0N9YswW1oq9oAKkVM552Ko1x2cuZD8hNnViIiIiAkUZsV/WSzQ7ynA4p6qa9cSsysSERGRcqYwK/6tVhtofYP7/oxHtJCCiIhIJaMwK/6vzzgICoOUBbDuJ7OrERERkXKkMCv+LyYRuoxw3581HvJ1RauIiEhloTArgaHrKIiIh8Nb4e8PzK5GREREyonCrASGkCjo/bD7/u/PQ/YRc+sRERGRcqF5ZiVwtB3iXkjhwDp4pydEJoA9zL0FhRZzGw720KLP2cPcY3DtoYVvLXYsRr7Zn1JEREROojArgcMWBBc9A59dCWk73FspsgOXAcYK24nwG14FompAVM2it5EJ7vv2sFKtQ0RERE5QmJXA0rAP3PMXpO8GRw44siE/232/4NaRBfkFzx2/Pfl+oX0nvfY4i+GEvAz3lnUQDm48dU2hsf8IuwlFw29kAgSFlG3biIiIBCCFWQk88c3cW2kyDBw5Gcz89Ucu7NUdOw532M06BMf2wbG97tuMfYUf5+dATpp7O7Du1O8RXhUia/yjh/f4/ZhEqNnGvVCEiIiIeCjMipSExQJBoTiCIiG6JpRkzWvDcIfYY/tPhFtvodeZ5w7GWYcgdU3x52t1PVz1bql+LBEREX+nMCtSViwWCItzb/FNvR9nGO7ZF04Ot/8MvbuXwsrJ0PRSaH5Z+X0GERGRCk5hVsRsFov7QrLwKpDQvPhjkp+AuS/Dr/dD/R4QFluuJYqIiFRUmmdWxB/0eACqNnL31M4ab3Y1IiIiFYbCrIg/sIfCwNfc95d8DNvnmVqOiIhIRaEwK+Iv6nWD9je57/840j1lmIiISCWnMCviT/o+7p6+6/AW+OMFs6sRERExncKsiD8Ji4VLXnLf//M12LfK1HJERETMpjAr4m+aDXRvrnz3cAOX0+yKRERETKMwK+KPLn4RQmJgz1JY+I7Z1YiIiJhGYVbEH0XXhH5PuO//9iQc2WFuPSIiIiZRmBXxV22HQt1u4MiCn+91ryQmIiJSySjMivgrq9U996wtBLYkw8qvza5IRESk3CnMivizao2g14Pu+9MegsyD5tYjIiJSzhRmRfxdl5GQ0AKyD8O0MWZXIyIiUq4UZkX8nc0Ol70OFius+ho2zTS7IhERkXKjMCsSCBLbw/n3uO//fC/kZphbj4iISDlRmBUJFL0fhtg6cHQn/PaU2dWIiIiUC4VZkUARHAGXTnDfXzgRdv1tajkiIiLlQWFWJJA0ugBa3wgY8OO/IT/P7IpERETKlMKsSKDp/wyEV4PUtTD7KXBkm12RiIhImVGYFQk04VXg4ufd9/98DZ6vB59dBcs+B5fT1NJERERKm8KsSCBqcTX0HgvRtSE/x71C2A/DYWJ32DLb7OpERERKjcKsSCCyWKDn/XDvarhnIfQZB6GxkLoGPrsCvrweDm4yu0oREZGzpjArEsgsFohvCj3ug5HLoOOdYLHBxmnw1vmQ/AQYhtlVioiInDGFWZHKIrwKDHgB7vkLGvcHVz7MfRl2zDe7MhERkTOmMCtS2VRvAoO/hjaD3Y+Xf2FuPSIiImdBYVaksmo3zH275jvIPWZuLSIiImdIYVakskrqCFUbgyPLHWhFRET8kMKsSGVlsUDbf7nvL/vc3FpERETOkMKsSGXW+gb37AY7F8KBjWZXIyIi4jOFWZHKLKoGNO7nvr9cvbMiIuJ/FGZFKru2BbMafAVOh7m1iIiI+EhhVqSya9wfwqtBZipsnmV2NSIiIj4xPcy++eab1KtXj9DQUDp16sSiRYtOefyECRM455xzCAsLIykpiXvvvZecnJxyqlYkAAUFu8fOgi4EExERv2NqmJ08eTKjR49m/PjxLF26lNatW9O/f39SU1OLPf7LL7/koYceYvz48axbt44PPviAyZMn8/DDD5dz5SIBpmABhY3TIOOAubWIiIj4wNQw+8orr3D77bdz880307x5cyZOnEh4eDgffvhhscfPnz+frl27MmjQIOrVq0e/fv248cYbT9ubKyKnkdAcEtu7l7hdOdnsakREREosyKw3zsvLY8mSJYwZM8azz2q10rdvXxYsWFDsa7p06cLnn3/OokWL6NixI1u3buXXX39lyJAhXt8nNzeX3Nxcz+P09HTPfYdDF7v8U0GbqG2KCvS2sba6EdvuJRhLPyW/wx3ueWhLKNDb5myobbxT23intvFObeNdILWNL5/BYhiGUYa1eLVnzx4SExOZP38+nTt39ux/4IEH+P3331m4cGGxr3v99de57777MAyD/Px87rrrLt5++22v7/PYY4/x+OOPF9n/5ZdfEh4efvYfRCRABDmzuGjVv7EZDn5vMp60iIZmlyQiIpVUVlYWgwYN4ujRo0RHR5/yWNN6Zs/EnDlzeOaZZ3jrrbfo1KkTmzdvZtSoUTz55JOMGzeu2NeMGTOG0aNHex6np6eTlJQEwIUXXojdbi+X2v2Fw+Fg5syZaptiVIa2sbiSYfU3dIvYjmvAv0v8usrQNmdKbeOd2sY7tY13ahvvAqltTv5L+umYFmarVauGzWZj//79hfbv37+fGjVqFPuacePGMWTIEG677TYAWrZsSWZmJnfccQePPPIIVmvRIcAhISGEhIQUez673e73P+yyorbxLqDbpv1QWP0NtrXfYbv4OQj27a8XAd02Z0lt453axju1jXdqG+8CoW18qd+0C8CCg4Np3749ycnJnn0ul4vk5ORCww5OlpWVVSSw2mw2AEwaLSESWOp2g9g6kJsO634yuxoREZHTMnU2g9GjR/Pee+/xySefsG7dOu6++24yMzO5+eabARg6dGihC8QGDhzI22+/zaRJk9i2bRszZ85k3LhxDBw40BNqReQsWK3Q5l/u+8s+M7cWERGREjB1zOz111/PgQMHePTRR9m3bx9t2rRh2rRpJCQkAJCSklKoJ3bs2LFYLBbGjh3L7t27qV69OgMHDuTpp5826yOIBJ42N8KcZ2H7XDiyHeLqmV2RiIiIV6ZfADZixAhGjBhR7HNz5swp9DgoKIjx48czfvz4cqhMpJKKrQMNesHW2bD8S+itRUlERKTiMn05WxGpgNoWDDX4AlxOc2sRERE5BYVZESmq6aUQGgPpu2Db72ZXIyIi4pXCrIgUZQ+Flte57y/73NxaRERETsH0MbMiUkG1/Rcsfg/W/gifXObuqQ2Ldd+GxkDI8dvQaCxB4YTnHjC7YhERqYQUZkWkeDVbQ2J72L3ktEMNgoALAVfOL9DzfqjbpVxKFBERUZgVkeJZLPCvqbBzIeQchew0921O2vEt3b24Qk46Rs5RjMPbsG79Dbb+BrU7QuN+UOd8dyD2cSUxERGRklKYFRHvwmKhSf/THpbvcDDnu4/pE7IK28qvYNci9wZgDYKabdzBtvZ5EBJ54oXWILDawWZ337cFQ1xdCIkqk48jIiKBR2FWREpFVkg8rgEvY+v9kHsp3JS/IGUBHNsLu/92byVhC4b6PSChhXvBhoItprY79IqIiJxEYVZESld0Leh0p3szDEjbcSLY7l0JLof7OANw5bsfOx3u+45syD4Mm2e5t5NZbO5Ae3LAPXkLi3MPjRARkUpFYVZEyo7FciJstr7h9McbBhzYAFvnwOGt7uV0j2x3B+L8HPdt2o7iL0gLiXEPUSgu6MYkQVBwaX0qERGpQBRmRaTisFggvql7O5nLBRn7T4Tbf24Z+yD3KOxb6d6KE14NompCZDyEVz1pq+LuTW54gQKviIgfUpgVkYrPaoXomu6tbueiz+dlQVqK97Cbnw1ZB93bfi/v0WsM9HqojD6AiIiUFYVZEfF/weHF9+iCe+hC1mH3hWjH9rl7eLMPQ9YhyDzoDrvb58LSz6DHA+7gLCIifkNhVkQCm8UCEVXdW40WRZ935MDLTSB9F2z/Axr0KvcSRUTkzKkLQkQqN3sonHuV+/6a700tRUREfKcwKyLS9BL37aYZ7mEJIiLiNxRmRUTqdYOgMEjfDftXm12NiIj4QGFWRMQedmKs7MbpppYiIiK+UZgVEQFo0s99u2mGuXWIiIhPFGZFRAAaHw+zuxa7p/ISERG/oDArIgIQUxsSWoDhgs2zzK5GRERKSGFWRKRAQe/sxmnm1iEiIiWmMCsiUqBJf/ft5lngzDe3FhERKRGFWRGRArXPg7A4yDkKuxaZXY2IiJSAwqyISAGrDRpd6L6vKbpERPyCwqyIyMkKhhpoii4REb+gMCsicrKGfcBihdS1kJZidjUiInIaCrMiIicLrwJJndz3NdRARKTCU5gVEfknDTUQEfEbZxVmc3JySqsOEZGKo/HxMLvtD8jLMrcWERE5JZ/DrMvl4sknnyQxMZHIyEi2bt0KwLhx4/jggw9KvUARkXIX3wxikiA/xx1oRUSkwvI5zD711FN8/PHHvPDCCwQHB3v2t2jRgvfff79UixMRMYXFcmI1sE0aNysiUpH5HGY//fRT3n33XQYPHozNZvPsb926NevXry/V4kRETFMwbnbjDDAMc2sRETHRc/9bz9jvV7Fh3zGzSymWz2F29+7dNGrUqMh+l8uFw+EolaJERExXvwcEhUH6Lvc0XSIildT3y3bz+V8pHM2umDnP5zDbvHlz5s6dW2T/t99+S9u2bUulKBER09nD3IEWNEWXiFRa+47msC89B5vVQovEaLPLKVaQry949NFHGTZsGLt378blcjF16lQ2bNjAp59+ys8//1wWNYqImKNJP/eY2Y3Toftos6sRESl3y3emAdAkIYrwYJ9jY7nwuWf28ssv56effmLWrFlERETw6KOPsm7dOn766ScuvPDCsqhRRMQcBVN07VoEWYfNrUVExAQrdqUB0CYpxtxCTuGMInb37t2ZOXNmadciIlKxxCZBfHP3mNnNydDqWrMrEhEpV8tT0gBokxRrah2nohXAREROxbMamMbNikjl4nQZrNp9FIDWgRRmrVYrNpvN6yYiElAKhhpsmgnOfHNrEREpRweO5RITZic82Ebj+Cizy/HK52EG3333XaHHDoeDZcuW8cknn/D444+XWmEiIhVC7fMgNBZy0mDXYqjb2eyKRETKRY2YUP58qA9Hsx3YrBazy/HK5zB7+eWXF9l3zTXXcO655zJ58mRuvfXWUilMRKRCsAVBo76w+ltYOQlCoyEoFGzBEBRy0m0IWDVyS0QCT0yY3ewSTqnU5lg4//zzueOOO0rrdCIiFUeT/u4wu+Rj9+aN1X4i4Ca2hyvegpC48qpSRKRUGYaBxVJxe2QLlEo3QnZ2Nq+//jqJiYmlcToRkYrlnAFQvydEJ0J4NQiJdvfE/pPLAXkZkH0YNs+EDy6EQ5vLv14RkbOUneekw1OzGPLBQjJzK/b1Aj73zMbFxRVK6YZhcOzYMcLDw/n8889LtTgRkQohJBKG/Vh0v2GAMw/yc0+6zYWMA/DdHXBkO0GfDCAuaXj51ywichbW7DnKocw81u87Rnhwxb7A3+cw++qrrxYKs1arlerVq9OpUyfi4vTnNBGpRCwW97CCoH/00lZpALfOgi+vw7JnKd02PYMx6yD0egjCYk0pVUTEFwUrf7VJiq3wQw18DrM33XRTGZQhIhJgIqvDTT/jmnon1vU/wcK3YdXX0PsRaDfMfWGZiEgFdXKYrehK9Nt05cqVJT5hq1atzrgYEZGAEhyB8+qPWDjpOc4/+iOWgxvhl9Gw+AO46Blo0MvsCkVEinViGdtYU+soiRKF2TZt2mCxWDAM45THWSwWnE5nqRQmIhIoUqNbkX/tf7Gv+AxmPwOpa+DTy+FfU6HRBWaXJyJSyKGMXHYezsZigZa1Y8wu57RKFGa3bdtW1nWIiAQ2mx063Qktr4UfhsOGX2HZZwqzIlLhFPTKNqweSXRoxZ5jFkoYZuvWrVvWdYiIVA7hVaD7fe4wu3EGOLLBHmZ2VSIiHsE2G10bVa3QS9ie7IyvQFi7di0pKSnk5eUV2n/ZZZeddVEiIgEtsR1E14b0XbBlNjQdYHZFIiIe3RpXo1vjamaXUWI+h9mtW7dy5ZVXsmrVqkLjaAumbdCYWRGR07BYoNlA9wwH635UmBUROQs+rwA2atQo6tevT2pqKuHh4axZs4Y//viDDh06MGfOnDIoUUQkADUb6L7d8Cvk5536WBGRcpKZm8+RTP/6neRzmF2wYAFPPPEE1apVw2q1YrVa6datG88++ywjR44sixpFRAJPnfMhojrkHIXtc82uRkQEgBlr99H2yZnc88USs0spMZ/DrNPpJCrKPSC4WrVq7NmzB3BfJLZhw4bSrU5EJFBZbdD0Uvf9dcUslSsiYoIVO48CkBAdanIlJedzmG3RogUrVqwAoFOnTrzwwgv8+eefPPHEEzRo0KDUCxQRCVgFQw3W/wIuXW8gIuZb5kcrfxXwOcyOHTsWl8sFwBNPPMG2bdvo3r07v/76K6+//nqpFygiErDq94DQWMg8ACl/mV2NiFRyuflO1u1JB/wrzPo8m0H//v099xs1asT69es5fPgwcXFxnhkNRESkBGx2OGcArPjSPdSgXlezKxKRSmz93mPkOV3EhdupUyXc7HJKzOee2c8//5zMzMxC+6pUqaIgKyJyJgqGGqz7CU6zZLiISFlafnyIQeukWL/KdT6H2XvvvZeEhAQGDRrEr7/+qnllRUTORsM+EBwJ6bth91KzqxGRSmxFQZitHWtqHb7yOczu3buXSZMmYbFYuO6666hZsybDhw9n/vz5ZVGfiEhgs4dC437u++t+MLcWEanU+p1bgxs71vGr1b/gDMJsUFAQl156KV988QWpqam8+uqrbN++nd69e9OwYcOyqFFEJLBpqIGIVAAXtajBs1e15Lx6VcwuxSc+XwB2svDwcPr378+RI0fYsWMH69atK626REQqj8b9ICgUDm+F/WugRguzKxIR8Rs+98wCZGVl8cUXXzBgwAASExOZMGECV155JWvWrCnt+kREAl9IJDS8wH1/3U/m1iIildLKXWms2JlGbr7/XQvlc5i94YYbiI+P595776VBgwbMmTOHzZs38+STT9K0adOyqFFEJPB5hhpoNTARKX+vzdrE5W/+yed/pZhdis98HmZgs9n4+uuv6d+/PzabrSxqEhGpfM65CKxBkLoWDm6Gao3MrkhEKgnDMFixKw3wr8USCvjcM1swvEBBVkSkFIXFuVcEA/XOiki52p2WzcGMPIKsFs6tFW12OT47ozGzIiJSBppd5r5VmBWRclSwWEKzmtGE2v2vs1JhVkSkomh6KWCBPcsgzf/GrYmIf/IslpAUY24hZ0hhVkSkooisDnW7uO+v+9ncWkSk0ijomW2TFGduIWdIYVZEpCLRUAMRKUf5Therdh8FoI2f9syWaDaD9PT0Ep8wOtr/Bg6LiFQYzS6FaQ9Cyl9wbD9EJZhdkYgEuI9v7sjKXWk0qBZpdilnpEQ9s7GxscTFxZ1yKzjGV2+++Sb16tUjNDSUTp06sWjRolMen5aWxvDhw6lZsyYhISE0adKEX3/91ef3FRGpkGJqQ2J7wID1GmogImUryGbl/AZVuaNHQ6xWi9nlnJES9czOnj27TN588uTJjB49mokTJ9KpUycmTJhA//792bBhA/Hx8UWOz8vL48ILLyQ+Pp5vv/2WxMREduzYQWxsbJnUJyJiimaXwe4lsOY7OO9Ws6sREanQShRme/bsWSZv/sorr3D77bdz8803AzBx4kR++eUXPvzwQx566KEix3/44YccPnyY+fPnY7fbAahXr16Z1CYiYprml8Gsx2D7XPj5XugzDsKrmF2ViASgt+dsITEujD5N44kM8XktrQqhRFWvXLmyxCds1apViY7Ly8tjyZIljBkzxrPParXSt29fFixYUOxrfvzxRzp37szw4cP54YcfqF69OoMGDeLBBx/0uohDbm4uubm5nscnj/91OBwlqrUyKWgTtU1Rahvv1DbenVHbRCVh7T0O2+wn4O8PMVZPxdXjQVztbgKbvWwKNYG+N96pbbxT23jna9tk5ubz4vT1uAz484GehFhDyrI8n/jy87UYhmGc7iCr1YrFYuF0h1osFpxOZ4neeM+ePSQmJjJ//nw6d+7s2f/AAw/w+++/s3DhwiKvadq0Kdu3b2fw4MHcc889bN68mXvuuYeRI0cyfvz4Yt/nscce4/HHHy+y/8svvyQ8PLxEtYqImKHasTW02PUlMTk7ATgWWovViYNIjS5Zp4GIyKlsPgr/tzaI2GCDx9uXLL+Vl6ysLAYNGsTRo0dPO7lAiXpmt23bViqFnS2Xy0V8fDzvvvsuNpuN9u3bs3v3bl588UWvYXbMmDGMHj3a8zg9PZ2kpCQALrzwQs9wBXFzOBzMnDlTbVMMtY13ahvvzq5tBoDrXpzLP8f6+7NEZe2h85aXcNXvhfOCxyChRRlUXH70vfFObeOd2sY7X9vm3bnbYO0mOjVKYMCANmVfoA98mUmrRGG2bt26Z1yMN9WqVcNms7F///5C+/fv30+NGjWKfU3NmjWx2+2FhhQ0a9aMffv2kZeXR3BwcJHXhISEEBJSfLe53W7XPwQv1DbeqW28U9t4d+ZtY4dOt0Ora+GPF2HRu1i3zcH6fm9oOxgGvAz20FKvtzzpe+Od2sY7tY13JW2b1XuOAdCubpUK15a+1HPGI33Xrl1LSkoKeXl5hfZfdtllJXp9cHAw7du3Jzk5mSuuuAJw97wmJyczYsSIYl/TtWtXvvzyS1wuF1are1axjRs3UrNmzWKDrIhIwAiLhf5Pw3m3QfITsGYqLPscju2DG76EoIoz1k1E/MNyzzK2sabWcbZ8DrNbt27lyiuvZNWqVYXG0Vos7rnJSjpmFmD06NEMGzaMDh060LFjRyZMmEBmZqZndoOhQ4eSmJjIs88+C8Ddd9/NG2+8wahRo/j3v//Npk2beOaZZxg5cqSvH0NExD9VqQ/XfgTth8FXN8LmWfD1ULjuMwjS/9SLSMnsT89h79EcrBZomeifK38V8Hk521GjRlG/fn1SU1MJDw9nzZo1/PHHH3To0IE5c+b4dK7rr7+el156iUcffZQ2bdqwfPlypk2bRkKCe8WblJQU9u7d6zk+KSmJ6dOns3jxYlq1asXIkSMZNWpUsdN4iYgEtAa9YNBkCAqDjdPg25vBqau7RaRkVh9fwrZJQhQRfjolVwGfq1+wYAG//fYb1apVw2q1YrVa6datG88++ywjR45k2bJlPp1vxIgRXocVFBeOO3fuzF9//eVr2SIigad+D7jxK/jyevdqYd/eAtd8GFDTd4lI2ejTNJ75D/XhUEbe6Q+u4HzumXU6nURFRQHui7j27NkDuC8S27BhQ+lWJyIip9awt3vMrC0Y1v0IU+8AZ77ZVYlIBWexWKgVG0bL2v49xADOoGe2RYsWrFixgvr169OpUydeeOEFgoODeffdd2nQoEFZ1CgiIqfSuC9c/zlMGuy+MMyVD00ucl8UFhTq7qm12cF6/NYeDtWbaoytiAQEn8Ps2LFjyczMBOCJJ57g0ksvpXv37lStWpXJkyeXeoEiIlICTfrDdZ+4LwZb96N7O5WgUKh9HtTpDHU7Q+2OEBJZPrWKiKm2Hczk6V/Wcn6DqtzW3f87In0Os/379/fcb9SoEevXr+fw4cPExcV5ZjQQERETNL0E/jUF/v4I8jIhP8e9OR3u3lpnnvt+9hHISYPtc90bgMUGNVpAve7Q4z4IizP1o4hI2Vm1+yiz1qVyJMtROcPs0aNHcTqdVKlSxbOvSpUqHD58mKCgoNMuOSYiImWoQS/3diqGAQc3wo75kLLAfXt0J+xd4d4Ob4MbvyyPakXEBBk57nH1VSICY6iRzxeA3XDDDUyaNKnI/q+//pobbrihVIoSEZEyZLFA9XOgw81w1btw72q4dw1c8ba7h3bDL7B1jtlVikgZyXa41wQIs9tOc6R/8DnMLly4kN69exfZ36tXLxYuXFgqRYmISDmLqQ1tBsF5t7ofTxujWRFEAlTO8TAbavc5BlZIPn+K3Nxc8vOL/oJzOBxkZ2eXSlEiImKSXmMgNBZS18LST8yuRkTKQE5l75nt2LEj7777bpH9EydOpH379qVSlIiImCS8CvR+2H1/9tOQnWZqOSJS+rLzjvfMBgdGmPX5ArCnnnqKvn37smLFCi644AIAkpOTWbx4MTNmzCj1AkVEpJx1uAUWfwAHN8AfL0L/p82uSERKUU7+8TAbFBhh1uee2a5du7JgwQJq167N119/zU8//USjRo1YuXIl3bt3L4saRUSkPNns0P8Z9/2FE+HgZnPrEZFSNfaS5iwddyG3da9vdimlwueeWYA2bdrw5ZeatkVEJGA17guN+8GmGTDjERikRXFEAkWo3UZogIyXhTPomQXYsmULY8eOZdCgQaSmpgLwv//9jzVr1pRqcSIiYqJ+T4M1CDZOg83JZlcjIlIsn8Ps77//TsuWLVm4cCFTpkwhIyMDgBUrVjB+/PhSL1BERExSvQmcd7v7/vRHNFWXSICY+PsWxn6/itW7j5pdSqnwOcw+9NBDPPXUU8ycOZPg4BMrR/Tp04e//vqrVIsTERGT9XoQwqrAgXWw5COzqxGRUjB9zT4+/yuF3WmBMaWqz2NmV61aVex42fj4eA4ePFgqRYmISAURFueequvX+2D6wzD3lcLPW4MgNAbC4yA4yr26WFw9qNEKaraCqo3BdkaXZ4hIGclxuIDAmWfW598wsbGx7N27l/r1C18Bt2zZMhITE0utMBERqSDa3wxLP4V9K+HYnqLPn+ovlbYQSDjXvXRu2yHusCsipvIsmlBZ55m94YYbePDBB/nmm2+wWCy4XC7+/PNP7rvvPoYOHVoWNYqIiJlsQXDLdDi0qehzTod7YYXsw5CX4R5Xe2gT7Fvl3vIyYM9S+HEprJgMA1+Dao3K/SOIyAme5WwDZJ5Zn8PsM888w/Dhw0lKSsLpdNK8eXOcTieDBg3ikUceKYsaRUTEbMHhULO1b69xueDINlj/M8x5DnbMg7e7QM/7ocsoQL20ImbI9vTMntGkVhWOz2E2ODiY9957j0cffZRVq1aRkZFB27Ztady4cVnUJyIi/spqhaoNoesoaH45/DwatiTDb0/B6qlYBrxqdoUilVLBcrYhAdIze8aRPCkpiQEDBnDdddfRuHFjpk6dSqtWrUqzNhERCRRx9eBfU+Cq9yC8KqSuxfbxRbTc9RnkHjO7OpFKw+UyyM0/fgFYgIyZ9SnMvvPOO1xzzTUMGjSIhQsXAvDbb7/Rtm1bhgwZQteuXcukSBERCQAWC7S6DoYvhlY3YMGgwYGZBL3bDVZPhX2r4fA2yEiFvEz3MAURKVUWCyx65ALmPtCbuPDg07/AD5R4mMFzzz3Ho48+SqtWrVi/fj0//PADjzzyCP/3f//HqFGjuPPOO4mLiyvLWkVEJBBEVIWr3iH/3KvJnXIPEem74dubiz/WHu7egsPdU3/VaAHthkE9dZ6InAmLxUJ8VKjZZZSqEofZjz76iPfee49hw4Yxd+5cevbsyfz589m8eTMRERFlWaOIiAQgo0FvZjd9hosjVmHb8DPkZrh7ZB2ZJw5yZLm3rOOPU9fAyslQrzv0exJqtTWldhGpOEocZlNSUujTpw8A3bt3x2638/jjjyvIiojIGXPaQnD1eRRb/ydP7HS5ToTYvMzjt1mQfQQ2/ALLvoDtc+G9C2DIVGjQy7T6RfxN6rEc3vhtM7HhwYy+sInZ5ZSKEo+Zzc3NJTT0RLd0cHAwVapUKZOiRESkErNaISQSIuOhSn33ogtJ50GTfu55akcug0Z9wXDCD/929+iKSIkcOJbLpwt2MGlRitmllBqfpuYaN24c4eHhAOTl5fHUU08RExNT6JhXXnmluJeKiIiUjtgkuPYTeKszHE2BWY/BJS+ZXZWIXwi01b/AhzDbo0cPNmzY4HncpUsXtm7dWugYi5YpFBGR8hASCZe9Dp9dAYvfg3Ov1EVhIiWQ43DPEhIoq3+BD2F2zpw5ZViGiIiIjxr2hnZDYemn8MNwuHu+e9YDEfGqYMGE0ADqmQ2MdcxERKRy6vcURCe6l82d/bTZ1YhUeJ6lbO2BEwED55OIiEjlExrjvigMYMGbsHORufWIVHAFY2ZD7eqZFRERqRgaXwitBwEG/DgSDMPsikQqLM8FYAEUZn2azUBERKRC6vckrPgSDqyDnDQI04qUIsW5sl1tujeuTnBQ4PRnKsyKiIj/i6gGthBw5rrnnVWYFSlWZEgQkSGBFf9K9GlWrlxZ4hO2atXqjIsRERE5YyFRkJULuelmVyIi5ahEYbZNmzZYLBYMwzjtXLJOp7NUChMREfFJaDRkHYTcY2ZXIlJhTVu9jxW70ujeqBpdGlUzu5xSUaIBE9u2bWPr1q1s27aNKVOmUL9+fd566y2WLVvGsmXLeOutt2jYsCFTpkwp63pFRESKFxLlvlWYFfHq942pvD1nC0t2HDG7lFJTop7ZunXreu5fe+21vP766wwYMMCzr1WrViQlJTFu3DiuuOKKUi9SRETktEKi3bcaZiDilWfRhACazcDnS9lWrVpF/fr1i+yvX78+a9euLZWiREREfKaeWZHT8ixnW5lXAGvWrBnPPvsseXl5nn15eXk8++yzNGvWrFSLExERKTGFWZHTytY8szBx4kQGDhxI7dq1PTMXrFy5EovFwk8//VTqBYqIiJRIwTCDHA0zEPHmxApglXie2Y4dO7J161a++OIL1q9fD8D111/PoEGDiIiIKPUCRURESkQ9syKnpRXAjouIiOCOO+4o7VpERETOnMKsyGllOwLvArAzCrObNm1i9uzZpKam4nK5Cj336KOPlkphIiIiPvGEWQ0zEPHm/aHnkZ7joF61wPlrus9h9r333uPuu++mWrVq1KhRo9AiChaLRWFWRETM4ZmaSz2zIt7UqRpudgmlzucw+9RTT/H000/z4IMPlkU9IiIiZyZU88yKVEY+h9kjR45w7bXXlkUtIiIiZ05jZkVO65WZGwkJsnJTl3pEhJzRaNMKx+d5Ga699lpmzJhRFrWIiIicOYVZkVPKd7p4PXkTL07fQF6+6/Qv8BM+R/JGjRoxbtw4/vrrL1q2bIndbi/0/MiRI0utOBERkRJTmBU5pZyTAmxYAK0A5nOYfffdd4mMjOT333/n999/L/ScxWJRmBUREXMUXACWlwEuJ1gD5z/WIqUhO8/puR8SVIkXTdi2bVtZ1CEiInJ2CnpmwR1oQ2PMq0WkAjp59a+TZ6Pyd4ETy0VEpHILCgFbiPu+lrQVKSIQV/+CM1w0YdeuXfz444+kpKSQl5dX6LlXXnmlVAoTERHxWUgUZOVq3KxIMQJx9S84gzCbnJzMZZddRoMGDVi/fj0tWrRg+/btGIZBu3btyqJGERGRkgmJgqyDCrMixchxuC8AC7SeWZ+HGYwZM4b77ruPVatWERoaypQpU9i5cyc9e/bU/LMiImIuzWgg4tW5taL5cURXXruhrdmllCqfw+y6desYOnQoAEFBQWRnZxMZGckTTzzB888/X+oFioiIlFiIVgET8SYiJIhWtWNpWTuwLo70OcxGRER4xsnWrFmTLVu2eJ47ePBg6VUmIiLiK8+StuqZFaksfB4ze/755zNv3jyaNWvGgAED+O9//8uqVauYOnUq559/flnUKCIiUjKeYQbqmRX5p9W7jzJ300GaJERyQbMEs8spNT6H2VdeeYWMjAwAHn/8cTIyMpg8eTKNGzfWTAYiImIujZkV8erv7Yd5ftp6LmlVs3KH2QYNGnjuR0REMHHixFItSERE5IwpzIp4lX18NoPQoEo+m4GIiEiFpWEGIl55Fk0IDqz4F1ifRkREKrcQXQAm4o1nOVv1zIqIiFRQBWFWy9mKFHGiZ1ZhVkREpGLSmFkRrwJ1OVuFWRERCRwKsyJeFSxnG2hh1ufZDJxOJx9//DHJycmkpqbicrkKPf/bb7+VWnEiIiI+UZgV8eo/fRtzY8c61KkabnYppcrnMDtq1Cg+/vhjLrnkElq0aIHFYimLukRERHynMCviVYPqkTSoHml2GaXO5zA7adIkvv76awYMGFAW9YiIiJy50ONrzucdA5cLrBpNJxLofA6zwcHBNGrUqCxqEREROTsFPbPgDrQF4VZEmLp0F5m5+fRtnkDNmDCzyyk1Pv8v63//+19ee+01DMMoi3pERETOXFAI2ILd9zXUQKSQt+ZsYdwPa9h+MMvsUkqVzz2z8+bNY/bs2fzvf//j3HPPxW63F3p+6tSppVaciIiIz0KiIOuQwqzIP2TnFUzNFVjDb3wOs7GxsVx55ZVlUYuIiMjZU5gVKVZufmAumuBzmP3oo4/Kog4REZHS4VnSVquAiZysoGc2LMDmmT3jfuYDBw4wb9485s2bx4EDB86qiDfffJN69eoRGhpKp06dWLRoUYleN2nSJCwWC1dcccVZvb+IiAQQLWkrUoRhGOTkB+aiCT6H2czMTG655RZq1qxJjx496NGjB7Vq1eLWW28lK8v3AcWTJ09m9OjRjB8/nqVLl9K6dWv69+9PamrqKV+3fft27rvvPrp37+7ze4qISADTXLMiRTicBk6X++L9Sh9mR48eze+//85PP/1EWloaaWlp/PDDD/z+++/897//9bmAV155hdtvv52bb76Z5s2bM3HiRMLDw/nwww+9vsbpdDJ48GAef/xxGjRo4PN7iohIAFOYFSki2+H03A+0C8B8/jRTpkzhgw8+4OKLLyY6Opro6GgGDBjAe++9x7fffuvTufLy8liyZAl9+/Y9UZDVSt++fVmwYIHX1z3xxBPEx8dz6623+lq+iIgEOoVZkSLC7Da+uK0T7w/tQLAtsMKszxeAZWVlkZCQUGR/fHy8z8MMDh48iNPpLHK+hIQE1q9fX+xr5s2bxwcffMDy5ctL9B65ubnk5uZ6HqennxhD5XA4fKq3MihoE7VNUWob79Q23qltvCurtrHaI7ABzuw0XH7a7vreeKe28e5UbWMBOtZ1LyKSn59fnmWdEV9+vj6H2c6dOzN+/Hg+/fRTQkNDAcjOzubxxx+nc+fOvp7OJ8eOHWPIkCG89957VKtWrUSvefbZZ3n88ceLfW7mzJmlWV5AUdt4p7bxTm3jndrGu9Jum8b79tIc2LVlHcsdv5bqucubvjfeqW28C4S28aWD1Ocw+9prr9G/f39q165N69atAVixYgWhoaFMnz7dp3NVq1YNm83G/v37C+3fv38/NWrUKHL8li1b2L59OwMHDvTsc7ncV+YFBQWxYcMGGjZsWOg1Y8aMYfTo0Z7H6enpJCUlAXDhhRcWWfShsnM4HMycOVNtUwy1jXdqG+/UNt6VVdtY/94Le78hqXoMtQYMKLXzlid9b7xT23h3qrY5cCyXWetTqRoRTL/mRf/CXtGc/Jf00/E5zLZo0YJNmzbxxRdfeIYC3HjjjQwePJiwMN/W+Q0ODqZ9+/YkJyd7ptdyuVwkJyczYsSIIsc3bdqUVatWFdo3duxYjh07xmuvveYJqScLCQkhJCSk2Pe32+36h+CF2sY7tY13ahvv1DbelXrbhMcCYN08E+ub7U/sD4uDC5+ABj1L773KmL433qltvCuubXYcSefRH9fRsHoEl7SubVJlJefLz9bnMAsQHh7O7bfffiYvLWL06NEMGzaMDh060LFjRyZMmEBmZiY333wzAEOHDiUxMZFnn32W0NBQWrRoUej1sbGxAEX2i4hIJRXf3H2bnw1pO07sT9sBn10J7YZAzwchupY59YmYICdAV/+CEobZH3/8kYsvvhi73c6PP/54ymMvu+wynwq4/vrrOXDgAI8++ij79u2jTZs2TJs2zXNRWEpKClZrYF11JyIiZahmK/jPKsg4ab5yw4C/P4AVX8GSj2HFJOh0F3T7j7vHViTA5QTo6l9QwjB7xRVXsG/fPuLj40+52pbFYsHpdHp93psRI0YUO6wAYM6cOad87ccff+zz+4mISICLrePeTpZ0HrQbBrMeg51/wZ8T4O+PoNEFUOd8SOoECS3AdkZ/tBSp0Ap6ZgNtwQQoYZgtuMjqn/dFRET8St3OcMs02Dgdkh+H1LWwZqp7A7BHQLOBcNnrEFT89RYi/ig7LzCXsoUzHDP7T2lpaZ6xqyIiIhWaxQLnXASNL4Qd8yHlL3dP7c7FkHsUVk6CkEi45GWzKxUpNQUrgAVimPV5MOrzzz/P5MmTPY+vvfZaqlSpQmJiIitWrCjV4kRERMqM1Qb1u0PP++FfU+DB7XDdp+7nFr8Pq3xb1VKkIstxFIyZDbzrkHz+RBMnTvRMgTVz5kxmzZrFtGnTuPjii7n//vtLvUAREZFyYbVC88uh+33uxz+OhNTiV6MU8TcDWtbknSHt+df5dc0updT5PMxg3759njD7888/c91119GvXz/q1atHp06dSr1AERGRctX7Ydi5ELbPhfcvgF5joNOdYNOcpuK/6leLoH61CLPLKBM+98zGxcWxc+dOAKZNm0bfvn0BMAzjjGYyEBERqVCsNrjmI/fsBnkZMOMReKene2ytiFQ4PofZq666ikGDBnHhhRdy6NAhLr74YgCWLVtGo0aNSr1AERGRchdZHW6eBpf9n3se2tQ18GF/+GE4HNt/+teLVDB/bT3E98t2s/VAhtmllDqfhxm8+uqr1KtXj507d/LCCy8QGRkJwN69e7nnnntKvUARERFTWK3QbiiccwnMGg/LPoNln7u3uHpQs437NjrRvZpY1UYQ39TkokWK99lfO/hl5V4eG9icBtUjzS6nVPkcZu12O/fdd1+R/ffee2+pFCQiIlKhRFSFy9+AtkNg2kOwZykc2e7e/umGL6HpJeVdochpeVYA03K2pb+crYiIiF+o0wnumA3ZR2DPcti3CtL3QPpuOLAeDm6EOc8qzEqFFMjzzFaI5WxFRET8RlgcNOzt3gpkHYaXmrgD7oGNUL2JefWJFCMngMNsiS4Ac7lcxMfHe+572xRkRUSkUgqvAvV7uO9v+MXcWkSKke1wL2cbVlnDrIiIiJxGwfCC9QqzUvF4VgALwDGzPofZkSNH8vrrrxfZ/8Ybb/Cf//ynNGoSERHxP+cMcN/uWgzH9plbi8g/eIYZBCnMMmXKFLp27Vpkf5cuXfj2W61jLSIilVR0Tah9nvv+6qnm1iLyD09f2YKXr21NUpUws0spdT6H2UOHDhETE1Nkf3R0NAcPHiyVokRERPxS6xvct8s+A8MwtxaRk/RpmsDV7WsTGx5sdimlzucw26hRI6ZNm1Zk///+9z8aNGhQKkWJiIj4pRbXQFAopK51z0crImXO50UTRo8ezYgRIzhw4AB9+vQBIDk5mZdffpkJEyaUdn0iIiL+IywWml0Gq76GpZ9BYnuzKxIhO8/JjLX7iAoNok/TBLPLKXU+h9lbbrmF3Nxcnn76aZ588kkA6tWrx9tvv83QoUNLvUARERG/0m6IO8yungL9n4HgcLMrkkruwLFcRk1aTpjdxronLzK7nFJ3RlNz3X333ezatYv9+/eTnp7O1q1bFWRFREQA6naD2LqQmw7rTr1qpkh5OJbrACAy1Oc+TL9wRmE2Pz+fWbNmMXXqVIzjA9z37NlDRkZGqRYnIiLid6xWaDvEfX/pZ+bWIgJk5rqn5YoMUZgFYMeOHbRs2ZLLL7+c4cOHc+DAAQCef/557rvvvlIvUERExO+0uRGwwI55cGiL2dVIJZeZmw9AREjgzTELZxBmR40aRYcOHThy5AhhYSfmKrvyyitJTk4u1eJERET8UkxtaHSB+/7yL8ytRSq9jIIwG6yeWQDmzp3L2LFjCQ4uPE9ZvXr12L17d6kVJiIi4tcKhhos/xKc+ebWIpVaQc9sVICOmfX5U7lcLpxOZ5H9u3btIioqqlSKEhER8XvnXAxhVeDYXtiSDE36m12R+Kkch5MDx3LJzXfSKP5E1nruf+vZfjCT+tUjuLVbfWJCiu+j9PTMBuiYWZ8/Vb9+/ZgwYQLvvvsuABaLhYyMDMaPH8+AAQNKvUARERG/FBTiXhHsr7fcK4IpzMoZmLQohUe+X43TZdAkIZIZ9/b0PDd7fSob9h8D4JP52xnWuQ51ivkjQK9zqhMTZicxLvCWsoUzCLMvvfQSF110Ec2bNycnJ4dBgwaxadMmqlWrxldffVUWNYqIiPintkPcYXbD/yDjAERWN7si8SP5ThevJ2/C6TIIDrISZC3c83pb9/qk5+Tzw/LdrNx1lLd/30aYzcaBmK3c2r2hpye2UXxUoR7dQONzmE1KSmLFihVMnjyZFStWkJGRwa233srgwYMLXRAmIiJS6SU0h1rt3EvbLv8COt114jmbHayBeXW5lI7f1qey52gOceF2Foy5gFB74e/LtR2SALilaz1mrN3Py9M3sDE1g1dmbcZisfLvCxqbUXa58ynMOhwOmjZtys8//8zgwYMZPHhwWdUlIiISGNoNcYfZWePdWwFbMFRrAtWbQpUGEFvHvdXuAJZg7+eTSuOzv3YAcN15SUWC7MksFgv9z61Bz0ZVePqzaazIiWNY13qe5+duOkC+06B1UixVIgLvu+VTmLXb7eTk5JRVLSIiIoGnxTUwbwKk7Si835kH+1e7t5NF14Ybvym38qRi2nogg7mbDmKxwL861S3Ra2xWCx2qGzw64Hzsdrtn/3P/W8+aPel8dPN59D4nvqxKNo3PwwyGDx/O888/z/vvv09QUGBeFSciIlJqQqNh5DJwZBXen3UIUtfDgXVwZAekpcC+lZC+i6BPLyG2zkhz6pUKYcehLKpFBtO6dixJVcJ9fn1evospS3exfm86B47lAlAlPPB6ZeEMwuzixYtJTk5mxowZtGzZkoiIiELPT506tdSKExERCQhWG4T84wKckCiIqwfnXHRiX+ZB+OIaLHuW0XXTM1hm7IXOd7mHIUil0rtpPPMfuoC0rLwzen2Q1cKTP68lK+/EdKqBOMQAziDMxsbGcvXVV5dFLSIiIpVbRDUY9hOuyUMI2jobFr8Di991z1nbeQTU62p2hVKOgoOsxEeHntFrrVYLzWpGs2THEc8+hdnjPvroo7KoQ0RERABConDeMJm/Jr/A+SzHumUWbPjVPb3XkKnQsI/ZFUoZMgyDBVsO0alBVWxWy1mdq/lJYTY4yEp4cGDOnlHi5WxdLhfPP/88Xbt25bzzzuOhhx4iOzu7LGsTERGpnCxWDkS3wnnDJBi+GBr3AwxY8JbZlUkZ+3vHEQa9v5CLX/sDp8s4q3OdWyvac79KeDAWy9mF44qqxGH26aef5uGHHyYyMpLExERee+01hg8fXpa1iYiISPUmcNFz7vubZ7kvFpOAM3t9Kit2pvHVwhQA2ibFnX3P7ElhNi5AhxiAD8MMPv30U9566y3uvPNOAGbNmsUll1zC+++/j9Va4kwsIiIivqraEOr3hG2/w9JP4YJxZlckpWjVrqPc/PFigqwWT4C97ryksz5vk4QTFx1e2772WZ+voipxCk1JSWHAgAGex3379sVisbBnz54yKUxERERO0uFm9+2yz8DpMLcWKVWN4iNpkRhNvssgN99FnSrhtKsTe9bnDbXbaJIQ6XmPQFXiMJufn09oaOEr6ux2Ow6H/kGJiIiUuXMugYh4yNjvviBMAkZYsI3v7+nKwNa1ALixY51SG9/6xqB2LB13IT2aVC+V81VEJR5mYBgGN910EyEhIZ59OTk53HXXXYXmmtU8syIiImUgKBja/gvmvQJ/fwTNLze7IilFQTYrr9/QhlEXNKZ+tYjTv6CETh5qEKhKHGaHDRtWZN+//vWvUi1GRERETqH9MJj3KmydDYe3ajEFP2cYBv/+ahnt6sRx/XlJRIQEBfRwgLJS4jCr+WVFRERMFlfPPc/slmRY8jFc+ITZFclZWLnrKD+v3MuMtfu5ql2i2eX4LU1DICIi4k863OK+XfYF5J/ZUqdydpbsOMLkxSnM3pBKVl7+aY9PTc/BMIrOGfvl8Wm4LmlZk9jwwJ06q6z5vAKYiIiImKjJRRBVE47thfU/QQstMV8e1u1N57f1qcxcu5/lO9M8+/98qA/hwe449f7crczZcIBasaFc1yGJetUi+N+qvbwwbQMPXHQOQzrXI8fhJC3LwaLth/l++W7AfcGXnDmFWREREX9iC4K2Q+CPF9wXginMlqmM3Hye+nktkxbv9OwLtlnpWL8KhzPziI86cWH8qt1Hmbf5IABf/72r0HmmrdnHtR2S+GJhCk//spaCxb26N67GefXiyv6DBDCFWREREX/TbijMfQm2z4U9y6BmGwjQpUrNNmvtfiYt3onFAhc0jafXOfH0a55AfHRokWNv796AHo2r88OKPfyx8QAAibFh3NGjAYM71WHV7qN8tmA7FouFYKuFu3s1ZESfRgG7zGx5UZgVERHxN7FJ0LgfbJwG7/aC2Dpw1ftQp5PZlfmdnYezWLLjCMdy83G5DJwuA5dhcP15SUSF2rm8TS3+3nGYS1vV4vwGVU95rhaJMbRIjOHq9rXJyM0nzG4rtCRt2zpxzLm/N/lOF07DICTIVtYfr1JQmBUREfFHPR+EI9vhwHpIS4HProAbv4IGvUwuzFy/rd/P//22mRG9G3FBswSvx70/dysf/bmd3WnZxT7f/9waRIXasVgsPHVFS5/riAzxHrGCbFYFsFKkthQREfFHie1g+ELIPgLf3gJbfoMvroPrPoFzLja7OtNsP5jFspQ0bv3kbz68qQO7j2SzOTWDAxm5PHrpudSIcQ8PyHO62J2WTZDVQsvaMSREhWKzWrBaLdgs7qVgxT8ozIqIiPizsDi4cZI70K7/GSb/C1rdANUaQb0eULu92RWWq2Fd6vHSjA1k5Tm55eO/Cz3X/9waXN7GPZ/rwFa1aJkYQ7s6cUScohdVKj799ERERPxdUAhc+wl8fzes+hqWf37iuUZ9offDkBi4oXZPWjahdhtVIoKxWS0seOgCrpk4n+2HMmlXJ45asWE0qBZBi8QYz2uSqoSTVCXcxKqltCjMioiIBAJbEFz5DjS/DPatgtR1sP4X2DzLvTW5GHreD1UbQ3AkWANj3SSny+DuL5ZyLMfBp7d0pHZcODHhdv43qrsusqokFGZFREQChdUKzQa6N4DDW+H3F2HlJNj4P/dWICwOwqtBRHWIqAqRCce3eKjSAGq2htCY4t+nAvl0wXZW7EwjKiSo0BRXusiq8tDPWUREJFBVaQBXvg3dR8Oc52Ddj+A8vgRu9hH3dmiT99dXbQS12sJ5t1e4ab9y8118t2InL03fAMBDA5qSGBtmclViBoVZERGRQFetMVzzARgG5OdC7jHIOgSZB05sGamQmQrH9kHqejiaAoc2u7d1P8N/VkFkdbM/CTkOJzN2WXjy5T84mOEO5h3rV+HG87QkbGWlMCsiIlJZWCxgD3VvkdWBpt6PzTwEe5fBzPGwfzX89Rb0HV9upXrz55ZD/LLTBuRRMyaUYV3qMeT8ulitWkWrsgqM0d8iIiJSuiKqumdC6DXG/Xjx+5CdVu5lOF0Gb/x2YihEn3Oq06m6i5eubsEfD/Tmrp4NNbVWJacwKyIiIt6dMwCqN4XcdHegLWcz1+5nwqxNpOc4ALBYLAxq5OLyNrWw2xRjRGFWRERETsVqhW73uu8ves897rYcvT93K/kugy/+SinX9xX/oTArIiIip9b8CggKg4x9cGB9ub3t0pQj/L3jCHabhavaJZbb+4p/UZgVERGRU7OHQp3z3fe3/VFub/v+3K0AXN4mkYTo0HJ7X/EvCrMiIiJyevV7uG/LKcymHMpi2up9ANzevUG5vKf4J4VZEREROb36Pd232+eCy1nmb/fhn9twGdCjSXXOqRFV5u8n/kthVkRERE6vZmsIiYaco7BvZZm+VVZePt/8vROAO9QrK6ehMCsiIiKnZwuCul3d98t4qEF4cBA/jOjKqAsa07VR1TJ9L/F/CrMiIiJSMgXjZrf+Xuqnzs13Mn3NPtbtTQegUXwU917YBItFK3vJqWnJDBERESmZBsfHzaYsgPw8CAo+5eEZufnsOJSJ02XQqnYs4F7R66q35xNssxASZCM6LIi48GCmrd7Hocw8bjgvieeublXGH0QCicKsiIiIlEz1ZhBeDbIOkpuymJAGXYscYhgGczcd5IN52/h94wEAzqsXxzd3dQHAZrVw8Fguu9Oyi7w2ITqEWrFhZfsZJOAozIqIiEjJWK1Qvzus+Y43P/yQi+5pSfNa0QB89tcO/tpyiI37j7EpNcPzkioRwcSE2QudZsINbTiUkUtuvov96TkcysijdVIs/ZonEKQlasVHCrMiIiJSYotoQUe+o4t1DTViTixksHJnGr+s2gtARLCNazskcXPXetStGlHkHOfVq1Ju9UrgU5gVERGRElmacoSHl8cxyw4dbJsJsucD7nGzl7dJ5Nxa0USF2rnw3ASiQ+2nPplIKVGYFRERkdNKPZbD3Z8vYb8zgcNh1amSfwC2JEOzgQB0a1yNbo2rmVylVEYKsyIiInJKS3Yc4eq35wPQOD6KqAYDYPkn8PVQSOoEVRpC3S5QrxvE1TW5WqlsFGZFREQCxNEsB3M2prI5NYOtBzNxuQyqRARTJSKYuPBg2tSJpV2dOADy8l0sSzmCPchKkNVCvssg32mQmZfPhn3HaJkYQ9dG7p7WrQdOXND1zpD22CNawpHNsONP9zRdKQtg+efuA6o0hCvfgaTzyv3zS+VUIcLsm2++yYsvvsi+ffto3bo1//d//0fHjh2LPfa9997j008/ZfXq1QC0b9+eZ555xuvxIiIigSg7z8mvq/ZSJSKY3k3jAdiVlsWoScu9vuaWrvU9YfZQZi7Xv/uX12Nv7lrPE2avbJvI3E0Huad3QxpUjzx+wK9wcBPsXgIHNsD2ebBnKRzeAp9fDTf95F4CV6SMmR5mJ0+ezOjRo5k4cSKdOnViwoQJ9O/fnw0bNhAfH1/k+Dlz5nDjjTfSpUsXQkNDef755+nXrx9r1qwhMTHRhE8gIiJSvnIcTm76aBELtx3mkpY1PWG2WY1oujaqSt2qEdSvGkFwkJXDmXkcycrjcGYeTWtEFTpPg+oR5OW7cLoMgmwW7FYrQTYLjROiaH18kQOAIJuV129sW7SQao3dm6ewo/Dl9e6e2s+uhJt+hfimZdEEIh6mh9lXXnmF22+/nZtvvhmAiRMn8ssvv/Dhhx/y0EMPFTn+iy++KPT4/fffZ8qUKSQnJzN06NByqVlERMQsDqeL4V8sZeG2w1gt0CIxxvOc1Wrhi9vOL9F5asaE8dt/e5VucaExMGgyfHo57FkGn14GXf4Ntc+Dmm3AHnraU4j4ytQwm5eXx5IlSxgzZoxnn9VqpW/fvixYsKBE58jKysLhcFClSvFz1uXm5pKbm+t5nJ6e7rnvcDjOsPLAVdAmapui1DbeqW28U9t4p7bxzlvbOF0G//12FcnrUwkJsvLhsHZ0rFelYrWhLRyun0zQ55djObAOZowFwLDaMRJaYCR2wKjZGuLqYcTWhcgEsJR8oQR9b7wLpLbx5TNYDMMwyrCWU9qzZw+JiYnMnz+fzp07e/Y/8MAD/P777yxcuPC057jnnnuYPn06a9asITS06P/xPfbYYzz++ONF9n/55ZeEh4ef3QcQEREpJ4YBX2+zMn+/FavF4LZzXJwbZ9p/wk/Lnp9J3UNzqJK5ibjMzYTmpxd7XLY9jsX1/82RiEblXKFUZFlZWQwaNIijR48SHR19ymNNH2ZwNp577jkmTZrEnDlzig2yAGPGjGH06NGex+np6SQlJQFw4YUXYrdrUueTORwOZs6cqbYphtrGO7WNd2ob79Q23hXXNh/+uZ35+zdiscAr17bmkpY1TK6yJK513xgGjqM7sexejGXX31gOrseSlgJHdxHmOEL3lNfIv3U2xNY57Rn1vfEukNrm5L+kn46pYbZatWrYbDb2799faP/+/fupUePU/0hfeuklnnvuOWbNmkWrVq28HhcSEkJISEixz9ntdr//YZcVtY13ahvv1DbeqW28U9sU5XIZHMyBuVvT6N+iFgDXdKjDz6v2M6hTHa5ol2RyhWegekP31uaGE/tyM+DTy7DsXoL9t/FwzcdgK1k00ffGu0BoG1/qNzXMBgcH0759e5KTk7niiisAcLlcJCcnM2LECK+ve+GFF3j66aeZPn06HTp0KKdqRUREfLfrSBaP/biWzanHyHcZuFwGP/27G1Uj3R0t7/2xlR9W7CbYZiXI5p59IOVwFnn5QbBsGSvGVycmzE7VyBCm3tMFu63k40srvJBIGPgaTOwO636C93rD0B8gvPjrYESKY/owg9GjRzNs2DA6dOhAx44dmTBhApmZmZ7ZDYYOHUpiYiLPPvssAM8//zyPPvooX375JfXq1WPfvn0AREZGEhkZadrnEBER+acZa/Zx3zcrSM/JL7Q/33VirGvK4SxW7y76J9Ugi0GzWjEcysglJszdSxVQQbZAjZZwxVsw/WHYtxK+vM4daIMjzK5M/ITpYfb666/nwIEDPProo+zbt482bdowbdo0EhISAEhJScFqPfGP9+233yYvL49rrrmm0HnGjx/PY489Vp6li4iIFCsv38Xz09bzwbxtALROiuXB/ucQFmzDZrUQFx7sOXZYl7r0aRZPXr6LvHwXseF2aseEsHz+bC695Hy//3NxibQZBLXawYf9Yddi+OYmuOFLsFWCzy5nzfQwCzBixAivwwrmzJlT6PH27dvLviAREZGzkJaVx/fLdgNwW7f6PHBRU4KDiu9VbRQfRaP4wosZOBwOVlrKvMyKJb4pDP4GPrkMNs2An/8Dl79pdlXiBwLw7xUiIiLlwzAM8vJdHMnM4+M/t7FgyyEA4qNDee2Gtrw3tANjL23uNcjKPyR1hOs+ASyw7HNI32N2ReIHKkTPrIiIiD9YmnKEIe+fmAM95/hSsAUevKgpnRtWBaBb42rlXl9AaNIfqjSAw1vg4CaIrmV2RVLBKcyKiIicxOF0sXZPOou3H+b3jQdoWiOKRy5pDkDLxBisFgvHcvOLvC4u3E69qlqMp1RUbegOs4e3QIOeZlcjFZzCrIiIBKTPFmwnLcuB0zA8vadBVivpOQ7iwu2M6NPYc+ydn/3NjkNZOJwudqdlk+NweZ5LOZzlCbN2m5UZo3uQl+9+PtRuI9RuI8xuw26zYLFUtoGuZaRqI/e42UNbzK5E/IDCrIiIBKR3/tjKriPZxT7XsHpEoTC75UAmm1MzPI9jwuy0rxtHl4ZV6XVOdQzD8ATVmjFhZVu4uIcZgMKslIjCrIiIBKRLW9UiLSsPm9WCzWrBMCDf5SI61E6t2MKB9JkrW5KX78Jus1A1MoQG1SKwWtXLapqqjdy3hxVm5fQUZkVEJCA9dHHTEh/bsb5WnKpQqjZ03x7eBs78Ei9xK5WT5goREZGA8cfGAwx67y+mLt1ldilyNqJrgy0EXA44utPsaqSCU5gVEZGAMW3NPuZvOcTSlCNmlyJnw2o9MW5WQw3kNBRmRUQkILhcBjPX7gegX/MaJlcjZ61gqIEuApPTUJgVEZGAsHxXGgeO5RIVEsT5DaqaXY6cLYVZKSGFWRERCQgz1rh7ZXs3jdfysYGgSkGY3WxuHVLh6V+7iIj4lay8fNbtTSc33+nZ9/XfO5n4u7sHr9+5CWaVJqVJ03NJCWmuCxERKZG8fBcuw72SVrDN6pmHNSM3n4ycfHLzneTmu8h3GriOr7rlNAya14wm1G4DYMmOwyxLSSMjN5/0rDzWbbEyffIKcvPd5x0/8FzqHF8S9qcVe/hu2W7P+zucLnYezmLH4SwMA2be24PGCVEA7E3LAdyLHfRsUr18GkTKVsEwg7QUyM+DoGBz65EKS2FWRES8SjmUxXfLdvPD8t1sPZjp2f/nQ31IPL7wwMszNvDRn9u9nmPW6J40io8EIHldKm/NObmnzQqp+z2PRvdr4rm/41Amv61PLfacceF2sh0nemYvbJ5AZGgQ/ZonEBVq9+UjSkUVmQDBkZCXAUe2Q/Ump32JVE4KsyIiUsTs9am8MXszS3YUP8WVcbyHFiA4yIrdZsFusxJqt7lX3LK4V92yWsF20kpaLRJjuLxNLSJDggizW9mzYwvtWjYnMjQYiwVqnbRUbO+m8cRHhbofWMACJMaG0aRGFNUiQwrV07xWNM1rRZdeA4j5LBb39Fz7VrqHGijMihcKsyIifi7H4WRPWjY7j2Sz83AWBzNyPc91a1SNDvXcq1vtO5rDlwt3YACGAQbuQGoY4HQZdG9cnW6NqwFwNNvBkh1HsFqga6NqXNk2kZ5NqhMcZMVisRB+fNgAwEMXNWXMxc1KVOuAljUZ0LImAA6Hg19/3cyAznWx24v2pp5bK4Zza8WcUZtIgKja0B1mdRGYnILCrIhIBWUYBhm5+RzJdHAkK48jWXmkHsulZWIMzWq6eyHnbjrAkA8WeT1HqN3mCbP703N4/TfvoSDUbvOE2X7nJjD2kmYMbF2LhOjQU9ZpsVhO+bzIGSu4CEzTc8kpKMyKiFQwS1OO8PDUVWxKzcDpMoo8f3//czxhtiBohgfbSIoLJ6lKGNWjQrEdn6umec0Tf3qvGhnMsM51gRMBtCCHBlkttKsb5zk2PDiI27o3KPXPJuKTgum5NKOBnILCrIhIBRMVEsTmk4JsqN1KXHgwceHBVI0MpmbMiZ7SBtUiWDK2L1Uigk/bQ1o7LpzHL29RprWLlCr1zEoJKMyKiJjM6TJYlnLEMxygcUIU7wxpT8PqkSREhxIWbPP62iCblar/uBhKJGAUTM+VvhvysiA43Nx6pELSogkiIiZavfsoV709n+veWcDq3Uc9+y9olkC9ahGnDLIiAS+8CoQdH/5yZJu5tUiFpTArImKCjNx8nvhpLZe9MY8VO9OICA5i5+Ess8sSqXi0rK2choYZiIiUAcMwyHO6yMzJL7T/q0UprN2Tzsy1+9mX7l61amDrWoy7pBnxp5k1QKRSqtoQdv+tcbPilcKsiMgp5DtdTF22m4lztrA/PQcDiAsP5s+H+niOGfLBQhZtO4zxj9e5DIgMCeLpdif2/7h8Dwu2HgKgbtVwnry8BT20/KqId7oITE5DYVZEpBiGYTBj7X5enL6BzakZhZ4LtTsLPc7Ld5Gb7yr2PLn5hY8d2LoW7evGUa9aBJe2qkmoXWNiRU6pyvEp4jQ9l3ihMCsiUoxXZ270LDAQE2ZneO+G9GteA6vFvUTryf5vUFvy8l0n5m7FPW9riN2GDRfJM6Z5jh3UqU55fQSRwFDQM5uyAN7tDVe8Y249UuEozIqIHOdyGVit7kB6ZbvafPTndoZ2qcsdPRoSE1Z0udUC8VHex7o6HI5Sr1OkUqneFOLqu2cz2LOUoMk3Yq/1X7OrkgpEYVZEAla+04XDaRSa3upIZh5ZDieG4R7hahhwICOXT+dvx2a18vJ1rQGoXy2Cvx6+gIgQ/ZoUMZU9FEYsds9m8Pk1WA5t5rzc18F5Odi9/0+mVB76LS0ipc4wDLIdTjJznVSPOjGh/8y1+zmSlQcGuArC5PHngqwWru2Q5Dn2oz+3sSk1g7x8l2dzOF3kOd1jUz+7tZPn2IemrOSPjQfIc7rHrjqc7uMLVoLd+swAT4/roz+u4acVe4qt22qB//ZrQq3YMAAFWZGKwmaH+GYwaDLGh/2pnrEO1xdXQdMBULsjJHWiyPgfqTT0m1pEilVwAdQfGw/gcLrIdxrkuwxiwuw8ecWJJVGf+Gktm/anszfVxptb5nMk20FaVh4Op0HNmFAWjLnAc+xbczazLCWt2PeLDAkqFGaT16Uyb/PBYo+1WQsv23o4M489R3O8fhaHy0WI1d07a7daCA6yYgEKVn8Ntlnp3qQ6d/Vo6AmyIlIB1WiB86oPsE66EevOv2DnX+79TS6CG74Eqy6orIwUZkWkiNT0HMb9sJrpa/YXea5GdGihMLs05QjLd6YBFkgvfNV/Zm7hOVa7NqxGbJgdq8VyPEgev2DKQpGr+q9ql8h59aoQHGTFbrMQEmQ9ft99axiG54KrBy9uyog+jU48b7MWPt52osfmlevb8Mr1bc64bUTEXEbDC5jT9Gl61srBtmcJbJ4FG6fB7y9A7zFmlycmUJgVkSIe+2kN09fsJ8hqYVCnOiREh2K3WbBZrUSFFv61MfKCRhxMz2HNqhX07tqR6tFhxIUHExNmJ/wfS7He1/+cEtdwVbvaJT62YfXIEh8rIv7vWFgirs4DsNntsGISfHcn/P485GVAzwcgNMbsEqUcKcyKSBFjLm7G4cw8xg88l2Y1o095bJ+mCTgcDkL2Lqdrw6rYdUGGiJSn1jfA3hXw11uw4A1YORkuGA9tBmscbSWhn7JIJedyGXyxcAdP/7LWsy+pSjiT7uh82iArIlIhXPQsDJ4CVRtD5gH4cQT8+l/3dCUS8NQzK1KJ7TiUyUNTVnmWV72oRU3a140zuSoRkTPQuC/Unw8L34aZ4+HvDyE6EdoOgagEs6uTMqQwKxKgDmfmse9oDtFhQdSOCwfgWI6DrxalcDTbweHMPL5ftodsh5Mwu437+59Dm6RYc4sWETkbQcHQdRQYLpj1GPz2pHuLqQMXPQNNLz0xjYkEDIVZkQCQ73Sxft8xlqUcYWlKGstSjrD9UBYAQ86v65l9IDffxTO/ri/02s4NqvL81a2oUzW83OsWESkTXf8D+Xmw6mv3YgtHU2Dyv6B+T+j/DNRocdpTiP9QmBXxQw6nC/vx6aYOHMul54uzycpzFjmuWmRwodWvokPtXNU2kegwO9GhQTStGc3FLWp4prgSEQkIFgv0etC9ZafBvFfhr7dh2+/wTndo+y/oPVbDDwKEwqxIKTIMA+P46lbO4xcehASdCJNHsxzku9wrU7kM4/jmvgjLZrUUmrB/28FMsvOcuAyD3HwXa/ccZWlKGktTjnBOQhTvDu0AuANrREgQNouFNnViaVsnjnZ1YmmbFEdMeOGZBYKDrJpjVUQql7BYuPBx6HCze+jBmu9g6aeweip0uxc6Dwe7FkvxZwqzEjDy8l18u2QXH8/fxuFMBxc0jef5a1p5nm//5EwM3IGzQMG9rg2r8ebgdp79nZ6ZRVaus9AxhmGQn2/j2wNL+Oy28z3Hnv9MMgczcj3B9GStasfw44hunscDXp/L7rTsYutvHB/JzNE9PY/v+PRvNqVmFHtsVp7Ts2iAxWLhxxFdSYgK9SzZKiIi/xBXD679GDrdDdPHwO4l7vG0C96A0FgICgF7uHsLDofgCDj3Smh+ucmFy+kozIrfczhdTF26i9eTNxcKiuk5jkLHHcrM83qOjH+sVHUsJ7/YP9uDhZx8V6E9+S73Mq/Fcf1jWpiCKQ8tFrBaLNiOr4RltVgIsReeKa9KRDDVo0KwWSzYrBYaVI+gXZ042h7vdT15aEDNGPUqiIiUSJ1OcOssWP2tu6c2fTdkHyn+2DXfuQPtgJchomq5liklpzArfu2H5bt5ecZGUg67L3aqHhXC3T0b0rlh1SIrVc24twcF8a/wEFFLkZWqfh3Z3dMjW3Bofn4+v/8+h359WxY69ud/u3terRawWi0nQqoVgv7RUzrnvt5YLZRojOrkOzuf9hgRETkDViu0ug6aXQb714ArH5y5kJcFjkxwZEPqOvc42zXfwfY/4bLX4ZyLza5ciqEwK35tzZ50Ug5nUS0ymLt6NmRwp7qFLng6WZOEqBKft161iCL7HA4H1UKhRnRoof01YkKLHOuNTcMAREQqDnso1G7v/fmW18B3d8GB9fDVDRAcCVigagNoNhAa9IFabcBa/H93pHwozEqFk5qew9d/7yTlcBZpWQ7ScxxkO1zk5DnJdji5om0ioy9sAsCdPRpQLTKYf51fl/BgfZ1FRKQU1WoLd/wOs592j63NO34dw94V7u23pyAkBup1gwY9oX4PqN5Uc9mWM/3XX0yX43CSnu0g/niPZ3pOPi/N2Oj1+APHcj33q0aGcEePhmVeo4iIVFL2UOj3pHvmg5w0cDlh+zzYPAu2zYXco7DhF/cGEJngDrXn3QZ1zj/lqaV0KMyKKQ5m5PLb+lSS1+1n7qaD9DqnOm8Ndv+pp2H1CAZ1qkOtmFBiw4OJDrMTbrcRFmwj1G4lPqrkf9YXEREpFeFV3BtAtcbuqb5cTti7HLb+7p7DNuUvyNgPq75xbw0vcK9I1qDnKU8tZ0dhVsrNpv3HmLluP7PW7mfZzjROvtB/w75jhaaaeubKlt5PJCIiUhFYbZDY3r11Hw2OHNi1GJZ/CSu+gi3JsOU3uGWaemnLkMKslBnn8YUACtz37UpW7EzzPD63VjR9myXQt1kCLRKjtQqViIj4N3so1O/u3no+AL/81x1o//5IYbYMKcxKiRmGQVaek1C7zRNSV+8+yrKUIxzJcpCW5SAtK48jWXkcyXKQcjiLOff3IjrUvQrVJS1rEBdup2+zBC5oFq+5UUVEJHBVqQ+9xrjD7LofIfclCCn5rDpScgqzlVRuvpOjWY7jITSP1kmxhNrdU4usOmxh7ndrSM/JdwfUbHc4PZrlIM/pYua9PWh8fJqrWev2M2HWJq/vM3fjQS5pVROAO3o01MVaIiJSedTuAFUbw6FNsGEatLrW7IoCksKsn3O6DI5mF/SIOjianceRTAdHsvK4/rwkoo73in62YDtfLdrJ0Wz3c/9c3WrGvT0887DuyoRpG3Z7fc8jWSdW1mpaI5qLzq1BXISdmLBg4sLtxIUHExNup1ZMGM1rRZfBpxYREfEDFgs07ucOszv/UpgtIwqzFczBjFz2pGWTluUOnWnH/3zvvp/H+IHnEhcRDMBz/1vPO39swSh+JVV6NKnuCbOHMx2s3Zte6HmrBWLC3OHT4TyxRGuTGINm5zSialQoscfDaWy4ndhwd1gNs5+YHPqiFjW4qEWNUm4FERGRAFG7g/t212Jz6whgCrPlYMXONNbsSedIVp67ZzTzpF7ULAdf3X4+1aNCAHhz9mY++nO713Pd07uRJ8yG2W2eIBsVEkRsxPFe0eMBNSTI6nndwNY1aZUUQ9zxQBobFkxUaBDWYlakahgNA3o1wG63l14jiIiIVEZJHd23+1ZDXiYEF11hUs6Owmw5+H757lMG1MOZeZ4wGx8VSo3o0OM9oQW9oscD6PHHBW7qWo/B59chJsyO3Wb1dnoAGlSPpEH1yFL5PCIiIlJC0YkQVROO7YU9y6FeV7MrCjgKs+Xg3Fox9G0Wf1IoDS705/vacSeu6r+7V0Pu7lWyi6RiwtRzKiIiUqFZLFD7PPeMBrsWKcyWAYXZcnBN+9pc07622WWIiIiIGTxh9m+zKwlIp/7btIiIiIicnYJxszsX4fWqbTljCrMiIiIiZalma7DaITMV0lLMribgKMyKiIiIlCV7GNRo6b6vKbpKncKsiIiISFmrc777dvYzcGS7qaUEGoVZERERkbLWeQTE1IHDW+DNTvD7C+Bynf51cloKsyIiIiJlLSYRbv4F6naD/ByY/TSs+sbsqgKCwqyIiIhIeYitAzf9DOff43687kdz6wkQCrMiIiIi5cVigVbXu+9vmQ35uebWEwAUZkVERETKU83W7iVuHZmwfZ7Z1fg9hVkRERGR8mSxQON+7vsbp5lbSwBQmBUREREpb+dc7L5d9jl8PRQWvgup67RC2BkIMrsAERERkUqnfk+IrQtpO2DtD+4NILIGXP4GNL7Q3Pr8iMKsiIiISHkLDocRi2H3Utgxzz12NmUhZOyDb26CJv0hvKp7C40Fq837uUKiILoWhMdjc1W+C8oUZkVERETMEBQCdTu7tx73gyMHvrgGts+F1VN8Pp0duBQwNj4A0YnuqcC6/xdqdyj10isShVkRERGRisAeCv+aAut/gWN7IeuQe8tOA7yMpTUMyDkK6Xsw0vdgcWRiyT4C2Udg/2rY/ifcOh3im5XnJylXCrMiIiIiFUVQCLS46oxemp+Xx4yfvqVf55bYs/bD7y/Czr/g0yug31NQt4t7JbIAUyFmM3jzzTepV68eoaGhdOrUiUWLFp3y+G+++YamTZsSGhpKy5Yt+fXXX8upUhEREZEKymIhPygCqjeFRn3hxq+gaiP3ONypt8Gr58LnV7t7fp35ZldbakzvmZ08eTKjR49m4sSJdOrUiQkTJtC/f382bNhAfHx8kePnz5/PjTfeyLPPPsull17Kl19+yRVXXMHSpUtp0aKFCZ9AREREpAIKrwJDf4C5r8Duv2HvCtg8y71FJ7qHHgSFgj3M3SMcdPz25Mf2UPcxBVuDnu4LzioQ08PsK6+8wu23387NN98MwMSJE/nll1/48MMPeeihh4oc/9prr3HRRRdx//33A/Dkk08yc+ZM3njjDSZOnFiutYuIiIhUaDG14dJX3PcPb4W/P3LPbZu+27356t9LFWZPlpeXx5IlSxgzZoxnn9VqpW/fvixYsKDY1yxYsIDRo0cX2te/f3++//77Yo/Pzc0lN/fENBXp6eme+w6H4yyqD0wFbaK2KUpt453axju1jXdqG+/UNt6pbbw7bdtEJUHvR6H7A1i2/Q5Zh7HkZ0N+LuTnnLTlYnFkgzPXPcPCSc85rSFQDm3vy8/X1DB78OBBnE4nCQkJhfYnJCSwfv36Yl+zb9++Yo/ft29fscc/++yzPP7448U+N3PmzDOounJQ23intvFObeOd2sY7tY13ahvv1DbelbxtYo5vxbAe3+z/2P/HkjOuyxdZWVklPtb0YQZlbcyYMYV6ctPT00lKSgLgwgsvxG7/50+pcnM4HMycOVNtUwy1jXdqG+/UNt6pbbxT23intvEukNrm5L+kn46pYbZatWrYbDb2799faP/+/fupUaNGsa+pUaOGT8eHhIQQEhJS7HN2u93vf9hlRW3jndrGO7WNd2ob79Q23qltvFPbeBcIbeNL/aZOzRUcHEz79u1JTk727HO5XCQnJ9O5c+diX9O5c+dCx4O7O93b8SIiIiISuEwfZjB69GiGDRtGhw4d6NixIxMmTCAzM9Mzu8HQoUNJTEzk2WefBWDUqFH07NmTl19+mUsuuYRJkybx999/8+6775r5MURERETEBKaH2euvv54DBw7w6KOPsm/fPtq0acO0adM8F3mlpKRgtZ7oQO7SpQtffvklY8eO5eGHH6Zx48Z8//33mmNWREREpBIyPcwCjBgxghEjRhT73Jw5c4rsu/baa7n22mvLuCoRERERqegqxHK2IiIiIiJnQmFWRERERPyWwqyIiIiI+C2FWRERERHxWwqzIiIiIuK3FGZFRERExG8pzIqIiIiI31KYFRERERG/pTArIiIiIn5LYVZERERE/JbCrIiIiIj4LYVZEREREfFbQWYXUN4MwwAgKyuL9PR07Ha7yRVVLA6HQ23jhdrGO7WNd2ob79Q23qltvFPbeBdIbZOeng6cyG2nYjFKclQA2bVrF0lJSWaXISIiIiKnsXPnTmrXrn3KYypdmHW5XGzYsIHmzZuzc+dOoqOjzS6pQklPTycpKUltUwy1jXdqG+/UNt6pbbxT23intvEukNrGMAyOHTtGrVq1sFpPPSq20g0zsFqtJCYmAhAdHe33P+yyorbxTm3jndrGO7WNd2ob79Q23qltvAuUtomJiSnRcboATERERET8lsKsiIiIiPitShlmQ0JCGD9+PCEhIWaXUuGobbxT23intvFObeOd2sY7tY13ahvvKmvbVLoLwEREREQkcFTKnlkRERERCQwKsyIiIiLitxRmRURERMRvKcyKiIiIiN8KmDD75ptvUq9ePUJDQ+nUqROLFi3yeuyaNWu4+uqrqVevHhaLhQkTJpzy3M899xwWi4X//Oc/pVt0OfGlbd577z26d+9OXFwccXFx9O3b95TH33XXXSVqw4rKl7aZOnUqHTp0IDY2loiICNq0acNnn33m9fjK1DYnmzRpEhaLhSuuuMLrMZWpbT7++GMsFkuhLTQ01OvxlaltANLS0hg+fDg1a9YkJCSEJk2a8OuvvxZ7bGX6XdyrV68i3xuLxcIll1xS7PGV7XszYcIEzjnnHMLCwkhKSuLee+8lJyen2GMr0/fG4XDwxBNP0LBhQ0JDQ2ndujXTpk3zery/t42HEQAmTZpkBAcHGx9++KGxZs0a4/bbbzdiY2ON/fv3F3v8okWLjPvuu8/46quvjBo1ahivvvqq13MvWrTIqFevntGqVStj1KhRZfMBypCvbTNo0CDjzTffNJYtW2asW7fOuOmmm4yYmBhj165dRY6dOnWq0bp1a6NWrVqnbMOKyte2mT17tjF16lRj7dq1xubNm40JEyYYNpvNmDZtWpFjK1vbFNi2bZuRmJhodO/e3bj88suLPaaytc1HH31kREdHG3v37vVs+/btK/bYytY2ubm5RocOHYwBAwYY8+bNM7Zt22bMmTPHWL58eZFjK9vv4kOHDhX6zqxevdqw2WzGRx99VOTYyva9+eKLL4yQkBDjiy++MLZt22ZMnz7dqFmzpnHvvfcWObayfW8eeOABo1atWsYvv/xibNmyxXjrrbeM0NBQY+nSpUWO9fe2OVlAhNmOHTsaw4cP9zx2Op1GrVq1jGefffa0r61bt67Xf/zHjh0zGjdubMycOdPo2bOnX/6wz6ZtDMMw8vPzjaioKOOTTz4ptH/Xrl1GYmKisXr16lO2YUV2tm1jGIbRtm1bY+zYsYX2Vda2yc/PN7p06WK8//77xrBhw4oNs5WxbT766CMjJibmtOetjG3z9ttvGw0aNDDy8vJOeV79LjaMV1991YiKijIyMjIK7a+M35vhw4cbffr0KbRv9OjRRteuXQvtq4zfm5o1axpvvPFGoX1XXXWVMXjw4EL7AqFtTub3wwzy8vJYsmQJffv29eyzWq307duXBQsWnNW5hw8fziWXXFLo3P6kNNomKysLh8NBlSpVPPtcLhdDhgzh/vvv59xzzy31usvD2baNYRgkJyezYcMGevTo4dlfmdvmiSeeID4+nltvvbXY5ytz22RkZFC3bl2SkpK4/PLLWbNmTaHnK2vb/Pjjj3Tu3Jnhw4eTkJBAixYteOaZZ3A6nYWO0+9i+OCDD7jhhhuIiIjw7Kus35suXbqwZMkSz5/bt27dyq+//sqAAQMKHVcZvze5ublFhjGFhYUxb968Qvv8vW3+KcjsAs7WwYMHcTqdJCQkFNqfkJDA+vXrz/i8kyZNYunSpSxevPhsSzRNabTNgw8+SK1atQp94Z9//nmCgoIYOXJkqdZbns60bY4ePUpiYiK5ubnYbDbeeustLrzwQs/zlbVt5s2bxwcffMDy5cu9nreyts0555zDhx9+SKtWrTh69CgvvfQSXbp0Yc2aNdSuXRuovG2zdetWfvvtNwYPHsyvv/7K5s2bueeee3A4HIwfPx7Q72KARYsWsXr1aj744INC+yvr92bQoEEcPHiQbt26YRgG+fn53HXXXTz88MOeYyrr96Z///688sor9OjRg4YNG5KcnMzUqVML/Q9iILTNP/l9mC0LO3fuZNSoUcycOfOUF2oEuueee45JkyYxZ84cTzssWbKE1157jaVLl2KxWEyusPxFRUWxfPlyMjIySE5OZvTo0TRo0IBevXpV2rY5duwYQ4YM4b333qNatWrFHlNZ2wagc+fOdO7c2fO4S5cuNGvWjHfeeYcnn3yyUreNy+UiPj6ed999F5vNRvv27dm9ezcvvvgi48eP1+/i4z744ANatmxJx44dPfsq8/dmzpw5PPPMM7z11lt06tSJzZs3M2rUKJ588knGjRtXqb83r732GrfffjtNmzbFYrHQsGFDbr75Zj788EMggPON2eMczlZubq5hs9mM7777rtD+oUOHGpdddtlpX1/cGKPvvvvOAAybzebZAMNisRg2m83Iz88vxU9Qds6mbV588UUjJibGWLx4caH9r776qqcdTm4bq9Vq1K1bt5Q/Qdk52+9NgVtvvdXo16+fYRiVt22WLVtW5N+LxWLxtMXmzZsrbdt4c8011xg33HCDYRiV93tjGIbRo0cP44ILLii079dffzUAIzc3V7+LDcPIyMgwoqOjjQkTJhTaX5m/N926dTPuu+++Qvs+++wzIywszHA6nfreGIaRnZ1t7Nq1y3C5XMYDDzxgNG/e3DCMwMk3/+T3Y2aDg4Np3749ycnJnn0ul4vk5ORCvSG+uOCCC1i1ahXLly/3bB06dGDw4MEsX74cm81WWuWXqTNtmxdeeIEnn3ySadOm0aFDh0LPDRkyhJUrVxZqm1q1anH//fczffr0Mvsspa20vjcul4vc3Fyg8rZN06ZNi/x7ueyyy+jduzfLly8nKSmp0rZNcZxOJ6tWraJmzZpA5f3eAHTt2pXNmzfjcrk8+zZu3EjNmjUJDg6u9L+LAb755htyc3P517/+VWh/Zf7eZGVlYbUWji8F3wXDMPS9AUJDQ0lMTCQ/P58pU6Zw+eWXA4GTb4owO02XhkmTJhkhISHGxx9/bKxdu9a44447jNjYWM/0N0OGDDEeeughz/G5ubnGsmXLjGXLlhk1a9Y07rvvPmPZsmXGpk2bvL6Hv17t52vbPPfcc0ZwcLDx7bffFpoW5tixY17fw1+voPW1bZ555hljxowZxpYtW4y1a9caL730khEUFGS89957Xt+jsrTNP3mbzeBklaVtHn/8cWP69OnGli1bjCVLlhg33HCDERoaaqxZs8bre1SWtklJSTGioqKMESNGGBs2bDB+/vlnIz4+3njqqae8vkdl+V1coFu3bsb1119foveoLN+b8ePHG1FRUcZXX31lbN261ZgxY4bRsGFD47rrrvP6HpXle/PXX38ZU6ZMMbZs2WL88ccfRp8+fYz69esbR44c8foe/to2JwuIMbPXX389Bw4c4NFHH2Xfvn20adOGadOmeQZNp6SkFPq/uD179tC2bVvP45deeomXXnqJnj17MmfOnPIuv0z52jZvv/02eXl5XHPNNYXOM378eB577LHyLL3M+do2mZmZ3HPPPezatYuwsDCaNm3K559/zvXXX2/WRygzvrZNZeJr2xw5coTbb7+dffv2ERcXR/v27Zk/fz7Nmzc36yOUGV/bJikpienTp3PvvffSqlUrEhMTGTVqFA8++KBZH6HMnMm/qQ0bNjBv3jxmzJhhRsnlxte2GTt2LBaLhbFjx7J7926qV6/OwIEDefrpp836CGXG17bJyclh7NixbN26lcjISAYMGMBnn31GbGysSZ+gfFgMwzDMLkJERERE5ExUzq4VEREREQkICrMiIiIi4rcUZkVERETEbynMioiIiIjfUpgVEREREb+lMCsiIiIifkthVkRERET8lsKsiMhJ5syZg8ViIS0trVzf9+OPPz7ric23b9+OxWJh+fLlXo8pj89XkjpEREqLwqyIVBoWi+WUW6CtciciUhkExHK2IiIlsXfvXs/9yZMn8+ijj7JhwwbPvsjISP7++2+fz5uXl0dwcHCp1CgiIr5Rz6yIVBo1atTwbDExMVgslkL7IiMjPccuWbKEDh06EB4eTpcuXQqF3scee4w2bdrw/vvvU79+fUJDQwFIS0vjtttuo3r16kRHR9OnTx9WrFjhed2KFSvo3bs3UVFRREdH0759+yLhefr06TRr1ozIyEguuuiiQgHc5XLxxBNPULt2bUJCQjzrtJ/Kr7/+SpMmTQgLC6N3795s3779lMcPGjSI66+/vtA+h8NBtWrV+PTTTwGYNm0a3bp1IzY2lqpVq3LppZeyZcsWr+csbgjF999/j8ViKbTvhx9+oF27doSGhtKgQQMef/xx8vPzT1mviIjCrIhIMR555BFefvll/v77b4KCgrjlllsKPb9582amTJnC1KlTPWNDr732WlJTU/nf//7HkiVLaNeuHRdccAGHDx8GYPDgwdSuXZvFixezZMkSHnroIex2u+ecWVlZvPTSS3z22Wf88ccfpKSkcN9993mef+2113j55Zd56aWXWLlyJf379+eyyy5j06ZNxX6GnTt3ctVVVzFw4ECWL1/ObbfdxkMPPXTKzz148GB++uknMjIyPPumT59OVlYWV155JQCZmZmMHj2av//+m+TkZKxWK1deeSUul6vkDfwPc+fOZejQoYwaNYq1a9fyzjvv8PHHH/P000+f8TlFpJIwREQqoY8++siIiYkpsn/27NkGYMyaNcuz75dffjEAIzs72zAMwxg/frxht9uN1NRUzzFz5841oqOjjZycnELna9iwofHO/7d3fyFNdnEcwL9Ob7QamI2xiVtqPZC6CmHpGroLhRISKm26DYRgQXQxUBmiF02lJIroSrB2oVjRvBBL/BN1oRcKhUgNI5kGoyErFhLY8iKh8168+OByTd8X4eV5+35gsOfsnPM7Zzf77ZzzbPfvCyGEOHDggBgYGPjteACIDx8+yGW9vb1Cq9XK13q9Xty8eTOhndlsFteuXRNCCBEOhwUA8ebNGyGEEO3t7aKoqCihfltbmwAgvn79mnQcGxsb4tChQ2JwcFAuczgcoqGhIWl9IYT48uWLACAWFhaSjiPZez0yMiK2fgRVVVWJnp6ehDoPHz4UOp3ut3GJiIQQgiuzRERJHD9+XH6u0+kAALFYTC4zGo3QaDTydTAYRDweR05ODvbv3y8/wuGwvAXf0tICt9uN6upq3Lp1a9vWfFZWFgoLCxPibsZcW1tDNBqF1WpNaGO1WrG4uJh0DouLiygrK0sos1gsKeedkZEBu92Ox48fA/h7FfbZs2dwuVxyneXlZTgcDhQUFECtVuPw4cMAgEgkkrLvVILBILq7uxPeuytXruDTp09YX1//1/0S0f8fbwAjIkpi6/b/5tnOrdvo+/btS6gfj8eh0+kwPT29ra/N86KdnZ1wOp0YHx/H5OQkfD4fAoGAvH2/NeZmXCHEXkznH3G5XLDZbIjFYnj58iUyMzNx9uxZ+fXa2loYjUb4/X7o9Xr8/PkTJSUl+PHjR9L+VCrVtnlsbGwkXMfjcXR1deHixYvb2m+eSSYiSobJLBHRHigtLcXnz5+RkZEhr1QmI0kSJElCc3MzHA4H+vv75WQ2FbVaDb1ej9nZWdhsNrl8dnYWp06dStrm2LFjGB0dTSh79erVjrFOnz6NvLw8DA0NYXJyEpcuXZIT7dXVVYRCIfj9flRUVAAAZmZmUvan0Wjw7ds3fP/+Xf4S8Otv0JaWliIUCuHIkSM7jo+IaCsms0REe6C6uhoWiwXnz5/H7du3IUkSotEoxsfHceHCBRQXF8Pr9aK+vh75+flYWVnB3Nwc6urqdh3D6/XC5/OhsLAQJ0+eRH9/P96+fSsfCfjV1atXcffuXXi9XrjdbszPz2NgYGBXsZxOJ/r6+rC0tISpqSm5PDs7Gzk5OXjw4AF0Oh0ikciON5WVlZUhKysLHR0d8Hg8eP369bZxXL9+HefOnYPBYEB9fT1UKhWCwSDevXuHGzdu7GrMRPRn4plZIqI9kJaWhomJCVRWVuLy5cuQJAmNjY34+PEjtFot0tPTsbq6iqamJkiSBLvdjpqaGnR1de06hsfjQUtLC1pbW2EymfD8+XOMjo7i6NGjSesbDAYMDw/j6dOnOHHiBPr6+tDT07OrWC6XC+/fv0dubm7COV2VSoVAIID5+XmUlJSgubkZd+7cSdnXwYMH8ejRI0xMTMBkMuHJkyfb/qDizJkzGBsbw4sXL2A2m1FeXo579+7BaDTuarxE9OdKE//FgSwiIiIioj3AlVkiIiIiUiwms0RERESkWExmiYiIiEixmMwSERERkWIxmSUiIiIixWIyS0RERESKxWSWiIiIiBSLySwRERERKRaTWSIiIiJSLCazRERERKRYTGaJiIiISLGYzBIRERGRYv0FfpayvQ7tnnIAAAAASUVORK5CYII=\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["check_result()"]},{"cell_type":"code","execution_count":null,"id":"7bbf7a85","metadata":{"ExecuteTime":{"start_time":"2022-12-26T10:44:38.427Z"},"id":"7bbf7a85","outputId":"41d5159b-6c1e-44f9-de71-3bc6da8ae629"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0    286743\n","1.0    286743\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71681\n","1.0     4049\n","Name: HEARTDISEASE, dtype: int64\n","Fitting 3 folds for each of 40 candidates, totalling 120 fits\n","[CV] END .........class_weight=balanced, kernel=linear, nu=0; total time=   0.0s\n","[CV] END .........class_weight=balanced, kernel=linear, nu=0; total time=   0.0s\n","[CV] END .........class_weight=balanced, kernel=linear, nu=0; total time=   0.0s\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\svm\\_base.py:301: ConvergenceWarning: Solver terminated early (max_iter=100).  Consider pre-processing your data with StandardScaler or MinMaxScaler.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END ......class_weight=balanced, kernel=linear, nu=0.01; total time= 5.7min\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\svm\\_base.py:301: ConvergenceWarning: Solver terminated early (max_iter=100).  Consider pre-processing your data with StandardScaler or MinMaxScaler.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END ......class_weight=balanced, kernel=linear, nu=0.01; total time= 5.6min\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\svm\\_base.py:301: ConvergenceWarning: Solver terminated early (max_iter=100).  Consider pre-processing your data with StandardScaler or MinMaxScaler.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END ......class_weight=balanced, kernel=linear, nu=0.01; total time= 5.9min\n"]},{"name":"stderr","output_type":"stream","text":["D:\\study\\Anaconda\\envs\\multicampus\\lib\\site-packages\\sklearn\\svm\\_base.py:301: ConvergenceWarning: Solver terminated early (max_iter=100).  Consider pre-processing your data with StandardScaler or MinMaxScaler.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["[CV] END .......class_weight=balanced, kernel=linear, nu=0.1; total time=57.5min\n"]}],"source":["params = {\n","    \"nu\": [0, .01, .1, 1],\n","    \"kernel\": [\"linear\", \"poly\", \"rbf\", \"sigmoid\", \"precomputed\"],\n","    \"class_weight\": [\"balanced\", None],\n","}\n","# probability=True\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","model = NuSVC(probability=True, max_iter=100)\n","model_list, result = grid_search_eval(model, params)"]},{"cell_type":"code","execution_count":null,"id":"e895d144","metadata":{"ExecuteTime":{"start_time":"2022-12-26T10:44:39.564Z"},"id":"e895d144"},"outputs":[],"source":["check_result()"]},{"cell_type":"code","execution_count":null,"id":"73739df0","metadata":{"ExecuteTime":{"start_time":"2022-12-26T10:44:47.097Z"},"id":"73739df0"},"outputs":[],"source":["params = {\n","    \"penalty\": [\"l1\", \"l2\"],\n","    \"loss\": [\"hinge\", \"squared_hinge\"],\n","    \"C\": [0, .01, .1, 1, 10, 100],\n","    \"class_weight\": [\"balanced\", None],\n","}\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","model = LinearSVC(max_iter=100)\n","model_list, result = grid_search_eval(model, params)"]},{"cell_type":"code","execution_count":null,"id":"d6ff85bc","metadata":{"ExecuteTime":{"start_time":"2022-12-26T10:44:51.564Z"},"id":"d6ff85bc"},"outputs":[],"source":["check_result()"]},{"cell_type":"markdown","id":"79324bf3","metadata":{"ExecuteTime":{"end_time":"2022-12-23T07:17:42.418304Z","start_time":"2022-12-23T07:17:42.401992Z"},"id":"79324bf3"},"source":["# 서대훈"]},{"cell_type":"markdown","id":"1fd096ee","metadata":{"id":"1fd096ee"},"source":["## LightGBM \n","어떤 하이퍼 파라미터를 어떤 값 중에서 선택했는지 여기에 정리\n","\n","- 예시\n","    - criterion: ```\"gini\", \"entropy\", \"log_loss\"```"]},{"cell_type":"code","execution_count":null,"metadata":{"ExecuteTime":{"end_time":"2022-12-23T07:13:20.852482Z","start_time":"2022-12-23T07:13:16.623714Z"},"id":"27249739","outputId":"51daf5e9-db1d-426d-e5dc-020e59fd0eaa"},"outputs":[{"name":"stderr","output_type":"stream","text":["C:\\anaconda3\\envs\\data_venv\\lib\\site-packages\\lightgbm\\sklearn.py:726: UserWarning: 'early_stopping_rounds' argument is deprecated and will be removed in a future release of LightGBM. Pass 'early_stopping()' callback via 'callbacks' argument instead.\n","  _log_warning(\"'early_stopping_rounds' argument is deprecated and will be removed in a future release of LightGBM. \"\n","C:\\anaconda3\\envs\\data_venv\\lib\\site-packages\\lightgbm\\sklearn.py:736: UserWarning: 'verbose' argument is deprecated and will be removed in a future release of LightGBM. Pass 'log_evaluation()' callback via 'callbacks' argument instead.\n","  _log_warning(\"'verbose' argument is deprecated and will be removed in a future release of LightGBM. \"\n"]},{"name":"stdout","output_type":"stream","text":["[1]\tvalid_0's binary_logloss: 0.671363\n","[2]\tvalid_0's binary_logloss: 0.653637\n","[3]\tvalid_0's binary_logloss: 0.638937\n","[4]\tvalid_0's binary_logloss: 0.626552\n","[5]\tvalid_0's binary_logloss: 0.615751\n","[6]\tvalid_0's binary_logloss: 0.607074\n","[7]\tvalid_0's binary_logloss: 0.599127\n","[8]\tvalid_0's binary_logloss: 0.592165\n","[9]\tvalid_0's binary_logloss: 0.585483\n","[10]\tvalid_0's binary_logloss: 0.580156\n","[11]\tvalid_0's binary_logloss: 0.575325\n","[12]\tvalid_0's binary_logloss: 0.571076\n","[13]\tvalid_0's binary_logloss: 0.566886\n","[14]\tvalid_0's binary_logloss: 0.563374\n","[15]\tvalid_0's binary_logloss: 0.559794\n","[16]\tvalid_0's binary_logloss: 0.555884\n","[17]\tvalid_0's binary_logloss: 0.552\n","[18]\tvalid_0's binary_logloss: 0.548429\n","[19]\tvalid_0's binary_logloss: 0.545873\n","[20]\tvalid_0's binary_logloss: 0.543476\n","[21]\tvalid_0's binary_logloss: 0.540095\n","[22]\tvalid_0's binary_logloss: 0.537092\n","[23]\tvalid_0's binary_logloss: 0.534304\n","[24]\tvalid_0's binary_logloss: 0.531947\n","[25]\tvalid_0's binary_logloss: 0.529856\n","[26]\tvalid_0's binary_logloss: 0.527872\n","[27]\tvalid_0's binary_logloss: 0.5254\n","[28]\tvalid_0's binary_logloss: 0.52338\n","[29]\tvalid_0's binary_logloss: 0.522088\n","[30]\tvalid_0's binary_logloss: 0.519947\n","[31]\tvalid_0's binary_logloss: 0.518638\n","[32]\tvalid_0's binary_logloss: 0.517122\n","[33]\tvalid_0's binary_logloss: 0.515715\n","[34]\tvalid_0's binary_logloss: 0.51367\n","[35]\tvalid_0's binary_logloss: 0.512907\n","[36]\tvalid_0's binary_logloss: 0.511729\n","[37]\tvalid_0's binary_logloss: 0.510321\n","[38]\tvalid_0's binary_logloss: 0.508688\n","[39]\tvalid_0's binary_logloss: 0.508051\n","[40]\tvalid_0's binary_logloss: 0.506714\n","[41]\tvalid_0's binary_logloss: 0.505854\n","[42]\tvalid_0's binary_logloss: 0.505348\n","[43]\tvalid_0's binary_logloss: 0.50435\n","[44]\tvalid_0's binary_logloss: 0.503298\n","[45]\tvalid_0's binary_logloss: 0.502333\n","[46]\tvalid_0's binary_logloss: 0.501881\n","[47]\tvalid_0's binary_logloss: 0.501189\n","[48]\tvalid_0's binary_logloss: 0.500228\n","[49]\tvalid_0's binary_logloss: 0.499563\n","[50]\tvalid_0's binary_logloss: 0.499106\n","[51]\tvalid_0's binary_logloss: 0.498058\n","[52]\tvalid_0's binary_logloss: 0.497714\n","[53]\tvalid_0's binary_logloss: 0.497044\n","[54]\tvalid_0's binary_logloss: 0.496287\n","[55]\tvalid_0's binary_logloss: 0.495948\n","[56]\tvalid_0's binary_logloss: 0.495473\n","[57]\tvalid_0's binary_logloss: 0.494752\n","[58]\tvalid_0's binary_logloss: 0.493943\n","[59]\tvalid_0's binary_logloss: 0.49339\n","[60]\tvalid_0's binary_logloss: 0.493134\n","[61]\tvalid_0's binary_logloss: 0.492687\n","[62]\tvalid_0's binary_logloss: 0.492168\n","[63]\tvalid_0's binary_logloss: 0.491896\n","[64]\tvalid_0's binary_logloss: 0.49104\n","[65]\tvalid_0's binary_logloss: 0.490818\n","[66]\tvalid_0's binary_logloss: 0.490738\n","[67]\tvalid_0's binary_logloss: 0.490207\n","[68]\tvalid_0's binary_logloss: 0.48999\n","[69]\tvalid_0's binary_logloss: 0.489687\n","[70]\tvalid_0's binary_logloss: 0.489268\n","[71]\tvalid_0's binary_logloss: 0.488822\n","[72]\tvalid_0's binary_logloss: 0.488591\n","[73]\tvalid_0's binary_logloss: 0.48838\n","[74]\tvalid_0's binary_logloss: 0.487875\n","[75]\tvalid_0's binary_logloss: 0.487418\n","[76]\tvalid_0's binary_logloss: 0.487112\n","[77]\tvalid_0's binary_logloss: 0.487062\n","[78]\tvalid_0's binary_logloss: 0.486463\n","[79]\tvalid_0's binary_logloss: 0.486174\n","[80]\tvalid_0's binary_logloss: 0.485903\n","[81]\tvalid_0's binary_logloss: 0.48572\n","[82]\tvalid_0's binary_logloss: 0.485421\n","[83]\tvalid_0's binary_logloss: 0.485254\n","[84]\tvalid_0's binary_logloss: 0.484739\n","[85]\tvalid_0's binary_logloss: 0.484462\n","[86]\tvalid_0's binary_logloss: 0.484287\n","[87]\tvalid_0's binary_logloss: 0.484029\n","[88]\tvalid_0's binary_logloss: 0.483955\n","[89]\tvalid_0's binary_logloss: 0.483928\n","[90]\tvalid_0's binary_logloss: 0.483701\n","[91]\tvalid_0's binary_logloss: 0.483474\n","[92]\tvalid_0's binary_logloss: 0.483367\n","[93]\tvalid_0's binary_logloss: 0.483374\n","[94]\tvalid_0's binary_logloss: 0.482876\n","[95]\tvalid_0's binary_logloss: 0.482831\n","[96]\tvalid_0's binary_logloss: 0.48248\n","[97]\tvalid_0's binary_logloss: 0.482472\n","[98]\tvalid_0's binary_logloss: 0.482188\n","[99]\tvalid_0's binary_logloss: 0.482019\n","[100]\tvalid_0's binary_logloss: 0.481815\n","0.7563298421287515\n","0.7441700779083587\n","오차 행렬\n","[[53849 17759]\n"," [ 1615  2507]]\n","정확도: 0.7442, 정밀도: 0.1237, 재현율: 0.6082, F1: 0.2056, AUC:0.7489\n","분류 임계값 : 0.4\n","오차 행렬\n","[[48627 22981]\n"," [ 1215  2907]]\n","정확도: 0.6805, 정밀도: 0.1123, 재현율: 0.7052, F1: 0.1937, AUC:0.7489\n","분류 임계값 : 0.5\n","오차 행렬\n","[[53849 17759]\n"," [ 1615  2507]]\n","정확도: 0.7442, 정밀도: 0.1237, 재현율: 0.6082, F1: 0.2056, AUC:0.7489\n","분류 임계값 : 0.6\n","오차 행렬\n","[[62151  9457]\n"," [ 2388  1734]]\n","정확도: 0.8436, 정밀도: 0.1549, 재현율: 0.4207, F1: 0.2265, AUC:0.7489\n","분류 임계값 : 0.625\n","오차 행렬\n","[[63421  8187]\n"," [ 2549  1573]]\n","정확도: 0.8582, 정밀도: 0.1612, 재현율: 0.3816, F1: 0.2266, AUC:0.7489\n","분류 임계값 : 0.65\n","오차 행렬\n","[[64414  7194]\n"," [ 2716  1406]]\n","정확도: 0.8691, 정밀도: 0.1635, 재현율: 0.3411, F1: 0.2210, AUC:0.7489\n","분류 임계값 : 0.675\n","오차 행렬\n","[[65210  6398]\n"," [ 2862  1260]]\n","정확도: 0.8777, 정밀도: 0.1645, 재현율: 0.3057, F1: 0.2139, AUC:0.7489\n","분류 임계값 : 0.7\n","오차 행렬\n","[[66305  5303]\n"," [ 3028  1094]]\n","정확도: 0.8900, 정밀도: 0.1710, 재현율: 0.2654, F1: 0.2080, AUC:0.7489\n","분류 임계값 : 0.8\n","오차 행렬\n","[[70721   887]\n"," [ 3864   258]]\n","정확도: 0.9373, 정밀도: 0.2253, 재현율: 0.0626, F1: 0.0980, AUC:0.7489\n","분류 임계값 : 0.9\n"]},{"name":"stderr","output_type":"stream","text":["C:\\anaconda3\\envs\\data_venv\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"name":"stdout","output_type":"stream","text":["오차 행렬\n","[[71608     0]\n"," [ 4122     0]]\n","정확도: 0.9456, 정밀도: 0.0000, 재현율: 0.0000, F1: 0.0000, AUC:0.7489\n"]}],"source":["from lightgbm import LGBMClassifier\n","\n","model = LGBMClassifier(n_estimators=100, max_depth=5, min_child_samples=15, num_leaves=9)\n","\n","evals = [(X_test, y_test)]\n","model.fit(X_train, y_train,\n","         early_stopping_rounds=100,\n","         eval_metric = 'logloss',\n","         eval_set = evals,\n","         verbose = True)\n","\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test) #predict()는 그 데이터가 0이냐 1이냐 라벨로 결과를 주고\n","pred_proba = model.predict_proba(X_test)[:,1] #predict_proba는 0일 확률과 1일 확률을 둘이 합해서 1이 나오게끔 숫자를 각각 넘겨준다. 뒤에 [:,1]을 주는 이유는 0일 확률이나 1일 확률 중에 1일 확률 하나만 갖고오기 위함이다.\n","\n","get_clf_eval(y_test, pred, pred_proba)\n","\n","# 임계값 조정 예시 #임곗값은 머신러닝_04_0_0 참고\n","thresholds = [0.4, 0.5, 0.6, 0.625, 0.65, 0.675, 0.7, 0.8, 0.9]\n","get_eval_by_threshold(y_test, pred, pred_proba, thresholds) # pred는 X_test로 이진분류"],"id":"27249739"},{"cell_type":"code","execution_count":null,"metadata":{"id":"0fbb07c6-40c8-4394-8bb7-714e99532001","outputId":"62c7c7a4-57aa-4bca-e51b-d1d4e49cbe73"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# 임계값 그래프\n","precision_recall_curve_plot(y_test, pred_proba)"],"id":"0fbb07c6-40c8-4394-8bb7-714e99532001"},{"cell_type":"markdown","id":"af62c849","metadata":{"ExecuteTime":{"end_time":"2022-12-23T06:30:17.390180Z","start_time":"2022-12-23T06:30:17.382142Z"},"id":"af62c849"},"source":["## Random Forest"]},{"cell_type":"code","execution_count":null,"id":"85ef48d6","metadata":{"ExecuteTime":{"end_time":"2022-12-23T06:31:47.526489Z","start_time":"2022-12-23T06:31:11.700919Z"},"id":"85ef48d6"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","get_clf_eval(y_test, pred, pred_proba)"]},{"cell_type":"markdown","id":"237db66e","metadata":{"id":"237db66e"},"source":["# 손지호"]},{"cell_type":"markdown","id":"aa9df1a5","metadata":{"id":"aa9df1a5"},"source":["## Logistic Regression"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3ddbcc8a-e333-4459-bdf1-a33ebc81e2a3","outputId":"603e444e-a7b7-4b6f-bdda-82277af623c4"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.7084812306919853\n","0.707236233989172\n","오차 행렬\n","[[50670 20956]\n"," [ 1215  2889]]\n","정확도: 0.7072, 정밀도: 0.1212, 재현율: 0.7039, F1: 0.2067, AUC:0.7764\n","분류 임계값 : 0.78\n","오차 행렬\n","[[50670 20956]\n"," [ 1215  2889]]\n","정확도: 0.7072, 정밀도: 0.1212, 재현율: 0.7039, F1: 0.2067, AUC:0.6002\n","분류 임계값 : 0.8\n","오차 행렬\n","[[50670 20956]\n"," [ 1215  2889]]\n","정확도: 0.7072, 정밀도: 0.1212, 재현율: 0.7039, F1: 0.2067, AUC:0.5903\n","분류 임계값 : 0.82\n","오차 행렬\n","[[50670 20956]\n"," [ 1215  2889]]\n","정확도: 0.7072, 정밀도: 0.1212, 재현율: 0.7039, F1: 0.2067, AUC:0.5752\n"]}],"source":["from sklearn.linear_model import LogisticRegression\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","\n","model = LogisticRegression()\n","model.fit(X_train, y_train)\n","print(model.score(X_train, y_train))\n","print(model.score(X_test, y_test))\n","\n","pred = model.predict(X_test)\n","pred_proba = model.predict_proba(X_test)[:,1]\n","\n","get_clf_eval(y_test, pred, pred_proba)\n","\n","# 임계값 조정\n","thresholds = [0.78, 0.8, 0.82]\n","get_eval_by_threshold(y_test, pred, pred_proba, thresholds)"],"id":"3ddbcc8a-e333-4459-bdf1-a33ebc81e2a3"},{"cell_type":"code","execution_count":null,"metadata":{"id":"930eb89b-b144-47ba-abb6-44e99b3c8b6c","outputId":"5f979fc4-01e8-4e32-849b-e02e0190fedf"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# 임계값 그래프\n","precision_recall_curve_plot(y_test, pred_proba)"],"id":"930eb89b-b144-47ba-abb6-44e99b3c8b6c"},{"cell_type":"markdown","id":"a5bb5c18","metadata":{"id":"a5bb5c18"},"source":["## XGBClassifier"]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"jupyter":{"outputs_hidden":true},"tags":[],"id":"ac3bb2c2-6fbb-438c-ada8-94d136a10a76","outputId":"4ff392b8-d198-438c-fa4e-4ed7b6528cbc","colab":{"base_uri":"https://localhost:8080/","height":353,"referenced_widgets":["ba399598399448a8b56607d210dd58c9","9f6e834faed3429eb2ba9df6dd4f94a2","171f55032ed24fd3ba21e1aa61ef2f43","a7545db2774b4e9d9d6df8be7dcdc243","7514986b8d6347ffba2ef61003127ce5","5947ffa6424d4b5b87072e5b8f281964","0189f161a5fd4e12be7d354eb718768e","78f1006f018946579cbff69f6d38cc26","9a2746ec227a45e8933c2974b0981b85","8ae63feed1794c729c6c9742b7335f68","3a09c96d9e3c47599150ce7b6ba23d27","5bcfd16eee3947c7b2732b33655450ee","f1fc063dbd47496eafea104e7e96898c","befe204249f34250b1f2e2fc32b524dc","20c750654d884a59b5e3e98b64da07de","10e1ba4f7eab4838a5daf7d398dd57cf","488ec24cc09f42f59cab1dbb59204741","f5157b8c03884294b7170d1b73715483","abe902e11ea4472ab9db08bf46d80da0","583061bea71549c48b4e63506b050cfd","cdcd2a8f3488424da82bfd09b5b601d4","5f40042576be40f685988c3c1c6bedba","0df21aba9604450fbffff4ed6d806cb6","6607f6dbaf434a528673c670d7fa8f57","f5e2df3b9221476ba04f86e2085c7a33","ae80e9185c7e4360bd9543a028ac14cd","5279eafd615845eea995003bb8fe8d67","7de5f9f642fb4fcf8cae9e981459cc4d","4082c847fceb46579db6d022b742a739","b3421196b87a4eaebb19c7fd33885366","07b93659e5c645fd9e28634cb08c0112","9c1e2c1eb7ee4e45b7265875de282213","1d25220066d746258fece7d112f84ddc","4ed53a17bd16442aa0cb070809190db1","467eadcb95544b5d81a87d94bddb108e","6264be3d0fe9414aad8e6a1e6253ac09","6595f2be7afa4cadb284747fd69f6e60","e401a0e70a5c49d3ae2a4ad7327515d4","06ad3471a6c647ec9f1ae978186fbfbf","4368c8c3efba42b4b47ce06ac831841d","f7979b8fb7004f829197257df68647b9","166f1cf6ae7b4926af22830727ed2d08","407b041964d24dbeba8f43a4cfe176db","bfbcaed4dfc54ed38450950dd6283e9e","78c8677ac6ac42f99ff59fb8a96079d7","f116dde79bdf460ea46dcf5dfdb30404","deedd0771f2f429f865e6a5c3d42ed3d","d5c53101d74d48e984d023c3ebae5932","db67bd13180c4cda87f0c3bba0ea42af","71e710a378ff41069475c6ca88085983","06c16b5a9912426d83c3528db45746f8","8054266615d34df8a2cb77e9c7c46590","0c950b7139954cd88b4c0c513072b2e8","cceebd60939940579a5760bc345fd357","9f9f702570854b83b0a266221e5ca56b","f956fa33f57c462999ca9f9c025de0e2","abdc7211b6734b5d8abdb743b1ebe049","063c58ff8fce4b5eafa2fc77f2b526b8","e69b1ae9a9c64049a8997c7b0c715adf","adf2e73477c143148a724e04a051b2ce","86277600ac314e06aedf740b937e107d","6b7173766fba4c3bb43bfa5c542a39ce","b09407c55d0341c5a466c52d3f0e41a5","e7169d645f15449090f84d6d9dc7faf2","56dc37ee89d7441facf1ddbd50d22fb0","80050676ff6c4c2c8cf94ff17e56ec96","889eb17753504829804c8af3037b7c0e","7df26cc62e0047579c70e5e646273cf0","f7fc940020ae42e096180952c0ad91e3","936f2bc0a21140768b19e7e7e1098974","fd4bc3a293ea43d4936814db9e47281d","76db4a9f2c2941708f4e0e666cdb59c0","f11cd2380b6c4fdca5feb5fb38ee5882","f664068cbc2e48488991c66c1d6fef97","1419340faa4c4483be22b92b88c4440c","c50fb46bf19e4299b5e542bc3829c943","dd1384e02cb54b5194ca49800abd1c6d"]},"executionInfo":{"status":"ok","timestamp":1672103498176,"user_tz":-540,"elapsed":254130,"user":{"displayName":"박민정","userId":"09934056534682281977"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["1.0    286839\n","0.0    286839\n","Name: HEARTDISEASE, dtype: int64\n","0.0    71585\n","1.0     4145\n","Name: HEARTDISEASE, dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["max_depth:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ba399598399448a8b56607d210dd58c9"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["min_child_weight:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5bcfd16eee3947c7b2732b33655450ee"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["colsample_bytree:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0df21aba9604450fbffff4ed6d806cb6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["colsample_bytree:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4ed53a17bd16442aa0cb070809190db1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["min_child_weight:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"78c8677ac6ac42f99ff59fb8a96079d7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["colsample_bytree:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f956fa33f57c462999ca9f9c025de0e2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["colsample_bytree:   0%|          | 0/2 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"889eb17753504829804c8af3037b7c0e"}},"metadata":{}}],"source":["max_depth_list = [5, 7]\n","min_child_weight_list = [1, 3]\n","colsample_bytree_list = [.5, .75]\n","\n","X_train, X_test, y_train, y_test = prepare_data_smote()\n","evals = [(X_test, y_test)]\n","\n","xgb_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","for max_depth in tqdm(max_depth_list, desc=\"max_depth\"):\n","    for min_child_weight in tqdm(min_child_weight_list, desc=\"min_child_weight\"):\n","        for colsample_bytree in tqdm(colsample_bytree_list, desc=\"colsample_bytree\"):\n","            xgb_model = XGBClassifier(early_stopping_rounds=100, eval_set=evals, eval_metric=\"logloss\", verbose=True,\n","                                      # 여기에 테스트할 하이퍼 파라미터 추가\n","                                      max_depth=max_depth,\n","                                      min_child_weight=min_child_weight,\n","                                      colsample_bytree=colsample_bytree)\n","            xgb_df = pd.concat([xgb_df, make_eval_df(xgb_model)], axis=0, ignore_index=True)"],"id":"ac3bb2c2-6fbb-438c-ada8-94d136a10a76"},{"cell_type":"code","source":["xgb_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"T0-ghSOVHz7w","executionInfo":{"status":"ok","timestamp":1672103592153,"user_tz":-540,"elapsed":1232,"user":{"displayName":"박민정","userId":"09934056534682281977"}},"outputId":"7497dba8-7853-4331-b487-f099363d0390"},"id":"T0-ghSOVHz7w","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               model  \\\n","0  XGBClassifier(colsample_bytree=0.5, early_stop...   \n","1  XGBClassifier(colsample_bytree=0.75, early_sto...   \n","2  XGBClassifier(colsample_bytree=0.5, early_stop...   \n","3  XGBClassifier(colsample_bytree=0.75, early_sto...   \n","4  XGBClassifier(colsample_bytree=0.5, early_stop...   \n","5  XGBClassifier(colsample_bytree=0.75, early_sto...   \n","6  XGBClassifier(colsample_bytree=0.5, early_stop...   \n","7  XGBClassifier(colsample_bytree=0.75, early_sto...   \n","\n","                      confusion  accuracy  precision    recall        f1  \\\n","0  [[46656 24929] [ 957  3188]]  0.658180   0.113383  0.769119  0.197632   \n","1  [[46647 24938] [ 957  3188]]  0.658062   0.113347  0.769119  0.197577   \n","2  [[46656 24929] [ 957  3188]]  0.658180   0.113383  0.769119  0.197632   \n","3  [[46647 24938] [ 957  3188]]  0.658062   0.113347  0.769119  0.197577   \n","4  [[46656 24929] [ 957  3188]]  0.658180   0.113383  0.769119  0.197632   \n","5  [[46667 24918] [ 959  3186]]  0.658299   0.113365  0.768637  0.197588   \n","6  [[46656 24929] [ 957  3188]]  0.658180   0.113383  0.769119  0.197632   \n","7  [[46666 24919] [ 958  3187]]  0.658299   0.113392  0.768878  0.197637   \n","\n","    roc_auc  \n","0  0.777194  \n","1  0.776600  \n","2  0.777180  \n","3  0.776651  \n","4  0.777194  \n","5  0.776369  \n","6  0.777180  \n","7  0.776538  "],"text/html":["\n","  <div id=\"df-0fd847c4-8b63-4769-af93-8bfb32c4dc6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>XGBClassifier(colsample_bytree=0.5, early_stop...</td>\n","      <td>[[46656 24929] [ 957  3188]]</td>\n","      <td>0.658180</td>\n","      <td>0.113383</td>\n","      <td>0.769119</td>\n","      <td>0.197632</td>\n","      <td>0.777194</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>XGBClassifier(colsample_bytree=0.75, early_sto...</td>\n","      <td>[[46647 24938] [ 957  3188]]</td>\n","      <td>0.658062</td>\n","      <td>0.113347</td>\n","      <td>0.769119</td>\n","      <td>0.197577</td>\n","      <td>0.776600</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>XGBClassifier(colsample_bytree=0.5, early_stop...</td>\n","      <td>[[46656 24929] [ 957  3188]]</td>\n","      <td>0.658180</td>\n","      <td>0.113383</td>\n","      <td>0.769119</td>\n","      <td>0.197632</td>\n","      <td>0.777180</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>XGBClassifier(colsample_bytree=0.75, early_sto...</td>\n","      <td>[[46647 24938] [ 957  3188]]</td>\n","      <td>0.658062</td>\n","      <td>0.113347</td>\n","      <td>0.769119</td>\n","      <td>0.197577</td>\n","      <td>0.776651</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBClassifier(colsample_bytree=0.5, early_stop...</td>\n","      <td>[[46656 24929] [ 957  3188]]</td>\n","      <td>0.658180</td>\n","      <td>0.113383</td>\n","      <td>0.769119</td>\n","      <td>0.197632</td>\n","      <td>0.777194</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>XGBClassifier(colsample_bytree=0.75, early_sto...</td>\n","      <td>[[46667 24918] [ 959  3186]]</td>\n","      <td>0.658299</td>\n","      <td>0.113365</td>\n","      <td>0.768637</td>\n","      <td>0.197588</td>\n","      <td>0.776369</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>XGBClassifier(colsample_bytree=0.5, early_stop...</td>\n","      <td>[[46656 24929] [ 957  3188]]</td>\n","      <td>0.658180</td>\n","      <td>0.113383</td>\n","      <td>0.769119</td>\n","      <td>0.197632</td>\n","      <td>0.777180</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>XGBClassifier(colsample_bytree=0.75, early_sto...</td>\n","      <td>[[46666 24919] [ 958  3187]]</td>\n","      <td>0.658299</td>\n","      <td>0.113392</td>\n","      <td>0.768878</td>\n","      <td>0.197637</td>\n","      <td>0.776538</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fd847c4-8b63-4769-af93-8bfb32c4dc6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0fd847c4-8b63-4769-af93-8bfb32c4dc6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0fd847c4-8b63-4769-af93-8bfb32c4dc6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1c61d190-da19-4641-a9da-2027be9d9c70","outputId":"6d8ad36c-1754-48e5-b20b-ddb5650a9e1b","colab":{"base_uri":"https://localhost:8080/","height":749},"executionInfo":{"status":"ok","timestamp":1672103683965,"user_tz":-540,"elapsed":1092,"user":{"displayName":"박민정","userId":"09934056534682281977"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f98b57a9a30>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x864 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["model = xgb_df.sort_values(\"precision\", ascending=False).loc[0, \"model\"]\n","fig, ax = plt.subplots(figsize = (10, 12))\n","plot_importance(model, ax=ax)"],"id":"1c61d190-da19-4641-a9da-2027be9d9c70"},{"cell_type":"markdown","id":"17ca4d07","metadata":{"id":"17ca4d07"},"source":["## KNN Classifier"]},{"cell_type":"code","source":["n_neighbors_list = [20, 30, 40]\n","\n","knn_df = pd.DataFrame(columns=[\"model\", \"confusion\", \"accuracy\", \"precision\", \"recall\", \"f1\", \"roc_auc\"])\n","\n","for n_neighbors in tqdm(n_neighbors_list, desc=\"n_neighbors\"):\n","    knn_model = KNeighborsClassifier(n_neighbors=n_neighbors)\n","    knn_df = pd.concat([knn_df, make_eval_df(knn_model)], axis=0, ignore_index=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["4317cfe0e1dd4a119bdfdef34ed9cc27","6e723b1932b848bf9e1df08d3f8c2605","9aac4c48a71e4036b68c893d9e3a17a9","fd1b636e29b643328caa5d1c7b3fbfe6","af9ec9eb02a241e492b988e7e116e7c6","b60dcde3212f4051a5ccc0c241975b47","220092d5ce534d7db3a1cee1bd802652","cb2802eca6dd48c2b3bb4cdf757bafe4","ce64dc5cc3f540219be34f0250b7d873","eaabe5ac178a4c5f891e4be17f45df0e","06c889f452994d78be3835777e08b128"]},"id":"3kZJMklFLOtd","executionInfo":{"status":"ok","timestamp":1672105824915,"user_tz":-540,"elapsed":1503950,"user":{"displayName":"박민정","userId":"09934056534682281977"}},"outputId":"654d22ba-979d-4803-eb77-2fbd58428c82"},"id":"3kZJMklFLOtd","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["n_neighbors:   0%|          | 0/3 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4317cfe0e1dd4a119bdfdef34ed9cc27"}},"metadata":{}}]},{"cell_type":"code","source":["knn_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"rDcqU0GkLygJ","executionInfo":{"status":"ok","timestamp":1672105837092,"user_tz":-540,"elapsed":317,"user":{"displayName":"박민정","userId":"09934056534682281977"}},"outputId":"272baf2a-73e0-4aea-b9b8-a03fa7ca1f53"},"id":"rDcqU0GkLygJ","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  model                     confusion  \\\n","0  KNeighborsClassifier(n_neighbors=20)  [[71578     7] [4141     4]]   \n","1  KNeighborsClassifier(n_neighbors=30)  [[71564    21] [4132    13]]   \n","2  KNeighborsClassifier(n_neighbors=40)  [[71559    26] [4131    14]]   \n","\n","   accuracy  precision    recall        f1   roc_auc  \n","0  0.945226   0.363636  0.000965  0.001925  0.713107  \n","1  0.945160   0.382353  0.003136  0.006222  0.720586  \n","2  0.945108   0.350000  0.003378  0.006691  0.731569  "],"text/html":["\n","  <div id=\"df-6278584c-1412-4700-bfe0-b151931f248a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>confusion</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","      <th>roc_auc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KNeighborsClassifier(n_neighbors=20)</td>\n","      <td>[[71578     7] [4141     4]]</td>\n","      <td>0.945226</td>\n","      <td>0.363636</td>\n","      <td>0.000965</td>\n","      <td>0.001925</td>\n","      <td>0.713107</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>KNeighborsClassifier(n_neighbors=30)</td>\n","      <td>[[71564    21] [4132    13]]</td>\n","      <td>0.945160</td>\n","      <td>0.382353</td>\n","      <td>0.003136</td>\n","      <td>0.006222</td>\n","      <td>0.720586</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>KNeighborsClassifier(n_neighbors=40)</td>\n","      <td>[[71559    26] [4131    14]]</td>\n","      <td>0.945108</td>\n","      <td>0.350000</td>\n","      <td>0.003378</td>\n","      <td>0.006691</td>\n","      <td>0.731569</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6278584c-1412-4700-bfe0-b151931f248a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6278584c-1412-4700-bfe0-b151931f248a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6278584c-1412-4700-bfe0-b151931f248a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]}],"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{"height":"calc(100% - 180px)","left":"10px","top":"150px","width":"256px"},"toc_section_display":true,"toc_window_display":false},"varInspector":{"cols":{"lenName":16,"lenType":16,"lenVar":40},"kernels_config":{"python":{"delete_cmd_postfix":"","delete_cmd_prefix":"del ","library":"var_list.py","varRefreshCmd":"print(var_dic_list())"},"r":{"delete_cmd_postfix":") ","delete_cmd_prefix":"rm(","library":"var_list.r","varRefreshCmd":"cat(var_dic_list()) "}},"position":{"height":"498.844px","left":"1545px","right":"20px","top":"142px","width":"350px"},"types_to_exclude":["module","function","builtin_function_or_method","instance","_Feature"],"window_display":false},"colab":{"provenance":[{"file_id":"1yYy4Cl5YZq0oaQI0FNGTqHCJ9l0qww5d","timestamp":1672100839784}],"toc_visible":true},"widgets":{"application/vnd.jupyter.widget-state+json":{"ba399598399448a8b56607d210dd58c9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9f6e834faed3429eb2ba9df6dd4f94a2","IPY_MODEL_171f55032ed24fd3ba21e1aa61ef2f43","IPY_MODEL_a7545db2774b4e9d9d6df8be7dcdc243"],"layout":"IPY_MODEL_7514986b8d6347ffba2ef61003127ce5"}},"9f6e834faed3429eb2ba9df6dd4f94a2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5947ffa6424d4b5b87072e5b8f281964","placeholder":"​","style":"IPY_MODEL_0189f161a5fd4e12be7d354eb718768e","value":"max_depth: 100%"}},"171f55032ed24fd3ba21e1aa61ef2f43":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_78f1006f018946579cbff69f6d38cc26","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9a2746ec227a45e8933c2974b0981b85","value":2}},"a7545db2774b4e9d9d6df8be7dcdc243":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8ae63feed1794c729c6c9742b7335f68","placeholder":"​","style":"IPY_MODEL_3a09c96d9e3c47599150ce7b6ba23d27","value":" 2/2 [04:11&lt;00:00, 126.34s/it]"}},"7514986b8d6347ffba2ef61003127ce5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5947ffa6424d4b5b87072e5b8f281964":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0189f161a5fd4e12be7d354eb718768e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"78f1006f018946579cbff69f6d38cc26":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9a2746ec227a45e8933c2974b0981b85":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8ae63feed1794c729c6c9742b7335f68":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3a09c96d9e3c47599150ce7b6ba23d27":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5bcfd16eee3947c7b2732b33655450ee":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f1fc063dbd47496eafea104e7e96898c","IPY_MODEL_befe204249f34250b1f2e2fc32b524dc","IPY_MODEL_20c750654d884a59b5e3e98b64da07de"],"layout":"IPY_MODEL_10e1ba4f7eab4838a5daf7d398dd57cf"}},"f1fc063dbd47496eafea104e7e96898c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_488ec24cc09f42f59cab1dbb59204741","placeholder":"​","style":"IPY_MODEL_f5157b8c03884294b7170d1b73715483","value":"min_child_weight: 100%"}},"befe204249f34250b1f2e2fc32b524dc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_abe902e11ea4472ab9db08bf46d80da0","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_583061bea71549c48b4e63506b050cfd","value":2}},"20c750654d884a59b5e3e98b64da07de":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cdcd2a8f3488424da82bfd09b5b601d4","placeholder":"​","style":"IPY_MODEL_5f40042576be40f685988c3c1c6bedba","value":" 2/2 [02:02&lt;00:00, 60.94s/it]"}},"10e1ba4f7eab4838a5daf7d398dd57cf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"488ec24cc09f42f59cab1dbb59204741":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f5157b8c03884294b7170d1b73715483":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"abe902e11ea4472ab9db08bf46d80da0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"583061bea71549c48b4e63506b050cfd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cdcd2a8f3488424da82bfd09b5b601d4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5f40042576be40f685988c3c1c6bedba":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0df21aba9604450fbffff4ed6d806cb6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6607f6dbaf434a528673c670d7fa8f57","IPY_MODEL_f5e2df3b9221476ba04f86e2085c7a33","IPY_MODEL_ae80e9185c7e4360bd9543a028ac14cd"],"layout":"IPY_MODEL_5279eafd615845eea995003bb8fe8d67"}},"6607f6dbaf434a528673c670d7fa8f57":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7de5f9f642fb4fcf8cae9e981459cc4d","placeholder":"​","style":"IPY_MODEL_4082c847fceb46579db6d022b742a739","value":"colsample_bytree: 100%"}},"f5e2df3b9221476ba04f86e2085c7a33":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b3421196b87a4eaebb19c7fd33885366","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_07b93659e5c645fd9e28634cb08c0112","value":2}},"ae80e9185c7e4360bd9543a028ac14cd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9c1e2c1eb7ee4e45b7265875de282213","placeholder":"​","style":"IPY_MODEL_1d25220066d746258fece7d112f84ddc","value":" 2/2 [01:03&lt;00:00, 33.12s/it]"}},"5279eafd615845eea995003bb8fe8d67":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7de5f9f642fb4fcf8cae9e981459cc4d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4082c847fceb46579db6d022b742a739":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b3421196b87a4eaebb19c7fd33885366":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"07b93659e5c645fd9e28634cb08c0112":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9c1e2c1eb7ee4e45b7265875de282213":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1d25220066d746258fece7d112f84ddc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4ed53a17bd16442aa0cb070809190db1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_467eadcb95544b5d81a87d94bddb108e","IPY_MODEL_6264be3d0fe9414aad8e6a1e6253ac09","IPY_MODEL_6595f2be7afa4cadb284747fd69f6e60"],"layout":"IPY_MODEL_e401a0e70a5c49d3ae2a4ad7327515d4"}},"467eadcb95544b5d81a87d94bddb108e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_06ad3471a6c647ec9f1ae978186fbfbf","placeholder":"​","style":"IPY_MODEL_4368c8c3efba42b4b47ce06ac831841d","value":"colsample_bytree: 100%"}},"6264be3d0fe9414aad8e6a1e6253ac09":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f7979b8fb7004f829197257df68647b9","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_166f1cf6ae7b4926af22830727ed2d08","value":2}},"6595f2be7afa4cadb284747fd69f6e60":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_407b041964d24dbeba8f43a4cfe176db","placeholder":"​","style":"IPY_MODEL_bfbcaed4dfc54ed38450950dd6283e9e","value":" 2/2 [00:58&lt;00:00, 30.46s/it]"}},"e401a0e70a5c49d3ae2a4ad7327515d4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"06ad3471a6c647ec9f1ae978186fbfbf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4368c8c3efba42b4b47ce06ac831841d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f7979b8fb7004f829197257df68647b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"166f1cf6ae7b4926af22830727ed2d08":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"407b041964d24dbeba8f43a4cfe176db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bfbcaed4dfc54ed38450950dd6283e9e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"78c8677ac6ac42f99ff59fb8a96079d7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f116dde79bdf460ea46dcf5dfdb30404","IPY_MODEL_deedd0771f2f429f865e6a5c3d42ed3d","IPY_MODEL_d5c53101d74d48e984d023c3ebae5932"],"layout":"IPY_MODEL_db67bd13180c4cda87f0c3bba0ea42af"}},"f116dde79bdf460ea46dcf5dfdb30404":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_71e710a378ff41069475c6ca88085983","placeholder":"​","style":"IPY_MODEL_06c16b5a9912426d83c3528db45746f8","value":"min_child_weight: 100%"}},"deedd0771f2f429f865e6a5c3d42ed3d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8054266615d34df8a2cb77e9c7c46590","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0c950b7139954cd88b4c0c513072b2e8","value":2}},"d5c53101d74d48e984d023c3ebae5932":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cceebd60939940579a5760bc345fd357","placeholder":"​","style":"IPY_MODEL_9f9f702570854b83b0a266221e5ca56b","value":" 2/2 [02:08&lt;00:00, 64.08s/it]"}},"db67bd13180c4cda87f0c3bba0ea42af":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"71e710a378ff41069475c6ca88085983":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"06c16b5a9912426d83c3528db45746f8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8054266615d34df8a2cb77e9c7c46590":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0c950b7139954cd88b4c0c513072b2e8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cceebd60939940579a5760bc345fd357":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9f9f702570854b83b0a266221e5ca56b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f956fa33f57c462999ca9f9c025de0e2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_abdc7211b6734b5d8abdb743b1ebe049","IPY_MODEL_063c58ff8fce4b5eafa2fc77f2b526b8","IPY_MODEL_e69b1ae9a9c64049a8997c7b0c715adf"],"layout":"IPY_MODEL_adf2e73477c143148a724e04a051b2ce"}},"abdc7211b6734b5d8abdb743b1ebe049":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_86277600ac314e06aedf740b937e107d","placeholder":"​","style":"IPY_MODEL_6b7173766fba4c3bb43bfa5c542a39ce","value":"colsample_bytree: 100%"}},"063c58ff8fce4b5eafa2fc77f2b526b8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b09407c55d0341c5a466c52d3f0e41a5","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e7169d645f15449090f84d6d9dc7faf2","value":2}},"e69b1ae9a9c64049a8997c7b0c715adf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_56dc37ee89d7441facf1ddbd50d22fb0","placeholder":"​","style":"IPY_MODEL_80050676ff6c4c2c8cf94ff17e56ec96","value":" 2/2 [01:06&lt;00:00, 34.33s/it]"}},"adf2e73477c143148a724e04a051b2ce":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86277600ac314e06aedf740b937e107d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b7173766fba4c3bb43bfa5c542a39ce":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b09407c55d0341c5a466c52d3f0e41a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e7169d645f15449090f84d6d9dc7faf2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"56dc37ee89d7441facf1ddbd50d22fb0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80050676ff6c4c2c8cf94ff17e56ec96":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"889eb17753504829804c8af3037b7c0e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7df26cc62e0047579c70e5e646273cf0","IPY_MODEL_f7fc940020ae42e096180952c0ad91e3","IPY_MODEL_936f2bc0a21140768b19e7e7e1098974"],"layout":"IPY_MODEL_fd4bc3a293ea43d4936814db9e47281d"}},"7df26cc62e0047579c70e5e646273cf0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_76db4a9f2c2941708f4e0e666cdb59c0","placeholder":"​","style":"IPY_MODEL_f11cd2380b6c4fdca5feb5fb38ee5882","value":"colsample_bytree: 100%"}},"f7fc940020ae42e096180952c0ad91e3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f664068cbc2e48488991c66c1d6fef97","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1419340faa4c4483be22b92b88c4440c","value":2}},"936f2bc0a21140768b19e7e7e1098974":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c50fb46bf19e4299b5e542bc3829c943","placeholder":"​","style":"IPY_MODEL_dd1384e02cb54b5194ca49800abd1c6d","value":" 2/2 [01:02&lt;00:00, 32.59s/it]"}},"fd4bc3a293ea43d4936814db9e47281d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"76db4a9f2c2941708f4e0e666cdb59c0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f11cd2380b6c4fdca5feb5fb38ee5882":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f664068cbc2e48488991c66c1d6fef97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1419340faa4c4483be22b92b88c4440c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c50fb46bf19e4299b5e542bc3829c943":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dd1384e02cb54b5194ca49800abd1c6d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4317cfe0e1dd4a119bdfdef34ed9cc27":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6e723b1932b848bf9e1df08d3f8c2605","IPY_MODEL_9aac4c48a71e4036b68c893d9e3a17a9","IPY_MODEL_fd1b636e29b643328caa5d1c7b3fbfe6"],"layout":"IPY_MODEL_af9ec9eb02a241e492b988e7e116e7c6"}},"6e723b1932b848bf9e1df08d3f8c2605":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b60dcde3212f4051a5ccc0c241975b47","placeholder":"​","style":"IPY_MODEL_220092d5ce534d7db3a1cee1bd802652","value":"n_neighbors: 100%"}},"9aac4c48a71e4036b68c893d9e3a17a9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb2802eca6dd48c2b3bb4cdf757bafe4","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ce64dc5cc3f540219be34f0250b7d873","value":3}},"fd1b636e29b643328caa5d1c7b3fbfe6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_eaabe5ac178a4c5f891e4be17f45df0e","placeholder":"​","style":"IPY_MODEL_06c889f452994d78be3835777e08b128","value":" 3/3 [25:03&lt;00:00, 502.89s/it]"}},"af9ec9eb02a241e492b988e7e116e7c6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b60dcde3212f4051a5ccc0c241975b47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"220092d5ce534d7db3a1cee1bd802652":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cb2802eca6dd48c2b3bb4cdf757bafe4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ce64dc5cc3f540219be34f0250b7d873":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"eaabe5ac178a4c5f891e4be17f45df0e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"06c889f452994d78be3835777e08b128":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"gpuClass":"standard"},"nbformat":4,"nbformat_minor":5}