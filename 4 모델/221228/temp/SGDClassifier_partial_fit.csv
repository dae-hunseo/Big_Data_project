0
SGDClassifier(loss='log_loss')
"SGDClassifier(alpha=0.001, loss='log_loss')"
"SGDClassifier(alpha=0.01, loss='log_loss')"
"SGDClassifier(alpha=0.1, loss='log_loss')"
"SGDClassifier(loss='log_loss', penalty='l1')"
"SGDClassifier(alpha=0.001, loss='log_loss', penalty='l1')"
"SGDClassifier(alpha=0.01, loss='log_loss', penalty='l1')"
"SGDClassifier(loss='log_loss', penalty='elasticnet')"
"SGDClassifier(alpha=0.001, loss='log_loss', penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='log_loss', penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='log_loss', penalty='elasticnet')"
"SGDClassifier(loss='log_loss', penalty=None)"
"SGDClassifier(alpha=0.001, loss='log_loss', penalty=None)"
"SGDClassifier(alpha=0.01, loss='log_loss', penalty=None)"
"SGDClassifier(alpha=0.1, loss='log_loss', penalty=None)"
SGDClassifier(loss='modified_huber')
"SGDClassifier(alpha=0.001, loss='modified_huber')"
"SGDClassifier(alpha=0.01, loss='modified_huber')"
"SGDClassifier(alpha=0.1, loss='modified_huber')"
"SGDClassifier(loss='modified_huber', penalty='l1')"
"SGDClassifier(alpha=0.001, loss='modified_huber', penalty='l1')"
"SGDClassifier(alpha=0.01, loss='modified_huber', penalty='l1')"
"SGDClassifier(loss='modified_huber', penalty='elasticnet')"
"SGDClassifier(alpha=0.001, loss='modified_huber', penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='modified_huber', penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='modified_huber', penalty='elasticnet')"
"SGDClassifier(loss='modified_huber', penalty=None)"
"SGDClassifier(alpha=0.001, loss='modified_huber', penalty=None)"
"SGDClassifier(alpha=0.01, loss='modified_huber', penalty=None)"
"SGDClassifier(alpha=0.1, loss='modified_huber', penalty=None)"
SGDClassifier(loss='squared_hinge')
"SGDClassifier(alpha=0.001, loss='squared_hinge')"
"SGDClassifier(alpha=0.01, loss='squared_hinge')"
"SGDClassifier(alpha=0.1, loss='squared_hinge')"
"SGDClassifier(loss='squared_hinge', penalty='l1')"
"SGDClassifier(alpha=0.001, loss='squared_hinge', penalty='l1')"
"SGDClassifier(alpha=0.01, loss='squared_hinge', penalty='l1')"
"SGDClassifier(loss='squared_hinge', penalty='elasticnet')"
"SGDClassifier(alpha=0.001, loss='squared_hinge', penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='squared_hinge', penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='squared_hinge', penalty='elasticnet')"
"SGDClassifier(loss='squared_hinge', penalty=None)"
"SGDClassifier(alpha=0.001, loss='squared_hinge', penalty=None)"
"SGDClassifier(alpha=0.01, loss='squared_hinge', penalty=None)"
"SGDClassifier(alpha=0.1, loss='squared_hinge', penalty=None)"
SGDClassifier(loss='perceptron')
"SGDClassifier(alpha=0.01, loss='perceptron')"
"SGDClassifier(alpha=0.1, loss='perceptron')"
"SGDClassifier(loss='perceptron', penalty='l1')"
"SGDClassifier(loss='perceptron', penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='perceptron', penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='perceptron', penalty=None)"
SGDClassifier(loss='squared_error')
"SGDClassifier(alpha=0.001, loss='squared_error')"
"SGDClassifier(alpha=0.01, loss='squared_error')"
"SGDClassifier(alpha=0.1, loss='squared_error')"
"SGDClassifier(loss='squared_error', penalty='l1')"
"SGDClassifier(alpha=0.001, loss='squared_error', penalty='l1')"
"SGDClassifier(alpha=0.01, loss='squared_error', penalty='l1')"
"SGDClassifier(loss='squared_error', penalty='elasticnet')"
"SGDClassifier(alpha=0.001, loss='squared_error', penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='squared_error', penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='squared_error', penalty='elasticnet')"
"SGDClassifier(loss='squared_error', penalty=None)"
"SGDClassifier(alpha=0.001, loss='squared_error', penalty=None)"
"SGDClassifier(alpha=0.01, loss='squared_error', penalty=None)"
"SGDClassifier(alpha=0.1, loss='squared_error', penalty=None)"
SGDClassifier(loss='squared_epsilon_insensitive')
"SGDClassifier(alpha=0.001, loss='squared_epsilon_insensitive')"
"SGDClassifier(alpha=0.01, loss='squared_epsilon_insensitive')"
"SGDClassifier(alpha=0.1, loss='squared_epsilon_insensitive')"
"SGDClassifier(loss='squared_epsilon_insensitive', penalty='l1')"
"SGDClassifier(alpha=0.001, loss='squared_epsilon_insensitive', penalty='l1')"
"SGDClassifier(alpha=0.01, loss='squared_epsilon_insensitive', penalty='l1')"
"SGDClassifier(loss='squared_epsilon_insensitive', penalty='elasticnet')"
"SGDClassifier(alpha=0.001, loss='squared_epsilon_insensitive',
              penalty='elasticnet')"
"SGDClassifier(alpha=0.01, loss='squared_epsilon_insensitive',
              penalty='elasticnet')"
"SGDClassifier(alpha=0.1, loss='squared_epsilon_insensitive',
              penalty='elasticnet')"
"SGDClassifier(loss='squared_epsilon_insensitive', penalty=None)"
"SGDClassifier(alpha=0.001, loss='squared_epsilon_insensitive', penalty=None)"
"SGDClassifier(alpha=0.01, loss='squared_epsilon_insensitive', penalty=None)"
"SGDClassifier(alpha=0.1, loss='squared_epsilon_insensitive', penalty=None)"
